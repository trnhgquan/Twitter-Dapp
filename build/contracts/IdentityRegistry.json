{
  "contractName": "IdentityRegistry",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_identity",
          "type": "address"
        },
        {
          "name": "claimType",
          "type": "uint256"
        }
      ],
      "name": "claimIsValid",
      "outputs": [
        {
          "name": "claimValid",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "typesRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "identity",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "claimTypes",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "sig",
          "type": "bytes"
        },
        {
          "name": "dataHash",
          "type": "bytes32"
        }
      ],
      "name": "getRecoveredAddress",
      "outputs": [
        {
          "name": "addr",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_trustedIssuersRegistry",
          "type": "address"
        },
        {
          "name": "_claimTypesRegistry",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "identity",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "IdentityRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "identity",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "IdentityRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_claimTypesRegistry",
          "type": "address"
        }
      ],
      "name": "ClaimTypesRegistrySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_trustedIssuersRegistry",
          "type": "address"
        }
      ],
      "name": "TrustedIssuersRegistrySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_identity",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "claimType",
          "type": "uint256"
        }
      ],
      "name": "ClaimValid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_identity",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "claimType",
          "type": "uint256"
        }
      ],
      "name": "ClaimInvalid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        },
        {
          "name": "_identity",
          "type": "address"
        }
      ],
      "name": "registerIdentity",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "removeIdentity",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_claimTypesRegistry",
          "type": "address"
        }
      ],
      "name": "setClaimTypesRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_trustedIssuersRegistry",
          "type": "address"
        }
      ],
      "name": "setTrustedIssuerRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_identity",
          "type": "address"
        }
      ],
      "name": "checkValidIdentity",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_claimTypesRegistry\",\"type\":\"address\"}],\"name\":\"setClaimTypesRegistry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"removeIdentity\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"},{\"name\":\"_identity\",\"type\":\"address\"}],\"name\":\"registerIdentity\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_identity\",\"type\":\"address\"},{\"name\":\"claimType\",\"type\":\"uint256\"}],\"name\":\"claimIsValid\",\"outputs\":[{\"name\":\"claimValid\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"typesRegistry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"identity\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_identity\",\"type\":\"address\"}],\"name\":\"checkValidIdentity\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"claimTypes\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"sig\",\"type\":\"bytes\"},{\"name\":\"dataHash\",\"type\":\"bytes32\"}],\"name\":\"getRecoveredAddress\",\"outputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_trustedIssuersRegistry\",\"type\":\"address\"}],\"name\":\"setTrustedIssuerRegistry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_trustedIssuersRegistry\",\"type\":\"address\"},{\"name\":\"_claimTypesRegistry\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"identity\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"IdentityRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"identity\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"IdentityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_claimTypesRegistry\",\"type\":\"address\"}],\"name\":\"ClaimTypesRegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_trustedIssuersRegistry\",\"type\":\"address\"}],\"name\":\"TrustedIssuersRegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_identity\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"claimType\",\"type\":\"uint256\"}],\"name\":\"ClaimValid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_identity\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"claimType\",\"type\":\"uint256\"}],\"name\":\"ClaimInvalid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"checkValidIdentity(address)\":{\"params\":{\"_identity\":\"an address of user\"},\"return\":\"true or false\"},\"claimIsValid(address,uint256)\":{\"params\":{\"_identity\":\"ClaimHolder contract address\",\"claimType\":\"type of given claim by ClaimHolder\"},\"return\":\"true or false\"},\"getRecoveredAddress(bytes,bytes32)\":{\"params\":{\"dataHash\":\"hash of data in bytes32\",\"sig\":\"signed data in bytes32\"},\"return\":\"address of signed data\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"registerIdentity(uint256,address)\":{\"params\":{\"_identity\":\"The address of the user's identity contract (ClaimHolder)\",\"index\":\"an user id\"},\"return\":\"true or false\"},\"removeIdentity(uint256)\":{\"params\":{\"index\":\"index an user id that will be remove\"},\"return\":\"true or false\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"setClaimTypesRegistry(address)\":{\"params\":{\"_claimTypesRegistry\":\"an address of ClaimTypeRegistry\"}},\"setTrustedIssuerRegistry(address)\":{\"params\":{\"_trustedIssuersRegistry\":\"an address of TrustedIssuerRegistry\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"checkValidIdentity(address)\":{\"notice\":\"Check valid identity contract\"},\"claimIsValid(address,uint256)\":{\"notice\":\"Check valid or invalid of given claim by ClaimHolder\"},\"getRecoveredAddress(bytes,bytes32)\":{\"notice\":\"Get address of signed data\"},\"registerIdentity(uint256,address)\":{\"notice\":\"Register an identity contract for user account\"},\"removeIdentity(uint256)\":{\"notice\":\"Remove an identity contract\"},\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"setClaimTypesRegistry(address)\":{\"notice\":\"Set ClaimTypeRegistry\"},\"setTrustedIssuerRegistry(address)\":{\"notice\":\"Set TrustedIssuerRegistry\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/IdentityRegistry.sol\":\"IdentityRegistry\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/ClaimHolder.sol\":{\"keccak256\":\"0xcb603c58efda7c1485c8af8255094884c502663df127ed4ff440a078f963359e\",\"urls\":[\"bzzr://107fe031bd5e714f0c6970f074d93f3f1908a5ecc13bf23d361ea23d0c879629\"]},\"/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/ClaimTypesRegistry.sol\":{\"keccak256\":\"0x9d3690885dac1ec0b51c9217e5ea7d3de9e5d334a1d2c3ad4483e1c5a2d65c1a\",\"urls\":[\"bzzr://993705ba070073bbd6dce0a3fe463fb423a71510c20533739dd181e8f51b5ce8\"]},\"/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/ClaimVerifier.sol\":{\"keccak256\":\"0xcc301b1884072e0fb0257417d6e78a790b3949d570f2cd9887a4b04e7d1b95a0\",\"urls\":[\"bzzr://633aaa49dfb37a22a675a7f38ff3b2174e9d28ad80c838868883e407eac42a7a\"]},\"/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/ERC725.sol\":{\"keccak256\":\"0xc1b642d3ad9ee1dfa446571b488f005ade7559337cd3370a4cbb2a7e40ed0bbd\",\"urls\":[\"bzzr://d1744bb03cb0045f16ad8c7db6d5f65ff6df97723dabee66a8affddd84bf643c\"]},\"/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/ERC735.sol\":{\"keccak256\":\"0xa50a048d08fd6f71d897d8b7ea241d079fd2154116c322997fad34bb839531fa\",\"urls\":[\"bzzr://8b01deef907aaebbbe0b12f26d575527427c9abf5fe255f2aba02c0ea503ee14\"]},\"/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/IdentityRegistry.sol\":{\"keccak256\":\"0x744b66a87a76a15ddd75bc33548cf99c42be04b758ffb001b6589d11ff315e47\",\"urls\":[\"bzzr://429e2601cb0641cc7185db7f3f834879b7127240f0ebd2739e17533ef9e5ca7c\"]},\"/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/KeyHolder.sol\":{\"keccak256\":\"0x6abb237124fa376d146e463f11a352c5474792d5f59e1e08388e8138df8f5e85\",\"urls\":[\"bzzr://633409658c1d6f1e0586bd59bade2f123801de67dd5c7a3c19adc22ec66cbb35\"]},\"/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/TrustedIssuersRegistry.sol\":{\"keccak256\":\"0xe5895f9a774c292807d5b3984c6e538461c0cce3ce5291acba1f16d37641ccbc\",\"urls\":[\"bzzr://cd122d1d4334959e43627e3ef363213930d2a750139ba564982d80524d6fa081\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x973e50d102a48ea6e132f18793b096910ed508656e89706744112cbb4ecaa9dd\",\"urls\":[\"bzzr://3b4ace05d2fa540ae11da5a4658f0993f4a364737d678d6ec96f12ef6caeeb7d\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051604080611a2a8339810180604052810190808051906020019092919080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a381600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff167f1b98cb79e6f73020175fe87333f1b91ad6a881519c0afe30340c2599b2b4bde060405160405180910390a280600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f19d81f7cb533715237b1db77a43b32bca3f63b44f684cbcd6e321e450eabb4f860405160405180910390a25050611818806102126000396000f3006080604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631c2d74f2146100d5578063331cca2114610118578063389c980e1461015d578063715018a6146101c25780638da5cb5b146101d95780638f32d59b146102305780639fecd5541461025f5780639ff04d33146102c4578063ac37eebb1461031b578063b760dab914610388578063c1edcdc1146103e3578063c3b129e314610424578063f2fde38b146104db578063f6b4c5301461051e575b600080fd5b3480156100e157600080fd5b50610116600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610561565b005b34801561012457600080fd5b50610143600480360381019080803590602001909291905050506105fb565b604051808215151515815260200191505060405180910390f35b34801561016957600080fd5b506101a860048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610735565b604051808215151515815260200191505060405180910390f35b3480156101ce57600080fd5b506101d761098f565b005b3480156101e557600080fd5b506101ee610a61565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561023c57600080fd5b50610245610a8a565b604051808215151515815260200191505060405180910390f35b34801561026b57600080fd5b506102aa600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ae1565b604051808215151515815260200191505060405180910390f35b3480156102d057600080fd5b506102d96112e8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561032757600080fd5b506103466004803603810190808035906020019092919050505061130e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561039457600080fd5b506103c9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611341565b604051808215151515815260200191505060405180910390f35b3480156103ef57600080fd5b5061040e600480360381019080803590602001909291905050506114cc565b6040518082815260200191505060405180910390f35b34801561043057600080fd5b50610499600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929080356000191690602001909291905050506114ef565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104e757600080fd5b5061051c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115c7565b005b34801561052a57600080fd5b5061055f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115e6565b005b610569610a8a565b151561057457600080fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f19d81f7cb533715237b1db77a43b32bca3f63b44f684cbcd6e321e450eabb4f860405160405180910390a250565b6000610605610a8a565b151561061057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561067f57600080fd5b816004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff06dfe9062e9317cd357560ea667d65a9b032f1a674c04e99653e894e145c8fa60405160405180910390a36004600083815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560019050919050565b600081600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610803576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f636f6e747261637420616464726573732063616e27742062652061207a65726f81526020017f206164647265737300000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b61080c81611341565b1515610880576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f596f757220436c61696d206973206e6f742076616c696420666f72204b59430081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166004600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156108ee57600080fd5b826004600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838373ffffffffffffffffffffffffffffffffffffffff167f22bfb6218489c201b6ec174e5dd0380b7877b3a2d12eed0542f6b5e8ef712f2860405160405180910390a3600191505092915050565b610997610a8a565b15156109a257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b600080600080606080600080600080600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9dd24c56040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610b7957600080fd5b505af1158015610b8d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015610bb757600080fd5b810190808051640100000000811115610bcf57600080fd5b82810190506020810184811115610be557600080fd5b8151856020820283011164010000000082111715610c0257600080fd5b505092919050505060019080519060200190610c1f92919061177a565b50600095505b60018054905086101561126757600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166391b1fdeb600188815481101515610c7f57fe5b90600052602060002001546040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b158015610cdc57600080fd5b505af1158015610cf0573d6000803e3d6000fd5b505050506040513d6020811015610d0657600080fd5b8101908080519060200190929190505050600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168d604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140182815260200192505050604051809103902094508d73ffffffffffffffffffffffffffffffffffffffff1663c9100bcb866040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050600060405180830381600087803b158015610e4b57600080fd5b505af1158015610e5f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060c0811015610e8957600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051640100000000811115610ebf57600080fd5b82810190506020810184811115610ed557600080fd5b8151856001820283011164010000000082111715610ef257600080fd5b50509291906020018051640100000000811115610f0e57600080fd5b82810190506020810184811115610f2457600080fd5b8151856001820283011164010000000082111715610f4157600080fd5b50509291906020018051640100000000811115610f5d57600080fd5b82810190506020810184811115610f7357600080fd5b8151856001820283011164010000000082111715610f9057600080fd5b505092919050505050809b50819c50829d50839e50849f5050505050508d8d88604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140183815260200182805190602001908083835b60208310151561102c5780518252602082019150602081019050602083039250611007565b6001836020036101000a0380198251168184511680821785525050505050509050019350505050604051809103902093508360405180807f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250601c018260001916600019168152602001915050604051809103902092506110af88846114ef565b915081604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140191505060405180910390209050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d202158d8260036040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180836000191660001916815260200182815260200192505050602060405180830381600087803b1580156111a657600080fd5b505af11580156111ba573d6000803e3d6000fd5b505050506040513d60208110156111d057600080fd5b81019080805190602001909291905050501561125a577f5637aa6b77cde2de563765b75a65099af73d3bf22cb9d089a64a01777823208e8e8e604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a160019b506112d7565b8580600101965050610c25565b7fc1e461cfcaa9ff5efbb053582a325fbfebec1d94ac7e9d9958ee7f74c2b6b5588e8e604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a160009b505b505050505050505050505092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166316f91d136040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b1580156113ca57600080fd5b505af11580156113de573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561140857600080fd5b81019080805164010000000081111561142057600080fd5b8281019050602081018481111561143657600080fd5b815185602082028301116401000000008211171561145357600080fd5b50509291905050506005908051906020019061147092919061177a565b50600090505b6005805490508110156114c1576114a68360058381548110151561149657fe5b9060005260206000200154610ae1565b156114b457600191506114c6565b8080600101915050611476565b600091505b50919050565b6005818154811015156114db57fe5b906000526020600020016000915090505481565b60008060008060006041875114151561150b57600094506115bd565b6020870151935060408701519250606087015160001a9150601b8260ff16101561153657601b820191505b600186838686604051600081526020016040526040518085600019166000191681526020018460ff1660ff1681526020018360001916600019168152602001826000191660001916815260200194505050505060206040516020810390808403906000865af11580156115ad573d6000803e3d6000fd5b5050506020604051035190508094505b5050505092915050565b6115cf610a8a565b15156115da57600080fd5b6115e381611680565b50565b6115ee610a8a565b15156115f957600080fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f1b98cb79e6f73020175fe87333f1b91ad6a881519c0afe30340c2599b2b4bde060405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156116bc57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8280548282559060005260206000209081019282156117b6579160200282015b828111156117b557825182559160200191906001019061179a565b5b5090506117c391906117c7565b5090565b6117e991905b808211156117e55760008160009055506001016117cd565b5090565b905600a165627a7a7230582089dd02fa5f1699fb5b107cbaee6eb6fa1221bb44015546c801d420f7e70eaa5b0029",
  "deployedBytecode": "",
  "sourceMap": "185:3615:5:-;;;1420:350;8:9:-1;5:2;;;30:1;27;20:12;5:2;1420:350:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;518:10:13;509:6;;:19;;;;;;;;;;;;;;;;;;572:6;;;;;;;;;;;539:40;;568:1;539:40;;;;;;;;;;;;1552:23:5;1511:15;;:65;;;;;;;;;;;;;;;;;;1617:23;1591:50;;;;;;;;;;;;1686:19;1651:13;;:55;;;;;;;;;;;;;;;;;;1743:19;1721:42;;;;;;;;;;;;1420:350;;185:3615;;;;;;",
  "deployedSourceMap": "185:3615:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2772:206;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2772:206:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;2416:233;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2416:233:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1991:277;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1991:277:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1273:127:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1273:127:13;;;;;;639:70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;639:70:13;;;;;;;;;;;;;;;;;;;;;;;;;;;926:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;926:83:13;;;;;;;;;;;;;;;;;;;;;;;;;;;581:1442:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;581:1442:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;460:39:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;460:39:5;;;;;;;;;;;;;;;;;;;;;;;;;;;316:47;;8:9:-1;5:2;;;30:1;27;20:12;5:2;316:47:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3480:318;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3480:318:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;426:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;426:27:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2209:655:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2209:655:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1561:101:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1561:101:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;3113:231:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3113:231:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;2772:206;824:9:13;:7;:9::i;:::-;816:18;;;;;;;;2894:19:5;2859:13;;:55;;;;;;;;;;;;;;;;;;2951:19;2929:42;;;;;;;;;;;;2772:206;:::o;2416:233::-;2481:4;824:9:13;:7;:9::i;:::-;816:18;;;;;;;;2532:1:5;2505:29;;:8;:15;2514:5;2505:15;;;;;;;;;;;;;;;;;;;;;:29;;;;2497:38;;;;;;;;2583:5;2566:8;:15;2575:5;2566:15;;;;;;;;;;;;;;;;;;;;;2550:39;;;;;;;;;;;;2606:8;:15;2615:5;2606:15;;;;;;;;;;;;2599:22;;;;;;;;;;;2638:4;2631:11;;2416:233;;;:::o;1991:277::-;2098:4;2071:9;1059:1;1030:31;;:17;:31;;;;1022:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1124:37;1143:17;1124:18;:37::i;:::-;1116:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2149:1;2122:29;;:8;:15;2131:5;2122:15;;;;;;;;;;;;;;;;;;;;;:29;;;2114:38;;;;;;;;2180:9;2162:8;:15;2171:5;2162:15;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;2234:5;2223:9;2204:36;;;;;;;;;;;;2257:4;2250:11;;1991:277;;;;;:::o;1273:127:13:-;824:9;:7;:9::i;:::-;816:18;;;;;;;;1367:1;1330:40;;1351:6;;;;;;;;;;;1330:40;;;;;;;;;;;;1393:1;1376:6;;:19;;;;;;;;;;;;;;;;;;1273:127::o;639:70::-;676:7;698:6;;;;;;;;;;;691:13;;639:70;:::o;926:83::-;965:4;998:6;;;;;;;;;;;984:20;;:10;:20;;;977:27;;926:83;:::o;581:1442:2:-;682:15;713:22;745:14;769;793:16;819:17;913:6;1112:15;1313:16;1383:20;1522:17;1641:18;863:15;;;;;;;;;;;:33;;;:35;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;863:35:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;863:35:2;;;;;;39:16:-1;36:1;17:17;2:54;863:35:2;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;863:35:2;;;;;;20:11:-1;15:3;12:20;9:2;;;45:1;42;35:12;9:2;73:11;68:3;64:21;57:28;;126:4;121:3;117:14;163:9;145:16;142:31;139:2;;;186:1;183;176:12;139:2;224:3;218:10;339:9;333:2;319:12;315:21;297:16;293:44;290:59;268:11;254:12;251:29;239:119;236:2;;;371:1;368;361:12;236:2;0:383;;863:35:2;;;;;;847:13;:51;;;;;;;;;;;;:::i;:::-;;922:1;913:10;;909:1037;927:13;:20;;;;925:1;:22;909:1037;;;989:15;;;;;;;;;;;:32;;;1022:13;1036:1;1022:16;;;;;;;;;;;;;;;;;;989:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;989:50:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;989:50:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;989:50:2;;;;;;;;;;;;;;;;968:18;;:71;;;;;;;;;;;;;;;;;;1140:18;;;;;;;;;;;1160:9;1130:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1112:58;;1271:9;:18;;;1290:7;1271:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1271:27:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1271:27:2;;;;;;39:16:-1;36:1;17:17;2:54;1271:27:2;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:3;8;5:12;2:2;;;30:1;27;20:12;2:2;1271:27:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20:11:-1;15:3;12:20;9:2;;;45:1;42;35:12;9:2;73:11;68:3;64:21;57:28;;126:4;121:3;117:14;163:9;145:16;142:31;139:2;;;186:1;183;176:12;139:2;224:3;218:10;338:9;333:1;319:12;315:20;297:16;293:43;290:58;268:11;254:12;251:29;239:118;236:2;;;370:1;367;360:12;236:2;0:382;;1271:27:2;;;;;;;20:11:-1;15:3;12:20;9:2;;;45:1;42;35:12;9:2;73:11;68:3;64:21;57:28;;126:4;121:3;117:14;163:9;145:16;142:31;139:2;;;186:1;183;176:12;139:2;224:3;218:10;338:9;333:1;319:12;315:20;297:16;293:43;290:58;268:11;254:12;251:29;239:118;236:2;;;370:1;367;360:12;236:2;0:382;;1271:27:2;;;;;;;20:11:-1;15:3;12:20;9:2;;;45:1;42;35:12;9:2;73:11;68:3;64:21;57:28;;126:4;121:3;117:14;163:9;145:16;142:31;139:2;;;186:1;183;176:12;139:2;224:3;218:10;338:9;333:1;319:12;315:20;297:16;293:43;290:58;268:11;254:12;251:29;239:118;236:2;;;370:1;367;360:12;236:2;0:382;;1271:27:2;;;;;;1222:76;;;;;;;;;;;;;;;;;;;;;1342:9;1353;1364:4;1332:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1332:37:2;;;;;;;;;;;;;;;;;;1313:56;;1452:8;1406:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1383:78;;1542:38;1562:3;1567:12;1542:19;:38::i;:::-;1522:58;;1672:9;1662:20;;;;;;;;;;;;;;;;;;;;;;;;1641:41;;1788:18;;;;;;;;;;;:32;;;1821:10;1833:1;1788:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1788:47:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1788:47:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1788:47:2;;;;;;;;;;;;;;;;1785:151;;;1860:32;1871:9;1882;1860:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;1917:4;1910:11;;;;1785:151;949:3;;;;;;;909:1037;;;1960:34;1973:9;1984;1960:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;2011:5;2004:12;;581:1442;;;;;;;;;;;;;;;;:::o;460:39:5:-;;;;;;;;;;;;;:::o;316:47::-;;;;;;;;;;;;;;;;;;;;;;:::o;3480:318::-;3547:4;3619:6;3576:13;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3576:29:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3576:29:5;;;;;;39:16:-1;36:1;17:17;2:54;3576:29:5;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3576:29:5;;;;;;20:11:-1;15:3;12:20;9:2;;;45:1;42;35:12;9:2;73:11;68:3;64:21;57:28;;126:4;121:3;117:14;163:9;145:16;142:31;139:2;;;186:1;183;176:12;139:2;224:3;218:10;339:9;333:2;319:12;315:21;297:16;293:44;290:59;268:11;254:12;251:29;239:119;236:2;;;371:1;368;361:12;236:2;0:383;;3576:29:5;;;;;;3563:10;:42;;;;;;;;;;;;:::i;:::-;;3628:1;3619:10;;3615:155;3635:10;:17;;;;3631:1;:21;3615:155;;;3676:38;3689:9;3700:10;3711:1;3700:13;;;;;;;;;;;;;;;;;;3676:12;:38::i;:::-;3673:87;;;3741:4;3734:11;;;;3673:87;3654:3;;;;;;;3615:155;;;3786:5;3779:12;;3480:318;;;;;:::o;426:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2209:655:2:-;2312:12;2340:10;2360;2380:8;2763:24;2455:2;2441:3;:10;:16;;2437:57;;;2481:1;2473:10;;;;2437:57;2602:2;2597:3;2593:12;2587:19;2581:25;;2638:2;2633:3;2629:12;2623:19;2617:25;;2682:2;2677:3;2673:12;2667:19;2664:1;2659:28;2653:34;;2716:2;2711;:7;;;2707:46;;;2740:2;2734:8;;;;2707:46;2790:31;2800:8;2810:2;2814;2818;2790:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2790:31:2;;;;;;;;2763:58;;2840:16;2832:25;;2209:655;;;;;;;;;:::o;1561:101:13:-;824:9;:7;:9::i;:::-;816:18;;;;;;;;1629:28;1648:8;1629:18;:28::i;:::-;1561:101;:::o;3113:231:5:-;824:9:13;:7;:9::i;:::-;816:18;;;;;;;;3248:23:5;3207:15;;:65;;;;;;;;;;;;;;;;;;3313:23;3287:50;;;;;;;;;;;;3113:231;:::o;1796:169:13:-;1885:1;1865:22;;:8;:22;;;;1857:31;;;;;;;;1928:8;1899:38;;1920:6;;;;;;;;;;;1899:38;;;;;;;;;;;;1952:8;1943:6;;:17;;;;;;;;;;;;;;;;;;1796:169;:::o;185:3615:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"./ClaimHolder.sol\";\nimport \"./ClaimTypesRegistry.sol\";\nimport \"./ClaimVerifier.sol\";\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\n\ncontract IdentityRegistry is Ownable, ClaimVerifier {\n\n    //mapping between a user id and the corresponding identity contract\n    mapping(uint256 => ClaimHolder) public identity;\n\n    //Array storing trusted claim types of the services\n    uint256[] public claimTypes;\n\n    ClaimTypesRegistry public typesRegistry;\n\n    event IdentityRegistered(ClaimHolder indexed identity, uint256 indexed index);\n    event IdentityRemoved(ClaimHolder indexed identity, uint256 indexed index);\n    event ClaimTypesRegistrySet(address indexed _claimTypesRegistry);\n    event TrustedIssuersRegistrySet(address indexed _trustedIssuersRegistry);\n    /**\n    * @notice check valid identity (KYC)\n    * @param _identityContract an address of user identity contract (ClaimHolder)\n     */\n    modifier isValidIdentity(ClaimHolder _identityContract) {\n        require(_identityContract != address(0), \"contract address can't be a zero address\");\n        require(checkValidIdentity(_identityContract),  \"Your Claim is not valid for KYC\");\n        _;\n    }\n\n     /**\n    * @notice constructor of the contract\n    * @param _trustedIssuersRegistry the address of TrustedIssuerRegistry\n    * @param _claimTypesRegistry the address of ClaimTypeRegistry\n    */\n    constructor(address _trustedIssuersRegistry, address _claimTypesRegistry) public {\n        issuersRegistry = TrustedIssuersRegistry(_trustedIssuersRegistry);\n        emit TrustedIssuersRegistrySet(_trustedIssuersRegistry);\n        typesRegistry = ClaimTypesRegistry(_claimTypesRegistry);\n        emit ClaimTypesRegistrySet(_claimTypesRegistry);\n    }\n\n    /**\n    * @notice Register an identity contract for user account\n    * @param index an user id\n    * @param _identity The address of the user's identity contract (ClaimHolder)\n    * @return true or false\n    */\n    function registerIdentity(uint256 index, ClaimHolder _identity) isValidIdentity(_identity) public returns (bool) {\n        require(identity[index] == address(0));\n        identity[index] = _identity;\n        emit IdentityRegistered(_identity, index);\n        return true;\n    }\n\n    /**\n    * @notice Remove an identity contract\n    * @param index index an user id that will be remove\n    * @return true or false\n     */\n    function removeIdentity(uint256 index) onlyOwner public returns (bool) {\n        require(identity[index] != address(0));\n        emit IdentityRemoved(identity[index], index);\n        delete identity[index];\n        return true;\n    }\n\n    /**\n    * @notice Set ClaimTypeRegistry\n    * @param _claimTypesRegistry an address of ClaimTypeRegistry\n     */\n    function setClaimTypesRegistry(address _claimTypesRegistry) public onlyOwner {\n        typesRegistry = ClaimTypesRegistry(_claimTypesRegistry);\n        emit ClaimTypesRegistrySet(_claimTypesRegistry);\n    }\n\n    /**\n    * @notice Set TrustedIssuerRegistry\n    * @param _trustedIssuersRegistry an address of TrustedIssuerRegistry\n     */\n    function setTrustedIssuerRegistry(address _trustedIssuersRegistry) public onlyOwner {\n        issuersRegistry = TrustedIssuersRegistry(_trustedIssuersRegistry);\n        emit TrustedIssuersRegistrySet(_trustedIssuersRegistry);\n    }\n\n    /**\n    * @notice Check valid identity contract\n    * @param _identity an address of user\n    * @return true or false\n     */\n    function checkValidIdentity(ClaimHolder _identity) public returns (bool) {\n        claimTypes = typesRegistry.getClaimTypes();\n        for(uint i = 0; i < claimTypes.length; i++) {\n            if(claimIsValid(_identity, claimTypes[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n}",
  "sourcePath": "/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/IdentityRegistry.sol",
  "ast": {
    "absolutePath": "/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/IdentityRegistry.sol",
    "exportedSymbols": {
      "IdentityRegistry": [
        1115
      ]
    },
    "id": 1116,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 882,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "absolutePath": "/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/ClaimHolder.sol",
        "file": "./ClaimHolder.sol",
        "id": 883,
        "nodeType": "ImportDirective",
        "scope": 1116,
        "sourceUnit": 302,
        "src": "26:27:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/ClaimTypesRegistry.sol",
        "file": "./ClaimTypesRegistry.sol",
        "id": 884,
        "nodeType": "ImportDirective",
        "scope": 1116,
        "sourceUnit": 436,
        "src": "54:34:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/ClaimVerifier.sol",
        "file": "./ClaimVerifier.sol",
        "id": 885,
        "nodeType": "ImportDirective",
        "scope": 1116,
        "sourceUnit": 631,
        "src": "89:29:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 886,
        "nodeType": "ImportDirective",
        "scope": 1116,
        "sourceUnit": 2514,
        "src": "119:63:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 887,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2513,
              "src": "214:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2513",
                "typeString": "contract Ownable"
              }
            },
            "id": 888,
            "nodeType": "InheritanceSpecifier",
            "src": "214:7:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 889,
              "name": "ClaimVerifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 630,
              "src": "223:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ClaimVerifier_$630",
                "typeString": "contract ClaimVerifier"
              }
            },
            "id": 890,
            "nodeType": "InheritanceSpecifier",
            "src": "223:13:5"
          }
        ],
        "contractDependencies": [
          630,
          2513
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1115,
        "linearizedBaseContracts": [
          1115,
          630,
          2513
        ],
        "name": "IdentityRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 894,
            "name": "identity",
            "nodeType": "VariableDeclaration",
            "scope": 1115,
            "src": "316:47:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_ClaimHolder_$301_$",
              "typeString": "mapping(uint256 => contract ClaimHolder)"
            },
            "typeName": {
              "id": 893,
              "keyType": {
                "id": 891,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "324:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "316:31:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_ClaimHolder_$301_$",
                "typeString": "mapping(uint256 => contract ClaimHolder)"
              },
              "valueType": {
                "contractScope": null,
                "id": 892,
                "name": "ClaimHolder",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 301,
                "src": "335:11:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ClaimHolder_$301",
                  "typeString": "contract ClaimHolder"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 897,
            "name": "claimTypes",
            "nodeType": "VariableDeclaration",
            "scope": 1115,
            "src": "426:27:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 895,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "426:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 896,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "426:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 899,
            "name": "typesRegistry",
            "nodeType": "VariableDeclaration",
            "scope": 1115,
            "src": "460:39:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ClaimTypesRegistry_$435",
              "typeString": "contract ClaimTypesRegistry"
            },
            "typeName": {
              "contractScope": null,
              "id": 898,
              "name": "ClaimTypesRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 435,
              "src": "460:18:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ClaimTypesRegistry_$435",
                "typeString": "contract ClaimTypesRegistry"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 905,
            "name": "IdentityRegistered",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 901,
                  "indexed": true,
                  "name": "identity",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "531:28:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ClaimHolder_$301",
                    "typeString": "contract ClaimHolder"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 900,
                    "name": "ClaimHolder",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 301,
                    "src": "531:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimHolder_$301",
                      "typeString": "contract ClaimHolder"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 903,
                  "indexed": true,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "561:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 902,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "561:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "530:53:5"
            },
            "src": "506:78:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 911,
            "name": "IdentityRemoved",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 907,
                  "indexed": true,
                  "name": "identity",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "611:28:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ClaimHolder_$301",
                    "typeString": "contract ClaimHolder"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 906,
                    "name": "ClaimHolder",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 301,
                    "src": "611:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimHolder_$301",
                      "typeString": "contract ClaimHolder"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 909,
                  "indexed": true,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "641:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 908,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "641:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "610:53:5"
            },
            "src": "589:75:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 915,
            "name": "ClaimTypesRegistrySet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 913,
                  "indexed": true,
                  "name": "_claimTypesRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 915,
                  "src": "697:35:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 912,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "697:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "696:37:5"
            },
            "src": "669:65:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 919,
            "name": "TrustedIssuersRegistrySet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 917,
                  "indexed": true,
                  "name": "_trustedIssuersRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 919,
                  "src": "771:39:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 916,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "771:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "770:41:5"
            },
            "src": "739:73:5"
          },
          {
            "body": {
              "id": 940,
              "nodeType": "Block",
              "src": "1012:204:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 924,
                          "name": "_identityContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 921,
                          "src": "1030:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ClaimHolder_$301",
                            "typeString": "contract ClaimHolder"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 926,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1059:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 925,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1051:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1051:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1030:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "636f6e747261637420616464726573732063616e27742062652061207a65726f2061646472657373",
                        "id": 929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1063:42:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_314ef5c8b61d6eefa1e6923e3945ebb4c3411155c8152476346dd6297d263859",
                          "typeString": "literal_string \"contract address can't be a zero address\""
                        },
                        "value": "contract address can't be a zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_314ef5c8b61d6eefa1e6923e3945ebb4c3411155c8152476346dd6297d263859",
                          "typeString": "literal_string \"contract address can't be a zero address\""
                        }
                      ],
                      "id": 923,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3072,
                        3073
                      ],
                      "referencedDeclaration": 3073,
                      "src": "1022:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1022:84:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 931,
                  "nodeType": "ExpressionStatement",
                  "src": "1022:84:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 934,
                            "name": "_identityContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 921,
                            "src": "1143:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ClaimHolder_$301",
                              "typeString": "contract ClaimHolder"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ClaimHolder_$301",
                              "typeString": "contract ClaimHolder"
                            }
                          ],
                          "id": 933,
                          "name": "checkValidIdentity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "1124:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ClaimHolder_$301_$returns$_t_bool_$",
                            "typeString": "function (contract ClaimHolder) returns (bool)"
                          }
                        },
                        "id": 935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1124:37:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f757220436c61696d206973206e6f742076616c696420666f72204b5943",
                        "id": 936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1164:33:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31ee6fda9fba78f039a33b4c520a3e06c25cc9cd680fca3ff2d2c2136150bab5",
                          "typeString": "literal_string \"Your Claim is not valid for KYC\""
                        },
                        "value": "Your Claim is not valid for KYC"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31ee6fda9fba78f039a33b4c520a3e06c25cc9cd680fca3ff2d2c2136150bab5",
                          "typeString": "literal_string \"Your Claim is not valid for KYC\""
                        }
                      ],
                      "id": 932,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3072,
                        3073
                      ],
                      "referencedDeclaration": 3073,
                      "src": "1116:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1116:82:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 938,
                  "nodeType": "ExpressionStatement",
                  "src": "1116:82:5"
                },
                {
                  "id": 939,
                  "nodeType": "PlaceholderStatement",
                  "src": "1208:1:5"
                }
              ]
            },
            "documentation": "@notice check valid identity (KYC)\n@param _identityContract an address of user identity contract (ClaimHolder)",
            "id": 941,
            "name": "isValidIdentity",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 921,
                  "name": "_identityContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 941,
                  "src": "981:29:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ClaimHolder_$301",
                    "typeString": "contract ClaimHolder"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 920,
                    "name": "ClaimHolder",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 301,
                    "src": "981:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimHolder_$301",
                      "typeString": "contract ClaimHolder"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "980:31:5"
            },
            "src": "956:260:5",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 968,
              "nodeType": "Block",
              "src": "1501:269:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 948,
                      "name": "issuersRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 446,
                      "src": "1511:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TrustedIssuersRegistry_$2010",
                        "typeString": "contract TrustedIssuersRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 950,
                          "name": "_trustedIssuersRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 943,
                          "src": "1552:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 949,
                        "name": "TrustedIssuersRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2010,
                        "src": "1529:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TrustedIssuersRegistry_$2010_$",
                          "typeString": "type(contract TrustedIssuersRegistry)"
                        }
                      },
                      "id": 951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1529:47:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TrustedIssuersRegistry_$2010",
                        "typeString": "contract TrustedIssuersRegistry"
                      }
                    },
                    "src": "1511:65:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TrustedIssuersRegistry_$2010",
                      "typeString": "contract TrustedIssuersRegistry"
                    }
                  },
                  "id": 953,
                  "nodeType": "ExpressionStatement",
                  "src": "1511:65:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 955,
                        "name": "_trustedIssuersRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 943,
                        "src": "1617:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 954,
                      "name": "TrustedIssuersRegistrySet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 919,
                      "src": "1591:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1591:50:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 957,
                  "nodeType": "EmitStatement",
                  "src": "1586:55:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 958,
                      "name": "typesRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 899,
                      "src": "1651:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ClaimTypesRegistry_$435",
                        "typeString": "contract ClaimTypesRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 960,
                          "name": "_claimTypesRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 945,
                          "src": "1686:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 959,
                        "name": "ClaimTypesRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "1667:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ClaimTypesRegistry_$435_$",
                          "typeString": "type(contract ClaimTypesRegistry)"
                        }
                      },
                      "id": 961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1667:39:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ClaimTypesRegistry_$435",
                        "typeString": "contract ClaimTypesRegistry"
                      }
                    },
                    "src": "1651:55:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimTypesRegistry_$435",
                      "typeString": "contract ClaimTypesRegistry"
                    }
                  },
                  "id": 963,
                  "nodeType": "ExpressionStatement",
                  "src": "1651:55:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 965,
                        "name": "_claimTypesRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 945,
                        "src": "1743:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 964,
                      "name": "ClaimTypesRegistrySet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 915,
                      "src": "1721:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1721:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 967,
                  "nodeType": "EmitStatement",
                  "src": "1716:47:5"
                }
              ]
            },
            "documentation": "@notice constructor of the contract\n@param _trustedIssuersRegistry the address of TrustedIssuerRegistry\n@param _claimTypesRegistry the address of ClaimTypeRegistry",
            "id": 969,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 943,
                  "name": "_trustedIssuersRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "1432:31:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 942,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1432:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 945,
                  "name": "_claimTypesRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "1465:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 944,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1465:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1431:62:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 947,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1501:0:5"
            },
            "scope": 1115,
            "src": "1420:350:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1004,
              "nodeType": "Block",
              "src": "2104:164:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 982,
                            "name": "identity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 894,
                            "src": "2122:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_ClaimHolder_$301_$",
                              "typeString": "mapping(uint256 => contract ClaimHolder)"
                            }
                          },
                          "id": 984,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 983,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 971,
                            "src": "2131:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2122:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ClaimHolder_$301",
                            "typeString": "contract ClaimHolder"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 986,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2149:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 985,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2141:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2141:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2122:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 981,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3072,
                        3073
                      ],
                      "referencedDeclaration": 3072,
                      "src": "2114:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2114:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 990,
                  "nodeType": "ExpressionStatement",
                  "src": "2114:38:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 991,
                        "name": "identity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 894,
                        "src": "2162:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_ClaimHolder_$301_$",
                          "typeString": "mapping(uint256 => contract ClaimHolder)"
                        }
                      },
                      "id": 993,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 992,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 971,
                        "src": "2171:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2162:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ClaimHolder_$301",
                        "typeString": "contract ClaimHolder"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 994,
                      "name": "_identity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 973,
                      "src": "2180:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ClaimHolder_$301",
                        "typeString": "contract ClaimHolder"
                      }
                    },
                    "src": "2162:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimHolder_$301",
                      "typeString": "contract ClaimHolder"
                    }
                  },
                  "id": 996,
                  "nodeType": "ExpressionStatement",
                  "src": "2162:27:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 998,
                        "name": "_identity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 973,
                        "src": "2223:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ClaimHolder_$301",
                          "typeString": "contract ClaimHolder"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 999,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 971,
                        "src": "2234:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ClaimHolder_$301",
                          "typeString": "contract ClaimHolder"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 997,
                      "name": "IdentityRegistered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 905,
                      "src": "2204:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_ClaimHolder_$301_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ClaimHolder,uint256)"
                      }
                    },
                    "id": 1000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2204:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1001,
                  "nodeType": "EmitStatement",
                  "src": "2199:41:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 1002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2257:4:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 980,
                  "id": 1003,
                  "nodeType": "Return",
                  "src": "2250:11:5"
                }
              ]
            },
            "documentation": "@notice Register an identity contract for user account\n@param index an user id\n@param _identity The address of the user's identity contract (ClaimHolder)\n@return true or false",
            "id": 1005,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 976,
                    "name": "_identity",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 973,
                    "src": "2071:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimHolder_$301",
                      "typeString": "contract ClaimHolder"
                    }
                  }
                ],
                "id": 977,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 975,
                  "name": "isValidIdentity",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 941,
                  "src": "2055:15:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_contract$_ClaimHolder_$301_$",
                    "typeString": "modifier (contract ClaimHolder)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2055:26:5"
              }
            ],
            "name": "registerIdentity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 971,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 1005,
                  "src": "2017:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 970,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2017:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 973,
                  "name": "_identity",
                  "nodeType": "VariableDeclaration",
                  "scope": 1005,
                  "src": "2032:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ClaimHolder_$301",
                    "typeString": "contract ClaimHolder"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 972,
                    "name": "ClaimHolder",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 301,
                    "src": "2032:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimHolder_$301",
                      "typeString": "contract ClaimHolder"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2016:38:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 980,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 979,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1005,
                  "src": "2098:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 978,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2098:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2097:6:5"
            },
            "scope": 1115,
            "src": "1991:277:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1038,
              "nodeType": "Block",
              "src": "2487:162:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1015,
                            "name": "identity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 894,
                            "src": "2505:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_ClaimHolder_$301_$",
                              "typeString": "mapping(uint256 => contract ClaimHolder)"
                            }
                          },
                          "id": 1017,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1016,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1007,
                            "src": "2514:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2505:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ClaimHolder_$301",
                            "typeString": "contract ClaimHolder"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1019,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2532:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1018,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2524:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2524:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2505:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1014,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3072,
                        3073
                      ],
                      "referencedDeclaration": 3072,
                      "src": "2497:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2497:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1023,
                  "nodeType": "ExpressionStatement",
                  "src": "2497:38:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1025,
                          "name": "identity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 894,
                          "src": "2566:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_ClaimHolder_$301_$",
                            "typeString": "mapping(uint256 => contract ClaimHolder)"
                          }
                        },
                        "id": 1027,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1026,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1007,
                          "src": "2575:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2566:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ClaimHolder_$301",
                          "typeString": "contract ClaimHolder"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1028,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1007,
                        "src": "2583:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ClaimHolder_$301",
                          "typeString": "contract ClaimHolder"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1024,
                      "name": "IdentityRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 911,
                      "src": "2550:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_ClaimHolder_$301_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ClaimHolder,uint256)"
                      }
                    },
                    "id": 1029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2550:39:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1030,
                  "nodeType": "EmitStatement",
                  "src": "2545:44:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2599:22:5",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1031,
                        "name": "identity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 894,
                        "src": "2606:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_ClaimHolder_$301_$",
                          "typeString": "mapping(uint256 => contract ClaimHolder)"
                        }
                      },
                      "id": 1033,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1032,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1007,
                        "src": "2615:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2606:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ClaimHolder_$301",
                        "typeString": "contract ClaimHolder"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1035,
                  "nodeType": "ExpressionStatement",
                  "src": "2599:22:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 1036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2638:4:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1013,
                  "id": 1037,
                  "nodeType": "Return",
                  "src": "2631:11:5"
                }
              ]
            },
            "documentation": "@notice Remove an identity contract\n@param index index an user id that will be remove\n@return true or false",
            "id": 1039,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1010,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1009,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2447,
                  "src": "2455:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2455:9:5"
              }
            ],
            "name": "removeIdentity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1007,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 1039,
                  "src": "2440:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1006,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2440:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2439:15:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 1013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1012,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1039,
                  "src": "2481:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1011,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2481:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2480:6:5"
            },
            "scope": 1115,
            "src": "2416:233:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1056,
              "nodeType": "Block",
              "src": "2849:129:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1046,
                      "name": "typesRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 899,
                      "src": "2859:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ClaimTypesRegistry_$435",
                        "typeString": "contract ClaimTypesRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1048,
                          "name": "_claimTypesRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1041,
                          "src": "2894:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1047,
                        "name": "ClaimTypesRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "2875:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ClaimTypesRegistry_$435_$",
                          "typeString": "type(contract ClaimTypesRegistry)"
                        }
                      },
                      "id": 1049,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2875:39:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ClaimTypesRegistry_$435",
                        "typeString": "contract ClaimTypesRegistry"
                      }
                    },
                    "src": "2859:55:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimTypesRegistry_$435",
                      "typeString": "contract ClaimTypesRegistry"
                    }
                  },
                  "id": 1051,
                  "nodeType": "ExpressionStatement",
                  "src": "2859:55:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1053,
                        "name": "_claimTypesRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1041,
                        "src": "2951:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1052,
                      "name": "ClaimTypesRegistrySet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 915,
                      "src": "2929:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2929:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1055,
                  "nodeType": "EmitStatement",
                  "src": "2924:47:5"
                }
              ]
            },
            "documentation": "@notice Set ClaimTypeRegistry\n@param _claimTypesRegistry an address of ClaimTypeRegistry",
            "id": 1057,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1044,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1043,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2447,
                  "src": "2839:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2839:9:5"
              }
            ],
            "name": "setClaimTypesRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1041,
                  "name": "_claimTypesRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 1057,
                  "src": "2803:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1040,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2803:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2802:29:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 1045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2849:0:5"
            },
            "scope": 1115,
            "src": "2772:206:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1074,
              "nodeType": "Block",
              "src": "3197:147:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1064,
                      "name": "issuersRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 446,
                      "src": "3207:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TrustedIssuersRegistry_$2010",
                        "typeString": "contract TrustedIssuersRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1066,
                          "name": "_trustedIssuersRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1059,
                          "src": "3248:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1065,
                        "name": "TrustedIssuersRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2010,
                        "src": "3225:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TrustedIssuersRegistry_$2010_$",
                          "typeString": "type(contract TrustedIssuersRegistry)"
                        }
                      },
                      "id": 1067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3225:47:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TrustedIssuersRegistry_$2010",
                        "typeString": "contract TrustedIssuersRegistry"
                      }
                    },
                    "src": "3207:65:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TrustedIssuersRegistry_$2010",
                      "typeString": "contract TrustedIssuersRegistry"
                    }
                  },
                  "id": 1069,
                  "nodeType": "ExpressionStatement",
                  "src": "3207:65:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1071,
                        "name": "_trustedIssuersRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1059,
                        "src": "3313:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1070,
                      "name": "TrustedIssuersRegistrySet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 919,
                      "src": "3287:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3287:50:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1073,
                  "nodeType": "EmitStatement",
                  "src": "3282:55:5"
                }
              ]
            },
            "documentation": "@notice Set TrustedIssuerRegistry\n@param _trustedIssuersRegistry an address of TrustedIssuerRegistry",
            "id": 1075,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1062,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1061,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2447,
                  "src": "3187:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3187:9:5"
              }
            ],
            "name": "setTrustedIssuerRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1059,
                  "name": "_trustedIssuersRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 1075,
                  "src": "3147:31:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1058,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3147:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3146:33:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 1063,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3197:0:5"
            },
            "scope": 1115,
            "src": "3113:231:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1113,
              "nodeType": "Block",
              "src": "3553:245:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1082,
                      "name": "claimTypes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 897,
                      "src": "3563:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1083,
                          "name": "typesRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "3576:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ClaimTypesRegistry_$435",
                            "typeString": "contract ClaimTypesRegistry"
                          }
                        },
                        "id": 1084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getClaimTypes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 434,
                        "src": "3576:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function () view external returns (uint256[] memory)"
                        }
                      },
                      "id": 1085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3576:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "3563:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 1087,
                  "nodeType": "ExpressionStatement",
                  "src": "3563:42:5"
                },
                {
                  "body": {
                    "id": 1109,
                    "nodeType": "Block",
                    "src": "3659:111:5",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1100,
                              "name": "_identity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1077,
                              "src": "3689:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ClaimHolder_$301",
                                "typeString": "contract ClaimHolder"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1101,
                                "name": "claimTypes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 897,
                                "src": "3700:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 1103,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1102,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1089,
                                "src": "3711:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3700:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ClaimHolder_$301",
                                "typeString": "contract ClaimHolder"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1099,
                            "name": "claimIsValid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 579,
                            "src": "3676:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_contract$_ClaimHolder_$301_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (contract ClaimHolder,uint256) view returns (bool)"
                            }
                          },
                          "id": 1104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3676:38:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1108,
                        "nodeType": "IfStatement",
                        "src": "3673:87:5",
                        "trueBody": {
                          "id": 1107,
                          "nodeType": "Block",
                          "src": "3716:44:5",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "hexValue": "74727565",
                                "id": 1105,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3741:4:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 1081,
                              "id": 1106,
                              "nodeType": "Return",
                              "src": "3734:11:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1092,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1089,
                      "src": "3631:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1093,
                        "name": "claimTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 897,
                        "src": "3635:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 1094,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3635:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3631:21:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1110,
                  "initializationExpression": {
                    "assignments": [
                      1089
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1089,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 1114,
                        "src": "3619:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1088,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3619:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1091,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3628:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3619:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1097,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3654:3:5",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1096,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1089,
                        "src": "3654:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1098,
                    "nodeType": "ExpressionStatement",
                    "src": "3654:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "3615:155:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 1111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3786:5:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 1081,
                  "id": 1112,
                  "nodeType": "Return",
                  "src": "3779:12:5"
                }
              ]
            },
            "documentation": "@notice Check valid identity contract\n@param _identity an address of user\n@return true or false",
            "id": 1114,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "checkValidIdentity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1077,
                  "name": "_identity",
                  "nodeType": "VariableDeclaration",
                  "scope": 1114,
                  "src": "3508:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ClaimHolder_$301",
                    "typeString": "contract ClaimHolder"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1076,
                    "name": "ClaimHolder",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 301,
                    "src": "3508:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimHolder_$301",
                      "typeString": "contract ClaimHolder"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3507:23:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 1081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1080,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1114,
                  "src": "3547:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1079,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3547:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3546:6:5"
            },
            "scope": 1115,
            "src": "3480:318:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1116,
        "src": "185:3615:5"
      }
    ],
    "src": "0:3800:5"
  },
  "legacyAST": {
    "absolutePath": "/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/IdentityRegistry.sol",
    "exportedSymbols": {
      "IdentityRegistry": [
        1115
      ]
    },
    "id": 1116,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 882,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "absolutePath": "/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/ClaimHolder.sol",
        "file": "./ClaimHolder.sol",
        "id": 883,
        "nodeType": "ImportDirective",
        "scope": 1116,
        "sourceUnit": 302,
        "src": "26:27:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/ClaimTypesRegistry.sol",
        "file": "./ClaimTypesRegistry.sol",
        "id": 884,
        "nodeType": "ImportDirective",
        "scope": 1116,
        "sourceUnit": 436,
        "src": "54:34:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/ClaimVerifier.sol",
        "file": "./ClaimVerifier.sol",
        "id": 885,
        "nodeType": "ImportDirective",
        "scope": 1116,
        "sourceUnit": 631,
        "src": "89:29:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 886,
        "nodeType": "ImportDirective",
        "scope": 1116,
        "sourceUnit": 2514,
        "src": "119:63:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 887,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2513,
              "src": "214:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2513",
                "typeString": "contract Ownable"
              }
            },
            "id": 888,
            "nodeType": "InheritanceSpecifier",
            "src": "214:7:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 889,
              "name": "ClaimVerifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 630,
              "src": "223:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ClaimVerifier_$630",
                "typeString": "contract ClaimVerifier"
              }
            },
            "id": 890,
            "nodeType": "InheritanceSpecifier",
            "src": "223:13:5"
          }
        ],
        "contractDependencies": [
          630,
          2513
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1115,
        "linearizedBaseContracts": [
          1115,
          630,
          2513
        ],
        "name": "IdentityRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 894,
            "name": "identity",
            "nodeType": "VariableDeclaration",
            "scope": 1115,
            "src": "316:47:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_ClaimHolder_$301_$",
              "typeString": "mapping(uint256 => contract ClaimHolder)"
            },
            "typeName": {
              "id": 893,
              "keyType": {
                "id": 891,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "324:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "316:31:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_ClaimHolder_$301_$",
                "typeString": "mapping(uint256 => contract ClaimHolder)"
              },
              "valueType": {
                "contractScope": null,
                "id": 892,
                "name": "ClaimHolder",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 301,
                "src": "335:11:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ClaimHolder_$301",
                  "typeString": "contract ClaimHolder"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 897,
            "name": "claimTypes",
            "nodeType": "VariableDeclaration",
            "scope": 1115,
            "src": "426:27:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 895,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "426:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 896,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "426:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 899,
            "name": "typesRegistry",
            "nodeType": "VariableDeclaration",
            "scope": 1115,
            "src": "460:39:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ClaimTypesRegistry_$435",
              "typeString": "contract ClaimTypesRegistry"
            },
            "typeName": {
              "contractScope": null,
              "id": 898,
              "name": "ClaimTypesRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 435,
              "src": "460:18:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ClaimTypesRegistry_$435",
                "typeString": "contract ClaimTypesRegistry"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 905,
            "name": "IdentityRegistered",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 901,
                  "indexed": true,
                  "name": "identity",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "531:28:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ClaimHolder_$301",
                    "typeString": "contract ClaimHolder"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 900,
                    "name": "ClaimHolder",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 301,
                    "src": "531:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimHolder_$301",
                      "typeString": "contract ClaimHolder"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 903,
                  "indexed": true,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "561:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 902,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "561:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "530:53:5"
            },
            "src": "506:78:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 911,
            "name": "IdentityRemoved",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 907,
                  "indexed": true,
                  "name": "identity",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "611:28:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ClaimHolder_$301",
                    "typeString": "contract ClaimHolder"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 906,
                    "name": "ClaimHolder",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 301,
                    "src": "611:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimHolder_$301",
                      "typeString": "contract ClaimHolder"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 909,
                  "indexed": true,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "641:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 908,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "641:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "610:53:5"
            },
            "src": "589:75:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 915,
            "name": "ClaimTypesRegistrySet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 913,
                  "indexed": true,
                  "name": "_claimTypesRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 915,
                  "src": "697:35:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 912,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "697:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "696:37:5"
            },
            "src": "669:65:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 919,
            "name": "TrustedIssuersRegistrySet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 917,
                  "indexed": true,
                  "name": "_trustedIssuersRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 919,
                  "src": "771:39:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 916,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "771:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "770:41:5"
            },
            "src": "739:73:5"
          },
          {
            "body": {
              "id": 940,
              "nodeType": "Block",
              "src": "1012:204:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 924,
                          "name": "_identityContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 921,
                          "src": "1030:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ClaimHolder_$301",
                            "typeString": "contract ClaimHolder"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 926,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1059:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 925,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1051:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1051:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1030:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "636f6e747261637420616464726573732063616e27742062652061207a65726f2061646472657373",
                        "id": 929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1063:42:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_314ef5c8b61d6eefa1e6923e3945ebb4c3411155c8152476346dd6297d263859",
                          "typeString": "literal_string \"contract address can't be a zero address\""
                        },
                        "value": "contract address can't be a zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_314ef5c8b61d6eefa1e6923e3945ebb4c3411155c8152476346dd6297d263859",
                          "typeString": "literal_string \"contract address can't be a zero address\""
                        }
                      ],
                      "id": 923,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3072,
                        3073
                      ],
                      "referencedDeclaration": 3073,
                      "src": "1022:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1022:84:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 931,
                  "nodeType": "ExpressionStatement",
                  "src": "1022:84:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 934,
                            "name": "_identityContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 921,
                            "src": "1143:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ClaimHolder_$301",
                              "typeString": "contract ClaimHolder"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ClaimHolder_$301",
                              "typeString": "contract ClaimHolder"
                            }
                          ],
                          "id": 933,
                          "name": "checkValidIdentity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "1124:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ClaimHolder_$301_$returns$_t_bool_$",
                            "typeString": "function (contract ClaimHolder) returns (bool)"
                          }
                        },
                        "id": 935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1124:37:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f757220436c61696d206973206e6f742076616c696420666f72204b5943",
                        "id": 936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1164:33:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31ee6fda9fba78f039a33b4c520a3e06c25cc9cd680fca3ff2d2c2136150bab5",
                          "typeString": "literal_string \"Your Claim is not valid for KYC\""
                        },
                        "value": "Your Claim is not valid for KYC"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31ee6fda9fba78f039a33b4c520a3e06c25cc9cd680fca3ff2d2c2136150bab5",
                          "typeString": "literal_string \"Your Claim is not valid for KYC\""
                        }
                      ],
                      "id": 932,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3072,
                        3073
                      ],
                      "referencedDeclaration": 3073,
                      "src": "1116:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1116:82:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 938,
                  "nodeType": "ExpressionStatement",
                  "src": "1116:82:5"
                },
                {
                  "id": 939,
                  "nodeType": "PlaceholderStatement",
                  "src": "1208:1:5"
                }
              ]
            },
            "documentation": "@notice check valid identity (KYC)\n@param _identityContract an address of user identity contract (ClaimHolder)",
            "id": 941,
            "name": "isValidIdentity",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 921,
                  "name": "_identityContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 941,
                  "src": "981:29:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ClaimHolder_$301",
                    "typeString": "contract ClaimHolder"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 920,
                    "name": "ClaimHolder",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 301,
                    "src": "981:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimHolder_$301",
                      "typeString": "contract ClaimHolder"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "980:31:5"
            },
            "src": "956:260:5",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 968,
              "nodeType": "Block",
              "src": "1501:269:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 948,
                      "name": "issuersRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 446,
                      "src": "1511:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TrustedIssuersRegistry_$2010",
                        "typeString": "contract TrustedIssuersRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 950,
                          "name": "_trustedIssuersRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 943,
                          "src": "1552:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 949,
                        "name": "TrustedIssuersRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2010,
                        "src": "1529:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TrustedIssuersRegistry_$2010_$",
                          "typeString": "type(contract TrustedIssuersRegistry)"
                        }
                      },
                      "id": 951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1529:47:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TrustedIssuersRegistry_$2010",
                        "typeString": "contract TrustedIssuersRegistry"
                      }
                    },
                    "src": "1511:65:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TrustedIssuersRegistry_$2010",
                      "typeString": "contract TrustedIssuersRegistry"
                    }
                  },
                  "id": 953,
                  "nodeType": "ExpressionStatement",
                  "src": "1511:65:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 955,
                        "name": "_trustedIssuersRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 943,
                        "src": "1617:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 954,
                      "name": "TrustedIssuersRegistrySet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 919,
                      "src": "1591:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1591:50:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 957,
                  "nodeType": "EmitStatement",
                  "src": "1586:55:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 958,
                      "name": "typesRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 899,
                      "src": "1651:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ClaimTypesRegistry_$435",
                        "typeString": "contract ClaimTypesRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 960,
                          "name": "_claimTypesRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 945,
                          "src": "1686:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 959,
                        "name": "ClaimTypesRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "1667:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ClaimTypesRegistry_$435_$",
                          "typeString": "type(contract ClaimTypesRegistry)"
                        }
                      },
                      "id": 961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1667:39:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ClaimTypesRegistry_$435",
                        "typeString": "contract ClaimTypesRegistry"
                      }
                    },
                    "src": "1651:55:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimTypesRegistry_$435",
                      "typeString": "contract ClaimTypesRegistry"
                    }
                  },
                  "id": 963,
                  "nodeType": "ExpressionStatement",
                  "src": "1651:55:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 965,
                        "name": "_claimTypesRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 945,
                        "src": "1743:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 964,
                      "name": "ClaimTypesRegistrySet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 915,
                      "src": "1721:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1721:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 967,
                  "nodeType": "EmitStatement",
                  "src": "1716:47:5"
                }
              ]
            },
            "documentation": "@notice constructor of the contract\n@param _trustedIssuersRegistry the address of TrustedIssuerRegistry\n@param _claimTypesRegistry the address of ClaimTypeRegistry",
            "id": 969,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 943,
                  "name": "_trustedIssuersRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "1432:31:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 942,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1432:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 945,
                  "name": "_claimTypesRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "1465:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 944,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1465:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1431:62:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 947,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1501:0:5"
            },
            "scope": 1115,
            "src": "1420:350:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1004,
              "nodeType": "Block",
              "src": "2104:164:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 982,
                            "name": "identity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 894,
                            "src": "2122:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_ClaimHolder_$301_$",
                              "typeString": "mapping(uint256 => contract ClaimHolder)"
                            }
                          },
                          "id": 984,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 983,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 971,
                            "src": "2131:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2122:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ClaimHolder_$301",
                            "typeString": "contract ClaimHolder"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 986,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2149:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 985,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2141:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2141:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2122:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 981,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3072,
                        3073
                      ],
                      "referencedDeclaration": 3072,
                      "src": "2114:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2114:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 990,
                  "nodeType": "ExpressionStatement",
                  "src": "2114:38:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 991,
                        "name": "identity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 894,
                        "src": "2162:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_ClaimHolder_$301_$",
                          "typeString": "mapping(uint256 => contract ClaimHolder)"
                        }
                      },
                      "id": 993,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 992,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 971,
                        "src": "2171:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2162:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ClaimHolder_$301",
                        "typeString": "contract ClaimHolder"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 994,
                      "name": "_identity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 973,
                      "src": "2180:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ClaimHolder_$301",
                        "typeString": "contract ClaimHolder"
                      }
                    },
                    "src": "2162:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimHolder_$301",
                      "typeString": "contract ClaimHolder"
                    }
                  },
                  "id": 996,
                  "nodeType": "ExpressionStatement",
                  "src": "2162:27:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 998,
                        "name": "_identity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 973,
                        "src": "2223:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ClaimHolder_$301",
                          "typeString": "contract ClaimHolder"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 999,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 971,
                        "src": "2234:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ClaimHolder_$301",
                          "typeString": "contract ClaimHolder"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 997,
                      "name": "IdentityRegistered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 905,
                      "src": "2204:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_ClaimHolder_$301_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ClaimHolder,uint256)"
                      }
                    },
                    "id": 1000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2204:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1001,
                  "nodeType": "EmitStatement",
                  "src": "2199:41:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 1002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2257:4:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 980,
                  "id": 1003,
                  "nodeType": "Return",
                  "src": "2250:11:5"
                }
              ]
            },
            "documentation": "@notice Register an identity contract for user account\n@param index an user id\n@param _identity The address of the user's identity contract (ClaimHolder)\n@return true or false",
            "id": 1005,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 976,
                    "name": "_identity",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 973,
                    "src": "2071:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimHolder_$301",
                      "typeString": "contract ClaimHolder"
                    }
                  }
                ],
                "id": 977,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 975,
                  "name": "isValidIdentity",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 941,
                  "src": "2055:15:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_contract$_ClaimHolder_$301_$",
                    "typeString": "modifier (contract ClaimHolder)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2055:26:5"
              }
            ],
            "name": "registerIdentity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 971,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 1005,
                  "src": "2017:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 970,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2017:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 973,
                  "name": "_identity",
                  "nodeType": "VariableDeclaration",
                  "scope": 1005,
                  "src": "2032:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ClaimHolder_$301",
                    "typeString": "contract ClaimHolder"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 972,
                    "name": "ClaimHolder",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 301,
                    "src": "2032:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimHolder_$301",
                      "typeString": "contract ClaimHolder"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2016:38:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 980,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 979,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1005,
                  "src": "2098:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 978,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2098:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2097:6:5"
            },
            "scope": 1115,
            "src": "1991:277:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1038,
              "nodeType": "Block",
              "src": "2487:162:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1015,
                            "name": "identity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 894,
                            "src": "2505:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_ClaimHolder_$301_$",
                              "typeString": "mapping(uint256 => contract ClaimHolder)"
                            }
                          },
                          "id": 1017,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1016,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1007,
                            "src": "2514:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2505:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ClaimHolder_$301",
                            "typeString": "contract ClaimHolder"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1019,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2532:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1018,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2524:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2524:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2505:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1014,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3072,
                        3073
                      ],
                      "referencedDeclaration": 3072,
                      "src": "2497:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2497:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1023,
                  "nodeType": "ExpressionStatement",
                  "src": "2497:38:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1025,
                          "name": "identity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 894,
                          "src": "2566:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_ClaimHolder_$301_$",
                            "typeString": "mapping(uint256 => contract ClaimHolder)"
                          }
                        },
                        "id": 1027,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1026,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1007,
                          "src": "2575:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2566:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ClaimHolder_$301",
                          "typeString": "contract ClaimHolder"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1028,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1007,
                        "src": "2583:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ClaimHolder_$301",
                          "typeString": "contract ClaimHolder"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1024,
                      "name": "IdentityRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 911,
                      "src": "2550:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_ClaimHolder_$301_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ClaimHolder,uint256)"
                      }
                    },
                    "id": 1029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2550:39:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1030,
                  "nodeType": "EmitStatement",
                  "src": "2545:44:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2599:22:5",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1031,
                        "name": "identity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 894,
                        "src": "2606:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_ClaimHolder_$301_$",
                          "typeString": "mapping(uint256 => contract ClaimHolder)"
                        }
                      },
                      "id": 1033,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1032,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1007,
                        "src": "2615:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2606:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ClaimHolder_$301",
                        "typeString": "contract ClaimHolder"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1035,
                  "nodeType": "ExpressionStatement",
                  "src": "2599:22:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 1036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2638:4:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1013,
                  "id": 1037,
                  "nodeType": "Return",
                  "src": "2631:11:5"
                }
              ]
            },
            "documentation": "@notice Remove an identity contract\n@param index index an user id that will be remove\n@return true or false",
            "id": 1039,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1010,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1009,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2447,
                  "src": "2455:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2455:9:5"
              }
            ],
            "name": "removeIdentity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1007,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 1039,
                  "src": "2440:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1006,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2440:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2439:15:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 1013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1012,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1039,
                  "src": "2481:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1011,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2481:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2480:6:5"
            },
            "scope": 1115,
            "src": "2416:233:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1056,
              "nodeType": "Block",
              "src": "2849:129:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1046,
                      "name": "typesRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 899,
                      "src": "2859:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ClaimTypesRegistry_$435",
                        "typeString": "contract ClaimTypesRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1048,
                          "name": "_claimTypesRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1041,
                          "src": "2894:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1047,
                        "name": "ClaimTypesRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "2875:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ClaimTypesRegistry_$435_$",
                          "typeString": "type(contract ClaimTypesRegistry)"
                        }
                      },
                      "id": 1049,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2875:39:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ClaimTypesRegistry_$435",
                        "typeString": "contract ClaimTypesRegistry"
                      }
                    },
                    "src": "2859:55:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimTypesRegistry_$435",
                      "typeString": "contract ClaimTypesRegistry"
                    }
                  },
                  "id": 1051,
                  "nodeType": "ExpressionStatement",
                  "src": "2859:55:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1053,
                        "name": "_claimTypesRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1041,
                        "src": "2951:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1052,
                      "name": "ClaimTypesRegistrySet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 915,
                      "src": "2929:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2929:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1055,
                  "nodeType": "EmitStatement",
                  "src": "2924:47:5"
                }
              ]
            },
            "documentation": "@notice Set ClaimTypeRegistry\n@param _claimTypesRegistry an address of ClaimTypeRegistry",
            "id": 1057,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1044,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1043,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2447,
                  "src": "2839:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2839:9:5"
              }
            ],
            "name": "setClaimTypesRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1041,
                  "name": "_claimTypesRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 1057,
                  "src": "2803:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1040,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2803:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2802:29:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 1045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2849:0:5"
            },
            "scope": 1115,
            "src": "2772:206:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1074,
              "nodeType": "Block",
              "src": "3197:147:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1064,
                      "name": "issuersRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 446,
                      "src": "3207:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TrustedIssuersRegistry_$2010",
                        "typeString": "contract TrustedIssuersRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1066,
                          "name": "_trustedIssuersRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1059,
                          "src": "3248:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1065,
                        "name": "TrustedIssuersRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2010,
                        "src": "3225:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TrustedIssuersRegistry_$2010_$",
                          "typeString": "type(contract TrustedIssuersRegistry)"
                        }
                      },
                      "id": 1067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3225:47:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TrustedIssuersRegistry_$2010",
                        "typeString": "contract TrustedIssuersRegistry"
                      }
                    },
                    "src": "3207:65:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TrustedIssuersRegistry_$2010",
                      "typeString": "contract TrustedIssuersRegistry"
                    }
                  },
                  "id": 1069,
                  "nodeType": "ExpressionStatement",
                  "src": "3207:65:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1071,
                        "name": "_trustedIssuersRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1059,
                        "src": "3313:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1070,
                      "name": "TrustedIssuersRegistrySet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 919,
                      "src": "3287:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3287:50:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1073,
                  "nodeType": "EmitStatement",
                  "src": "3282:55:5"
                }
              ]
            },
            "documentation": "@notice Set TrustedIssuerRegistry\n@param _trustedIssuersRegistry an address of TrustedIssuerRegistry",
            "id": 1075,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1062,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1061,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2447,
                  "src": "3187:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3187:9:5"
              }
            ],
            "name": "setTrustedIssuerRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1059,
                  "name": "_trustedIssuersRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 1075,
                  "src": "3147:31:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1058,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3147:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3146:33:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 1063,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3197:0:5"
            },
            "scope": 1115,
            "src": "3113:231:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1113,
              "nodeType": "Block",
              "src": "3553:245:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1082,
                      "name": "claimTypes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 897,
                      "src": "3563:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1083,
                          "name": "typesRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "3576:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ClaimTypesRegistry_$435",
                            "typeString": "contract ClaimTypesRegistry"
                          }
                        },
                        "id": 1084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getClaimTypes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 434,
                        "src": "3576:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function () view external returns (uint256[] memory)"
                        }
                      },
                      "id": 1085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3576:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "3563:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 1087,
                  "nodeType": "ExpressionStatement",
                  "src": "3563:42:5"
                },
                {
                  "body": {
                    "id": 1109,
                    "nodeType": "Block",
                    "src": "3659:111:5",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1100,
                              "name": "_identity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1077,
                              "src": "3689:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ClaimHolder_$301",
                                "typeString": "contract ClaimHolder"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1101,
                                "name": "claimTypes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 897,
                                "src": "3700:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 1103,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1102,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1089,
                                "src": "3711:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3700:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ClaimHolder_$301",
                                "typeString": "contract ClaimHolder"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1099,
                            "name": "claimIsValid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 579,
                            "src": "3676:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_contract$_ClaimHolder_$301_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (contract ClaimHolder,uint256) view returns (bool)"
                            }
                          },
                          "id": 1104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3676:38:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1108,
                        "nodeType": "IfStatement",
                        "src": "3673:87:5",
                        "trueBody": {
                          "id": 1107,
                          "nodeType": "Block",
                          "src": "3716:44:5",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "hexValue": "74727565",
                                "id": 1105,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3741:4:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 1081,
                              "id": 1106,
                              "nodeType": "Return",
                              "src": "3734:11:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1092,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1089,
                      "src": "3631:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1093,
                        "name": "claimTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 897,
                        "src": "3635:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 1094,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3635:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3631:21:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1110,
                  "initializationExpression": {
                    "assignments": [
                      1089
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1089,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 1114,
                        "src": "3619:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1088,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3619:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1091,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3628:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3619:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1097,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3654:3:5",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1096,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1089,
                        "src": "3654:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1098,
                    "nodeType": "ExpressionStatement",
                    "src": "3654:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "3615:155:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 1111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3786:5:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 1081,
                  "id": 1112,
                  "nodeType": "Return",
                  "src": "3779:12:5"
                }
              ]
            },
            "documentation": "@notice Check valid identity contract\n@param _identity an address of user\n@return true or false",
            "id": 1114,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "checkValidIdentity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1077,
                  "name": "_identity",
                  "nodeType": "VariableDeclaration",
                  "scope": 1114,
                  "src": "3508:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ClaimHolder_$301",
                    "typeString": "contract ClaimHolder"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1076,
                    "name": "ClaimHolder",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 301,
                    "src": "3508:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimHolder_$301",
                      "typeString": "contract ClaimHolder"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3507:23:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 1081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1080,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1114,
                  "src": "3547:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1079,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3547:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3546:6:5"
            },
            "scope": 1115,
            "src": "3480:318:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1116,
        "src": "185:3615:5"
      }
    ],
    "src": "0:3800:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-11-26T09:09:23.261Z",
  "devdoc": {
    "methods": {
      "checkValidIdentity(address)": {
        "params": {
          "_identity": "an address of user"
        },
        "return": "true or false"
      },
      "claimIsValid(address,uint256)": {
        "params": {
          "_identity": "ClaimHolder contract address",
          "claimType": "type of given claim by ClaimHolder"
        },
        "return": "true or false"
      },
      "getRecoveredAddress(bytes,bytes32)": {
        "params": {
          "dataHash": "hash of data in bytes32",
          "sig": "signed data in bytes32"
        },
        "return": "address of signed data"
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "registerIdentity(uint256,address)": {
        "params": {
          "_identity": "The address of the user's identity contract (ClaimHolder)",
          "index": "an user id"
        },
        "return": "true or false"
      },
      "removeIdentity(uint256)": {
        "params": {
          "index": "index an user id that will be remove"
        },
        "return": "true or false"
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "setClaimTypesRegistry(address)": {
        "params": {
          "_claimTypesRegistry": "an address of ClaimTypeRegistry"
        }
      },
      "setTrustedIssuerRegistry(address)": {
        "params": {
          "_trustedIssuersRegistry": "an address of TrustedIssuerRegistry"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "checkValidIdentity(address)": {
        "notice": "Check valid identity contract"
      },
      "claimIsValid(address,uint256)": {
        "notice": "Check valid or invalid of given claim by ClaimHolder"
      },
      "getRecoveredAddress(bytes,bytes32)": {
        "notice": "Get address of signed data"
      },
      "registerIdentity(uint256,address)": {
        "notice": "Register an identity contract for user account"
      },
      "removeIdentity(uint256)": {
        "notice": "Remove an identity contract"
      },
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "setClaimTypesRegistry(address)": {
        "notice": "Set ClaimTypeRegistry"
      },
      "setTrustedIssuerRegistry(address)": {
        "notice": "Set TrustedIssuerRegistry"
      }
    }
  }
}