{
  "contractName": "IdentityRegistry",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_identity",
          "type": "address"
        },
        {
          "name": "claimType",
          "type": "uint256"
        }
      ],
      "name": "claimIsValid",
      "outputs": [
        {
          "name": "claimValid",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "typesRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "claimTypes",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "sig",
          "type": "bytes"
        },
        {
          "name": "dataHash",
          "type": "bytes32"
        }
      ],
      "name": "getRecoveredAddress",
      "outputs": [
        {
          "name": "addr",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "identity",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_trustedIssuersRegistry",
          "type": "address"
        },
        {
          "name": "_claimTypesRegistry",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "identity",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "IdentityRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "identity",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "IdentityRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_claimTypesRegistry",
          "type": "address"
        }
      ],
      "name": "ClaimTypesRegistrySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_trustedIssuersRegistry",
          "type": "address"
        }
      ],
      "name": "TrustedIssuersRegistrySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_identity",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "claimType",
          "type": "uint256"
        }
      ],
      "name": "ClaimValid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_identity",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "claimType",
          "type": "uint256"
        }
      ],
      "name": "ClaimInvalid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_identity",
          "type": "address"
        }
      ],
      "name": "registerIdentity",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_identity",
          "type": "address"
        }
      ],
      "name": "removeIdentity",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_claimTypesRegistry",
          "type": "address"
        }
      ],
      "name": "setClaimTypesRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_trustedIssuersRegistry",
          "type": "address"
        }
      ],
      "name": "setTrustedIssuerRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_identity",
          "type": "address"
        }
      ],
      "name": "checkValidIdentity",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_identity",
          "type": "address"
        }
      ],
      "name": "isValidUser",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_claimTypesRegistry\",\"type\":\"address\"}],\"name\":\"setClaimTypesRegistry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_identity\",\"type\":\"address\"}],\"name\":\"registerIdentity\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_identity\",\"type\":\"address\"},{\"name\":\"claimType\",\"type\":\"uint256\"}],\"name\":\"claimIsValid\",\"outputs\":[{\"name\":\"claimValid\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"typesRegistry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_identity\",\"type\":\"address\"}],\"name\":\"checkValidIdentity\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"claimTypes\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_identity\",\"type\":\"address\"}],\"name\":\"removeIdentity\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"sig\",\"type\":\"bytes\"},{\"name\":\"dataHash\",\"type\":\"bytes32\"}],\"name\":\"getRecoveredAddress\",\"outputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"identity\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_identity\",\"type\":\"address\"}],\"name\":\"isValidUser\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_trustedIssuersRegistry\",\"type\":\"address\"}],\"name\":\"setTrustedIssuerRegistry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_trustedIssuersRegistry\",\"type\":\"address\"},{\"name\":\"_claimTypesRegistry\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"identity\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"IdentityRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"identity\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"IdentityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_claimTypesRegistry\",\"type\":\"address\"}],\"name\":\"ClaimTypesRegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_trustedIssuersRegistry\",\"type\":\"address\"}],\"name\":\"TrustedIssuersRegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_identity\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"claimType\",\"type\":\"uint256\"}],\"name\":\"ClaimValid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_identity\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"claimType\",\"type\":\"uint256\"}],\"name\":\"ClaimInvalid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"checkValidIdentity(address)\":{\"params\":{\"_identity\":\"an address of user\"},\"return\":\"true or false\"},\"claimIsValid(address,uint256)\":{\"params\":{\"_identity\":\"ClaimHolder contract address\",\"claimType\":\"type of given claim by ClaimHolder\"},\"return\":\"true or false\"},\"getRecoveredAddress(bytes,bytes32)\":{\"params\":{\"dataHash\":\"hash of data in bytes32\",\"sig\":\"signed data in bytes32\"},\"return\":\"address of signed data\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"registerIdentity(address)\":{\"params\":{\"_identity\":\"The address of the user's identity contract (ClaimHolder)\"},\"return\":\"true or false\"},\"removeIdentity(address)\":{\"params\":{\"_identity\":\"is an identity contract of user\"},\"return\":\"true or false\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"setClaimTypesRegistry(address)\":{\"params\":{\"_claimTypesRegistry\":\"an address of ClaimTypeRegistry\"}},\"setTrustedIssuerRegistry(address)\":{\"params\":{\"_trustedIssuersRegistry\":\"an address of TrustedIssuerRegistry\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"checkValidIdentity(address)\":{\"notice\":\"Check valid identity contract\"},\"claimIsValid(address,uint256)\":{\"notice\":\"Check valid or invalid of given claim by ClaimHolder\"},\"getRecoveredAddress(bytes,bytes32)\":{\"notice\":\"Get address of signed data\"},\"registerIdentity(address)\":{\"notice\":\"Register an identity contract for user account\"},\"removeIdentity(address)\":{\"notice\":\"Remove an identity contract\"},\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"setClaimTypesRegistry(address)\":{\"notice\":\"Set ClaimTypeRegistry\"},\"setTrustedIssuerRegistry(address)\":{\"notice\":\"Set TrustedIssuerRegistry\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/IdentityRegistry.sol\":\"IdentityRegistry\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/ClaimHolder.sol\":{\"keccak256\":\"0xcb603c58efda7c1485c8af8255094884c502663df127ed4ff440a078f963359e\",\"urls\":[\"bzzr://107fe031bd5e714f0c6970f074d93f3f1908a5ecc13bf23d361ea23d0c879629\"]},\"/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/ClaimTypesRegistry.sol\":{\"keccak256\":\"0x9d3690885dac1ec0b51c9217e5ea7d3de9e5d334a1d2c3ad4483e1c5a2d65c1a\",\"urls\":[\"bzzr://993705ba070073bbd6dce0a3fe463fb423a71510c20533739dd181e8f51b5ce8\"]},\"/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/ClaimVerifier.sol\":{\"keccak256\":\"0xcc301b1884072e0fb0257417d6e78a790b3949d570f2cd9887a4b04e7d1b95a0\",\"urls\":[\"bzzr://633aaa49dfb37a22a675a7f38ff3b2174e9d28ad80c838868883e407eac42a7a\"]},\"/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/ERC725.sol\":{\"keccak256\":\"0xc1b642d3ad9ee1dfa446571b488f005ade7559337cd3370a4cbb2a7e40ed0bbd\",\"urls\":[\"bzzr://d1744bb03cb0045f16ad8c7db6d5f65ff6df97723dabee66a8affddd84bf643c\"]},\"/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/ERC735.sol\":{\"keccak256\":\"0xa50a048d08fd6f71d897d8b7ea241d079fd2154116c322997fad34bb839531fa\",\"urls\":[\"bzzr://8b01deef907aaebbbe0b12f26d575527427c9abf5fe255f2aba02c0ea503ee14\"]},\"/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/IdentityRegistry.sol\":{\"keccak256\":\"0xe7fa82dbd1afe659f0c0685f8cf7ac41f00da9f259c91db1bb5050ea88a19122\",\"urls\":[\"bzzr://9e3d889ddcb6eb3786fab55b284b65c3673bf6da633f5c3dfe876b6c75dd36a0\"]},\"/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/KeyHolder.sol\":{\"keccak256\":\"0x4ab334cf3585882103561a4b482364f665269a7de02e6ea1692661029c724a30\",\"urls\":[\"bzzr://30b0341599a231460f2529d4ce903c19c533289af0479a0088998ab1f8b71ab5\"]},\"/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/TrustedIssuersRegistry.sol\":{\"keccak256\":\"0xe5895f9a774c292807d5b3984c6e538461c0cce3ce5291acba1f16d37641ccbc\",\"urls\":[\"bzzr://cd122d1d4334959e43627e3ef363213930d2a750139ba564982d80524d6fa081\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x973e50d102a48ea6e132f18793b096910ed508656e89706744112cbb4ecaa9dd\",\"urls\":[\"bzzr://3b4ace05d2fa540ae11da5a4658f0993f4a364737d678d6ec96f12ef6caeeb7d\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051604080611a998339810180604052810190808051906020019092919080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a381600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff167f1b98cb79e6f73020175fe87333f1b91ad6a881519c0afe30340c2599b2b4bde060405160405180910390a280600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f19d81f7cb533715237b1db77a43b32bca3f63b44f684cbcd6e321e450eabb4f860405160405180910390a25050611887806102126000396000f3006080604052600436106100db576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631c2d74f2146100e057806363b8f8ff14610123578063715018a61461017e5780638da5cb5b146101955780638f32d59b146101ec5780639fecd5541461021b5780639ff04d3314610280578063b760dab9146102d7578063c1edcdc114610332578063c1f2f1aa14610373578063c3b129e3146103ce578063f0eb5e5414610485578063f2fde38b146104e0578063f3c95c6014610523578063f6b4c5301461057e575b600080fd5b3480156100ec57600080fd5b50610121600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105c1565b005b34801561012f57600080fd5b50610164600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061065b565b604051808215151515815260200191505060405180910390f35b34801561018a57600080fd5b506101936108ab565b005b3480156101a157600080fd5b506101aa61097d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101f857600080fd5b506102016109a6565b604051808215151515815260200191505060405180910390f35b34801561022757600080fd5b50610266600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109fd565b604051808215151515815260200191505060405180910390f35b34801561028c57600080fd5b50610295611204565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102e357600080fd5b50610318600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061122a565b604051808215151515815260200191505060405180910390f35b34801561033e57600080fd5b5061035d600480360381019080803590602001909291905050506113b5565b6040518082815260200191505060405180910390f35b34801561037f57600080fd5b506103b4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113d8565b604051808215151515815260200191505060405180910390f35b3480156103da57600080fd5b50610443600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929080356000191690602001909291905050506114e8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561049157600080fd5b506104c6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115c0565b604051808215151515815260200191505060405180910390f35b3480156104ec57600080fd5b50610521600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115e0565b005b34801561052f57600080fd5b50610564600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115ff565b604051808215151515815260200191505060405180910390f35b34801561058a57600080fd5b506105bf600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611655565b005b6105c96109a6565b15156105d457600080fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f19d81f7cb533715237b1db77a43b32bca3f63b44f684cbcd6e321e450eabb4f860405160405180910390a250565b600081600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610729576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f636f6e747261637420616464726573732063616e27742062652061207a65726f81526020017f206164647265737300000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6107328161122a565b15156107a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f596f757220436c61696d206973206e6f742076616c696420666f72204b59430081525060200191505060405180910390fd5b60001515600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151561080557600080fd5b6001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550428373ffffffffffffffffffffffffffffffffffffffff167f22bfb6218489c201b6ec174e5dd0380b7877b3a2d12eed0542f6b5e8ef712f2860405160405180910390a36001915050919050565b6108b36109a6565b15156108be57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b600080600080606080600080600080600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9dd24c56040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610a9557600080fd5b505af1158015610aa9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015610ad357600080fd5b810190808051640100000000811115610aeb57600080fd5b82810190506020810184811115610b0157600080fd5b8151856020820283011164010000000082111715610b1e57600080fd5b505092919050505060019080519060200190610b3b9291906117e9565b50600095505b60018054905086101561118357600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166391b1fdeb600188815481101515610b9b57fe5b90600052602060002001546040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b158015610bf857600080fd5b505af1158015610c0c573d6000803e3d6000fd5b505050506040513d6020811015610c2257600080fd5b8101908080519060200190929190505050600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168d604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140182815260200192505050604051809103902094508d73ffffffffffffffffffffffffffffffffffffffff1663c9100bcb866040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050600060405180830381600087803b158015610d6757600080fd5b505af1158015610d7b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060c0811015610da557600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051640100000000811115610ddb57600080fd5b82810190506020810184811115610df157600080fd5b8151856001820283011164010000000082111715610e0e57600080fd5b50509291906020018051640100000000811115610e2a57600080fd5b82810190506020810184811115610e4057600080fd5b8151856001820283011164010000000082111715610e5d57600080fd5b50509291906020018051640100000000811115610e7957600080fd5b82810190506020810184811115610e8f57600080fd5b8151856001820283011164010000000082111715610eac57600080fd5b505092919050505050809b50819c50829d50839e50849f5050505050508d8d88604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140183815260200182805190602001908083835b602083101515610f485780518252602082019150602081019050602083039250610f23565b6001836020036101000a0380198251168184511680821785525050505050509050019350505050604051809103902093508360405180807f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250601c01826000191660001916815260200191505060405180910390209250610fcb88846114e8565b915081604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140191505060405180910390209050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d202158d8260036040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180836000191660001916815260200182815260200192505050602060405180830381600087803b1580156110c257600080fd5b505af11580156110d6573d6000803e3d6000fd5b505050506040513d60208110156110ec57600080fd5b810190808051906020019092919050505015611176577f5637aa6b77cde2de563765b75a65099af73d3bf22cb9d089a64a01777823208e8e8e604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a160019b506111f3565b8580600101965050610b41565b7fc1e461cfcaa9ff5efbb053582a325fbfebec1d94ac7e9d9958ee7f74c2b6b5588e8e604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a160009b505b505050505050505050505092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166316f91d136040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b1580156112b357600080fd5b505af11580156112c7573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156112f157600080fd5b81019080805164010000000081111561130957600080fd5b8281019050602081018481111561131f57600080fd5b815185602082028301116401000000008211171561133c57600080fd5b5050929190505050600590805190602001906113599291906117e9565b50600090505b6005805490508110156113aa5761138f8360058381548110151561137f57fe5b90600052602060002001546109fd565b1561139d57600191506113af565b808060010191505061135f565b600091505b50919050565b6005818154811015156113c457fe5b906000526020600020016000915090505481565b60006113e26109a6565b15156113ed57600080fd5b60011515600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151561144c57600080fd5b428273ffffffffffffffffffffffffffffffffffffffff167ff06dfe9062e9317cd357560ea667d65a9b032f1a674c04e99653e894e145c8fa60405160405180910390a3600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff021916905560019050919050565b60008060008060006041875114151561150457600094506115b6565b6020870151935060408701519250606087015160001a9150601b8260ff16101561152f57601b820191505b600186838686604051600081526020016040526040518085600019166000191681526020018460ff1660ff1681526020018360001916600019168152602001826000191660001916815260200194505050505060206040516020810390808403906000865af11580156115a6573d6000803e3d6000fd5b5050506020604051035190508094505b5050505092915050565b60046020528060005260406000206000915054906101000a900460ff1681565b6115e86109a6565b15156115f357600080fd5b6115fc816116ef565b50565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b61165d6109a6565b151561166857600080fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f1b98cb79e6f73020175fe87333f1b91ad6a881519c0afe30340c2599b2b4bde060405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561172b57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054828255906000526020600020908101928215611825579160200282015b82811115611824578251825591602001919060010190611809565b5b5090506118329190611836565b5090565b61185891905b8082111561185457600081600090555060010161183c565b5090565b905600a165627a7a72305820d2934fc1acd2d9ddd4072645fa11650d509e16ea283fb2a532fef56a1fd238d30029",
  "deployedBytecode": "0x6080604052600436106100db576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631c2d74f2146100e057806363b8f8ff14610123578063715018a61461017e5780638da5cb5b146101955780638f32d59b146101ec5780639fecd5541461021b5780639ff04d3314610280578063b760dab9146102d7578063c1edcdc114610332578063c1f2f1aa14610373578063c3b129e3146103ce578063f0eb5e5414610485578063f2fde38b146104e0578063f3c95c6014610523578063f6b4c5301461057e575b600080fd5b3480156100ec57600080fd5b50610121600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105c1565b005b34801561012f57600080fd5b50610164600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061065b565b604051808215151515815260200191505060405180910390f35b34801561018a57600080fd5b506101936108ab565b005b3480156101a157600080fd5b506101aa61097d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101f857600080fd5b506102016109a6565b604051808215151515815260200191505060405180910390f35b34801561022757600080fd5b50610266600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109fd565b604051808215151515815260200191505060405180910390f35b34801561028c57600080fd5b50610295611204565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102e357600080fd5b50610318600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061122a565b604051808215151515815260200191505060405180910390f35b34801561033e57600080fd5b5061035d600480360381019080803590602001909291905050506113b5565b6040518082815260200191505060405180910390f35b34801561037f57600080fd5b506103b4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113d8565b604051808215151515815260200191505060405180910390f35b3480156103da57600080fd5b50610443600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929080356000191690602001909291905050506114e8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561049157600080fd5b506104c6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115c0565b604051808215151515815260200191505060405180910390f35b3480156104ec57600080fd5b50610521600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115e0565b005b34801561052f57600080fd5b50610564600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115ff565b604051808215151515815260200191505060405180910390f35b34801561058a57600080fd5b506105bf600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611655565b005b6105c96109a6565b15156105d457600080fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f19d81f7cb533715237b1db77a43b32bca3f63b44f684cbcd6e321e450eabb4f860405160405180910390a250565b600081600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610729576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f636f6e747261637420616464726573732063616e27742062652061207a65726f81526020017f206164647265737300000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6107328161122a565b15156107a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f596f757220436c61696d206973206e6f742076616c696420666f72204b59430081525060200191505060405180910390fd5b60001515600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151561080557600080fd5b6001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550428373ffffffffffffffffffffffffffffffffffffffff167f22bfb6218489c201b6ec174e5dd0380b7877b3a2d12eed0542f6b5e8ef712f2860405160405180910390a36001915050919050565b6108b36109a6565b15156108be57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b600080600080606080600080600080600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9dd24c56040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610a9557600080fd5b505af1158015610aa9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015610ad357600080fd5b810190808051640100000000811115610aeb57600080fd5b82810190506020810184811115610b0157600080fd5b8151856020820283011164010000000082111715610b1e57600080fd5b505092919050505060019080519060200190610b3b9291906117e9565b50600095505b60018054905086101561118357600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166391b1fdeb600188815481101515610b9b57fe5b90600052602060002001546040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b158015610bf857600080fd5b505af1158015610c0c573d6000803e3d6000fd5b505050506040513d6020811015610c2257600080fd5b8101908080519060200190929190505050600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168d604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140182815260200192505050604051809103902094508d73ffffffffffffffffffffffffffffffffffffffff1663c9100bcb866040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050600060405180830381600087803b158015610d6757600080fd5b505af1158015610d7b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060c0811015610da557600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051640100000000811115610ddb57600080fd5b82810190506020810184811115610df157600080fd5b8151856001820283011164010000000082111715610e0e57600080fd5b50509291906020018051640100000000811115610e2a57600080fd5b82810190506020810184811115610e4057600080fd5b8151856001820283011164010000000082111715610e5d57600080fd5b50509291906020018051640100000000811115610e7957600080fd5b82810190506020810184811115610e8f57600080fd5b8151856001820283011164010000000082111715610eac57600080fd5b505092919050505050809b50819c50829d50839e50849f5050505050508d8d88604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140183815260200182805190602001908083835b602083101515610f485780518252602082019150602081019050602083039250610f23565b6001836020036101000a0380198251168184511680821785525050505050509050019350505050604051809103902093508360405180807f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250601c01826000191660001916815260200191505060405180910390209250610fcb88846114e8565b915081604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140191505060405180910390209050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d202158d8260036040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180836000191660001916815260200182815260200192505050602060405180830381600087803b1580156110c257600080fd5b505af11580156110d6573d6000803e3d6000fd5b505050506040513d60208110156110ec57600080fd5b810190808051906020019092919050505015611176577f5637aa6b77cde2de563765b75a65099af73d3bf22cb9d089a64a01777823208e8e8e604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a160019b506111f3565b8580600101965050610b41565b7fc1e461cfcaa9ff5efbb053582a325fbfebec1d94ac7e9d9958ee7f74c2b6b5588e8e604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a160009b505b505050505050505050505092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166316f91d136040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b1580156112b357600080fd5b505af11580156112c7573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156112f157600080fd5b81019080805164010000000081111561130957600080fd5b8281019050602081018481111561131f57600080fd5b815185602082028301116401000000008211171561133c57600080fd5b5050929190505050600590805190602001906113599291906117e9565b50600090505b6005805490508110156113aa5761138f8360058381548110151561137f57fe5b90600052602060002001546109fd565b1561139d57600191506113af565b808060010191505061135f565b600091505b50919050565b6005818154811015156113c457fe5b906000526020600020016000915090505481565b60006113e26109a6565b15156113ed57600080fd5b60011515600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151561144c57600080fd5b428273ffffffffffffffffffffffffffffffffffffffff167ff06dfe9062e9317cd357560ea667d65a9b032f1a674c04e99653e894e145c8fa60405160405180910390a3600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff021916905560019050919050565b60008060008060006041875114151561150457600094506115b6565b6020870151935060408701519250606087015160001a9150601b8260ff16101561152f57601b820191505b600186838686604051600081526020016040526040518085600019166000191681526020018460ff1660ff1681526020018360001916600019168152602001826000191660001916815260200194505050505060206040516020810390808403906000865af11580156115a6573d6000803e3d6000fd5b5050506020604051035190508094505b5050505092915050565b60046020528060005260406000206000915054906101000a900460ff1681565b6115e86109a6565b15156115f357600080fd5b6115fc816116ef565b50565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b61165d6109a6565b151561166857600080fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f1b98cb79e6f73020175fe87333f1b91ad6a881519c0afe30340c2599b2b4bde060405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561172b57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054828255906000526020600020908101928215611825579160200282015b82811115611824578251825591602001919060010190611809565b5b5090506118329190611836565b5090565b61185891905b8082111561185457600081600090555060010161183c565b5090565b905600a165627a7a72305820d2934fc1acd2d9ddd4072645fa11650d509e16ea283fb2a532fef56a1fd238d30029",
  "sourceMap": "185:3676:5:-;;;1415:350;8:9:-1;5:2;;;30:1;27;20:12;5:2;1415:350:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;518:10:13;509:6;;:19;;;;;;;;;;;;;;;;;;572:6;;;;;;;;;;;539:40;;568:1;539:40;;;;;;;;;;;;1547:23:5;1506:15;;:65;;;;;;;;;;;;;;;;;;1612:23;1586:50;;;;;;;;;;;;1681:19;1646:13;;:55;;;;;;;;;;;;;;;;;;1738:19;1716:42;;;;;;;;;;;;1415:350;;185:3676;;;;;;",
  "deployedSourceMap": "185:3676:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2719:206;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2719:206:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;1956:258;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1956:258:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1273:127:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1273:127:13;;;;;;639:70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;639:70:13;;;;;;;;;;;;;;;;;;;;;;;;;;;926:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;926:83:13;;;;;;;;;;;;;;;;;;;;;;;;;;;581:1442:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;581:1442:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;457:39:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;457:39:5;;;;;;;;;;;;;;;;;;;;;;;;;;;3427:318;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3427:318:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;423:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;423:27:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2361:235;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2361:235:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2209:655:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2209:655:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;316:40:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;316:40:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1561:101:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1561:101:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;3751:108:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3751:108:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3060:231;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3060:231:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;2719:206;824:9:13;:7;:9::i;:::-;816:18;;;;;;;;2841:19:5;2806:13;;:55;;;;;;;;;;;;;;;;;;2898:19;2876:42;;;;;;;;;;;;2719:206;:::o;1956:258::-;2048:4;2021:9;1054:1;1025:31;;:17;:31;;;;1017:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1119:37;1138:17;1119:18;:37::i;:::-;1111:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2095:5;2072:28;;:8;:19;2081:9;2072:19;;;;;;;;;;;;;;;;;;;;;;;;;:28;;;2064:37;;;;;;;;2133:4;2111:8;:19;2120:9;2111:19;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;2182:3;2171:9;2152:34;;;;;;;;;;;;2203:4;2196:11;;1956:258;;;;:::o;1273:127:13:-;824:9;:7;:9::i;:::-;816:18;;;;;;;;1367:1;1330:40;;1351:6;;;;;;;;;;;1330:40;;;;;;;;;;;;1393:1;1376:6;;:19;;;;;;;;;;;;;;;;;;1273:127::o;639:70::-;676:7;698:6;;;;;;;;;;;691:13;;639:70;:::o;926:83::-;965:4;998:6;;;;;;;;;;;984:20;;:10;:20;;;977:27;;926:83;:::o;581:1442:2:-;682:15;713:22;745:14;769;793:16;819:17;913:6;1112:15;1313:16;1383:20;1522:17;1641:18;863:15;;;;;;;;;;;:33;;;:35;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;863:35:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;863:35:2;;;;;;39:16:-1;36:1;17:17;2:54;863:35:2;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;863:35:2;;;;;;20:11:-1;15:3;12:20;9:2;;;45:1;42;35:12;9:2;73:11;68:3;64:21;57:28;;126:4;121:3;117:14;163:9;145:16;142:31;139:2;;;186:1;183;176:12;139:2;224:3;218:10;339:9;333:2;319:12;315:21;297:16;293:44;290:59;268:11;254:12;251:29;239:119;236:2;;;371:1;368;361:12;236:2;0:383;;863:35:2;;;;;;847:13;:51;;;;;;;;;;;;:::i;:::-;;922:1;913:10;;909:1037;927:13;:20;;;;925:1;:22;909:1037;;;989:15;;;;;;;;;;;:32;;;1022:13;1036:1;1022:16;;;;;;;;;;;;;;;;;;989:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;989:50:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;989:50:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;989:50:2;;;;;;;;;;;;;;;;968:18;;:71;;;;;;;;;;;;;;;;;;1140:18;;;;;;;;;;;1160:9;1130:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1112:58;;1271:9;:18;;;1290:7;1271:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1271:27:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1271:27:2;;;;;;39:16:-1;36:1;17:17;2:54;1271:27:2;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:3;8;5:12;2:2;;;30:1;27;20:12;2:2;1271:27:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20:11:-1;15:3;12:20;9:2;;;45:1;42;35:12;9:2;73:11;68:3;64:21;57:28;;126:4;121:3;117:14;163:9;145:16;142:31;139:2;;;186:1;183;176:12;139:2;224:3;218:10;338:9;333:1;319:12;315:20;297:16;293:43;290:58;268:11;254:12;251:29;239:118;236:2;;;370:1;367;360:12;236:2;0:382;;1271:27:2;;;;;;;20:11:-1;15:3;12:20;9:2;;;45:1;42;35:12;9:2;73:11;68:3;64:21;57:28;;126:4;121:3;117:14;163:9;145:16;142:31;139:2;;;186:1;183;176:12;139:2;224:3;218:10;338:9;333:1;319:12;315:20;297:16;293:43;290:58;268:11;254:12;251:29;239:118;236:2;;;370:1;367;360:12;236:2;0:382;;1271:27:2;;;;;;;20:11:-1;15:3;12:20;9:2;;;45:1;42;35:12;9:2;73:11;68:3;64:21;57:28;;126:4;121:3;117:14;163:9;145:16;142:31;139:2;;;186:1;183;176:12;139:2;224:3;218:10;338:9;333:1;319:12;315:20;297:16;293:43;290:58;268:11;254:12;251:29;239:118;236:2;;;370:1;367;360:12;236:2;0:382;;1271:27:2;;;;;;1222:76;;;;;;;;;;;;;;;;;;;;;1342:9;1353;1364:4;1332:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1332:37:2;;;;;;;;;;;;;;;;;;1313:56;;1452:8;1406:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1383:78;;1542:38;1562:3;1567:12;1542:19;:38::i;:::-;1522:58;;1672:9;1662:20;;;;;;;;;;;;;;;;;;;;;;;;1641:41;;1788:18;;;;;;;;;;;:32;;;1821:10;1833:1;1788:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1788:47:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1788:47:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1788:47:2;;;;;;;;;;;;;;;;1785:151;;;1860:32;1871:9;1882;1860:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;1917:4;1910:11;;;;1785:151;949:3;;;;;;;909:1037;;;1960:34;1973:9;1984;1960:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;2011:5;2004:12;;581:1442;;;;;;;;;;;;;;;;:::o;457:39:5:-;;;;;;;;;;;;;:::o;3427:318::-;3494:4;3566:6;3523:13;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3523:29:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3523:29:5;;;;;;39:16:-1;36:1;17:17;2:54;3523:29:5;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3523:29:5;;;;;;20:11:-1;15:3;12:20;9:2;;;45:1;42;35:12;9:2;73:11;68:3;64:21;57:28;;126:4;121:3;117:14;163:9;145:16;142:31;139:2;;;186:1;183;176:12;139:2;224:3;218:10;339:9;333:2;319:12;315:21;297:16;293:44;290:59;268:11;254:12;251:29;239:119;236:2;;;371:1;368;361:12;236:2;0:383;;3523:29:5;;;;;;3510:10;:42;;;;;;;;;;;;:::i;:::-;;3575:1;3566:10;;3562:155;3582:10;:17;;;;3578:1;:21;3562:155;;;3623:38;3636:9;3647:10;3658:1;3647:13;;;;;;;;;;;;;;;;;;3623:12;:38::i;:::-;3620:87;;;3688:4;3681:11;;;;3620:87;3601:3;;;;;;;3562:155;;;3733:5;3726:12;;3427:318;;;;;:::o;423:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2361:235::-;2434:4;824:9:13;:7;:9::i;:::-;816:18;;;;;;;;2481:4:5;2458:27;;:8;:19;2467:9;2458:19;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;2450:36;;;;;;;;2528:3;2517:9;2501:31;;;;;;;;;;;;2549:8;:19;2558:9;2549:19;;;;;;;;;;;;;;;;2542:26;;;;;;;;;;;2585:4;2578:11;;2361:235;;;:::o;2209:655:2:-;2312:12;2340:10;2360;2380:8;2763:24;2455:2;2441:3;:10;:16;;2437:57;;;2481:1;2473:10;;;;2437:57;2602:2;2597:3;2593:12;2587:19;2581:25;;2638:2;2633:3;2629:12;2623:19;2617:25;;2682:2;2677:3;2673:12;2667:19;2664:1;2659:28;2653:34;;2716:2;2711;:7;;;2707:46;;;2740:2;2734:8;;;;2707:46;2790:31;2800:8;2810:2;2814;2818;2790:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2790:31:2;;;;;;;;2763:58;;2840:16;2832:25;;2209:655;;;;;;;;;:::o;316:40:5:-;;;;;;;;;;;;;;;;;;;;;;:::o;1561:101:13:-;824:9;:7;:9::i;:::-;816:18;;;;;;;;1629:28;1648:8;1629:18;:28::i;:::-;1561:101;:::o;3751:108:5:-;3811:4;3833:8;:19;3842:9;3833:19;;;;;;;;;;;;;;;;;;;;;;;;;3826:26;;3751:108;;;:::o;3060:231::-;824:9:13;:7;:9::i;:::-;816:18;;;;;;;;3195:23:5;3154:15;;:65;;;;;;;;;;;;;;;;;;3260:23;3234:50;;;;;;;;;;;;3060:231;:::o;1796:169:13:-;1885:1;1865:22;;:8;:22;;;;1857:31;;;;;;;;1928:8;1899:38;;1920:6;;;;;;;;;;;1899:38;;;;;;;;;;;;1952:8;1943:6;;:17;;;;;;;;;;;;;;;;;;1796:169;:::o;185:3676:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"./ClaimHolder.sol\";\nimport \"./ClaimTypesRegistry.sol\";\nimport \"./ClaimVerifier.sol\";\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\n\ncontract IdentityRegistry is Ownable, ClaimVerifier {\n\n    //mapping between a user id and the corresponding identity contract\n    mapping(address => bool) public identity;\n    \n    //Array storing trusted claim types of the services\n    uint256[] public claimTypes;\n\n    ClaimTypesRegistry public typesRegistry;\n\n    event IdentityRegistered(ClaimHolder indexed identity, uint256 indexed time);\n    event IdentityRemoved(ClaimHolder indexed identity, uint256 indexed time);\n    event ClaimTypesRegistrySet(address indexed _claimTypesRegistry);\n    event TrustedIssuersRegistrySet(address indexed _trustedIssuersRegistry);\n    /**\n    * @notice check valid identity (KYC)\n    * @param _identityContract an address of user identity contract (ClaimHolder)\n     */\n    modifier isValidIdentity(ClaimHolder _identityContract) {\n        require(_identityContract != address(0), \"contract address can't be a zero address\");\n        require(checkValidIdentity(_identityContract),  \"Your Claim is not valid for KYC\");\n        _;\n    }\n\n     /**\n    * @notice constructor of the contract\n    * @param _trustedIssuersRegistry the address of TrustedIssuerRegistry\n    * @param _claimTypesRegistry the address of ClaimTypeRegistry\n    */\n    constructor(address _trustedIssuersRegistry, address _claimTypesRegistry) public {\n        issuersRegistry = TrustedIssuersRegistry(_trustedIssuersRegistry);\n        emit TrustedIssuersRegistrySet(_trustedIssuersRegistry);\n        typesRegistry = ClaimTypesRegistry(_claimTypesRegistry);\n        emit ClaimTypesRegistrySet(_claimTypesRegistry);\n    }\n\n    /**\n    * @notice Register an identity contract for user account\n    * @param _identity The address of the user's identity contract (ClaimHolder)\n    * @return true or false\n    */\n    function registerIdentity(ClaimHolder _identity) isValidIdentity(_identity) public returns (bool) {\n        require(identity[_identity] == false);\n        identity[_identity] = true;\n        emit IdentityRegistered(_identity, now);\n        return true;\n    }\n\n    /**\n    * @notice Remove an identity contract\n    * @param _identity is an identity contract of user\n    * @return true or false\n     */\n    function removeIdentity(ClaimHolder _identity) onlyOwner public returns (bool) {\n        require(identity[_identity] == true);\n        emit IdentityRemoved(_identity, now);\n        delete identity[_identity];\n        return true;\n    }\n\n    /**\n    * @notice Set ClaimTypeRegistry\n    * @param _claimTypesRegistry an address of ClaimTypeRegistry\n     */\n    function setClaimTypesRegistry(address _claimTypesRegistry) public onlyOwner {\n        typesRegistry = ClaimTypesRegistry(_claimTypesRegistry);\n        emit ClaimTypesRegistrySet(_claimTypesRegistry);\n    }\n\n    /**\n    * @notice Set TrustedIssuerRegistry\n    * @param _trustedIssuersRegistry an address of TrustedIssuerRegistry\n     */\n    function setTrustedIssuerRegistry(address _trustedIssuersRegistry) public onlyOwner {\n        issuersRegistry = TrustedIssuersRegistry(_trustedIssuersRegistry);\n        emit TrustedIssuersRegistrySet(_trustedIssuersRegistry);\n    }\n\n    /**\n    * @notice Check valid identity contract\n    * @param _identity an address of user\n    * @return true or false\n     */\n    function checkValidIdentity(ClaimHolder _identity) public returns (bool) {\n        claimTypes = typesRegistry.getClaimTypes();\n        for(uint i = 0; i < claimTypes.length; i++) {\n            if(claimIsValid(_identity, claimTypes[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    function isValidUser(ClaimHolder _identity) public returns (bool){\n        return identity[_identity];\n    }\n} ",
  "sourcePath": "/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/IdentityRegistry.sol",
  "ast": {
    "absolutePath": "/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/IdentityRegistry.sol",
    "exportedSymbols": {
      "IdentityRegistry": [
        1119
      ]
    },
    "id": 1120,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 882,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "absolutePath": "/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/ClaimHolder.sol",
        "file": "./ClaimHolder.sol",
        "id": 883,
        "nodeType": "ImportDirective",
        "scope": 1120,
        "sourceUnit": 302,
        "src": "26:27:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/ClaimTypesRegistry.sol",
        "file": "./ClaimTypesRegistry.sol",
        "id": 884,
        "nodeType": "ImportDirective",
        "scope": 1120,
        "sourceUnit": 436,
        "src": "54:34:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/ClaimVerifier.sol",
        "file": "./ClaimVerifier.sol",
        "id": 885,
        "nodeType": "ImportDirective",
        "scope": 1120,
        "sourceUnit": 631,
        "src": "89:29:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 886,
        "nodeType": "ImportDirective",
        "scope": 1120,
        "sourceUnit": 2616,
        "src": "119:63:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 887,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2615,
              "src": "214:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2615",
                "typeString": "contract Ownable"
              }
            },
            "id": 888,
            "nodeType": "InheritanceSpecifier",
            "src": "214:7:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 889,
              "name": "ClaimVerifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 630,
              "src": "223:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ClaimVerifier_$630",
                "typeString": "contract ClaimVerifier"
              }
            },
            "id": 890,
            "nodeType": "InheritanceSpecifier",
            "src": "223:13:5"
          }
        ],
        "contractDependencies": [
          630,
          2615
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1119,
        "linearizedBaseContracts": [
          1119,
          630,
          2615
        ],
        "name": "IdentityRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 894,
            "name": "identity",
            "nodeType": "VariableDeclaration",
            "scope": 1119,
            "src": "316:40:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 893,
              "keyType": {
                "id": 891,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "324:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "316:24:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 892,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "335:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 897,
            "name": "claimTypes",
            "nodeType": "VariableDeclaration",
            "scope": 1119,
            "src": "423:27:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 895,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "423:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 896,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "423:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 899,
            "name": "typesRegistry",
            "nodeType": "VariableDeclaration",
            "scope": 1119,
            "src": "457:39:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ClaimTypesRegistry_$435",
              "typeString": "contract ClaimTypesRegistry"
            },
            "typeName": {
              "contractScope": null,
              "id": 898,
              "name": "ClaimTypesRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 435,
              "src": "457:18:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ClaimTypesRegistry_$435",
                "typeString": "contract ClaimTypesRegistry"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 905,
            "name": "IdentityRegistered",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 901,
                  "indexed": true,
                  "name": "identity",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "528:28:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ClaimHolder_$301",
                    "typeString": "contract ClaimHolder"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 900,
                    "name": "ClaimHolder",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 301,
                    "src": "528:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimHolder_$301",
                      "typeString": "contract ClaimHolder"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 903,
                  "indexed": true,
                  "name": "time",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "558:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 902,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "558:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "527:52:5"
            },
            "src": "503:77:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 911,
            "name": "IdentityRemoved",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 907,
                  "indexed": true,
                  "name": "identity",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "607:28:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ClaimHolder_$301",
                    "typeString": "contract ClaimHolder"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 906,
                    "name": "ClaimHolder",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 301,
                    "src": "607:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimHolder_$301",
                      "typeString": "contract ClaimHolder"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 909,
                  "indexed": true,
                  "name": "time",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "637:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 908,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "637:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "606:52:5"
            },
            "src": "585:74:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 915,
            "name": "ClaimTypesRegistrySet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 913,
                  "indexed": true,
                  "name": "_claimTypesRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 915,
                  "src": "692:35:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 912,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "692:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "691:37:5"
            },
            "src": "664:65:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 919,
            "name": "TrustedIssuersRegistrySet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 917,
                  "indexed": true,
                  "name": "_trustedIssuersRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 919,
                  "src": "766:39:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 916,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "766:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "765:41:5"
            },
            "src": "734:73:5"
          },
          {
            "body": {
              "id": 940,
              "nodeType": "Block",
              "src": "1007:204:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 924,
                          "name": "_identityContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 921,
                          "src": "1025:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ClaimHolder_$301",
                            "typeString": "contract ClaimHolder"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 926,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1054:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 925,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1046:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1046:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1025:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "636f6e747261637420616464726573732063616e27742062652061207a65726f2061646472657373",
                        "id": 929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1058:42:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_314ef5c8b61d6eefa1e6923e3945ebb4c3411155c8152476346dd6297d263859",
                          "typeString": "literal_string \"contract address can't be a zero address\""
                        },
                        "value": "contract address can't be a zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_314ef5c8b61d6eefa1e6923e3945ebb4c3411155c8152476346dd6297d263859",
                          "typeString": "literal_string \"contract address can't be a zero address\""
                        }
                      ],
                      "id": 923,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3174,
                        3175
                      ],
                      "referencedDeclaration": 3175,
                      "src": "1017:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1017:84:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 931,
                  "nodeType": "ExpressionStatement",
                  "src": "1017:84:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 934,
                            "name": "_identityContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 921,
                            "src": "1138:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ClaimHolder_$301",
                              "typeString": "contract ClaimHolder"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ClaimHolder_$301",
                              "typeString": "contract ClaimHolder"
                            }
                          ],
                          "id": 933,
                          "name": "checkValidIdentity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1106,
                          "src": "1119:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ClaimHolder_$301_$returns$_t_bool_$",
                            "typeString": "function (contract ClaimHolder) returns (bool)"
                          }
                        },
                        "id": 935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1119:37:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f757220436c61696d206973206e6f742076616c696420666f72204b5943",
                        "id": 936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1159:33:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31ee6fda9fba78f039a33b4c520a3e06c25cc9cd680fca3ff2d2c2136150bab5",
                          "typeString": "literal_string \"Your Claim is not valid for KYC\""
                        },
                        "value": "Your Claim is not valid for KYC"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31ee6fda9fba78f039a33b4c520a3e06c25cc9cd680fca3ff2d2c2136150bab5",
                          "typeString": "literal_string \"Your Claim is not valid for KYC\""
                        }
                      ],
                      "id": 932,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3174,
                        3175
                      ],
                      "referencedDeclaration": 3175,
                      "src": "1111:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1111:82:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 938,
                  "nodeType": "ExpressionStatement",
                  "src": "1111:82:5"
                },
                {
                  "id": 939,
                  "nodeType": "PlaceholderStatement",
                  "src": "1203:1:5"
                }
              ]
            },
            "documentation": "@notice check valid identity (KYC)\n@param _identityContract an address of user identity contract (ClaimHolder)",
            "id": 941,
            "name": "isValidIdentity",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 921,
                  "name": "_identityContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 941,
                  "src": "976:29:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ClaimHolder_$301",
                    "typeString": "contract ClaimHolder"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 920,
                    "name": "ClaimHolder",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 301,
                    "src": "976:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimHolder_$301",
                      "typeString": "contract ClaimHolder"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "975:31:5"
            },
            "src": "951:260:5",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 968,
              "nodeType": "Block",
              "src": "1496:269:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 948,
                      "name": "issuersRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 446,
                      "src": "1506:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TrustedIssuersRegistry_$2024",
                        "typeString": "contract TrustedIssuersRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 950,
                          "name": "_trustedIssuersRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 943,
                          "src": "1547:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 949,
                        "name": "TrustedIssuersRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2024,
                        "src": "1524:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TrustedIssuersRegistry_$2024_$",
                          "typeString": "type(contract TrustedIssuersRegistry)"
                        }
                      },
                      "id": 951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1524:47:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TrustedIssuersRegistry_$2024",
                        "typeString": "contract TrustedIssuersRegistry"
                      }
                    },
                    "src": "1506:65:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TrustedIssuersRegistry_$2024",
                      "typeString": "contract TrustedIssuersRegistry"
                    }
                  },
                  "id": 953,
                  "nodeType": "ExpressionStatement",
                  "src": "1506:65:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 955,
                        "name": "_trustedIssuersRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 943,
                        "src": "1612:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 954,
                      "name": "TrustedIssuersRegistrySet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 919,
                      "src": "1586:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1586:50:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 957,
                  "nodeType": "EmitStatement",
                  "src": "1581:55:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 958,
                      "name": "typesRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 899,
                      "src": "1646:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ClaimTypesRegistry_$435",
                        "typeString": "contract ClaimTypesRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 960,
                          "name": "_claimTypesRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 945,
                          "src": "1681:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 959,
                        "name": "ClaimTypesRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "1662:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ClaimTypesRegistry_$435_$",
                          "typeString": "type(contract ClaimTypesRegistry)"
                        }
                      },
                      "id": 961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1662:39:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ClaimTypesRegistry_$435",
                        "typeString": "contract ClaimTypesRegistry"
                      }
                    },
                    "src": "1646:55:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimTypesRegistry_$435",
                      "typeString": "contract ClaimTypesRegistry"
                    }
                  },
                  "id": 963,
                  "nodeType": "ExpressionStatement",
                  "src": "1646:55:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 965,
                        "name": "_claimTypesRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 945,
                        "src": "1738:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 964,
                      "name": "ClaimTypesRegistrySet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 915,
                      "src": "1716:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1716:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 967,
                  "nodeType": "EmitStatement",
                  "src": "1711:47:5"
                }
              ]
            },
            "documentation": "@notice constructor of the contract\n@param _trustedIssuersRegistry the address of TrustedIssuerRegistry\n@param _claimTypesRegistry the address of ClaimTypeRegistry",
            "id": 969,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 943,
                  "name": "_trustedIssuersRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "1427:31:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 942,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1427:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 945,
                  "name": "_claimTypesRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "1460:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 944,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1460:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1426:62:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 947,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1496:0:5"
            },
            "scope": 1119,
            "src": "1415:350:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1000,
              "nodeType": "Block",
              "src": "2054:160:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 980,
                            "name": "identity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 894,
                            "src": "2072:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 982,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 981,
                            "name": "_identity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 971,
                            "src": "2081:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ClaimHolder_$301",
                              "typeString": "contract ClaimHolder"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2072:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2095:5:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2072:28:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 979,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3174,
                        3175
                      ],
                      "referencedDeclaration": 3174,
                      "src": "2064:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2064:37:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 986,
                  "nodeType": "ExpressionStatement",
                  "src": "2064:37:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 987,
                        "name": "identity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 894,
                        "src": "2111:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 989,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 988,
                        "name": "_identity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 971,
                        "src": "2120:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ClaimHolder_$301",
                          "typeString": "contract ClaimHolder"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2111:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2133:4:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2111:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 992,
                  "nodeType": "ExpressionStatement",
                  "src": "2111:26:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 994,
                        "name": "_identity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 971,
                        "src": "2171:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ClaimHolder_$301",
                          "typeString": "contract ClaimHolder"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 995,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3173,
                        "src": "2182:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ClaimHolder_$301",
                          "typeString": "contract ClaimHolder"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 993,
                      "name": "IdentityRegistered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 905,
                      "src": "2152:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_ClaimHolder_$301_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ClaimHolder,uint256)"
                      }
                    },
                    "id": 996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2152:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 997,
                  "nodeType": "EmitStatement",
                  "src": "2147:39:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2203:4:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 978,
                  "id": 999,
                  "nodeType": "Return",
                  "src": "2196:11:5"
                }
              ]
            },
            "documentation": "@notice Register an identity contract for user account\n@param _identity The address of the user's identity contract (ClaimHolder)\n@return true or false",
            "id": 1001,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 974,
                    "name": "_identity",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 971,
                    "src": "2021:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimHolder_$301",
                      "typeString": "contract ClaimHolder"
                    }
                  }
                ],
                "id": 975,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 973,
                  "name": "isValidIdentity",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 941,
                  "src": "2005:15:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_contract$_ClaimHolder_$301_$",
                    "typeString": "modifier (contract ClaimHolder)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2005:26:5"
              }
            ],
            "name": "registerIdentity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 971,
                  "name": "_identity",
                  "nodeType": "VariableDeclaration",
                  "scope": 1001,
                  "src": "1982:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ClaimHolder_$301",
                    "typeString": "contract ClaimHolder"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 970,
                    "name": "ClaimHolder",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 301,
                    "src": "1982:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimHolder_$301",
                      "typeString": "contract ClaimHolder"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1981:23:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 977,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1001,
                  "src": "2048:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 976,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2048:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2047:6:5"
            },
            "scope": 1119,
            "src": "1956:258:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1030,
              "nodeType": "Block",
              "src": "2440:156:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1011,
                            "name": "identity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 894,
                            "src": "2458:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1013,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1012,
                            "name": "_identity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1003,
                            "src": "2467:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ClaimHolder_$301",
                              "typeString": "contract ClaimHolder"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2458:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2481:4:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2458:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1010,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3174,
                        3175
                      ],
                      "referencedDeclaration": 3174,
                      "src": "2450:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2450:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1017,
                  "nodeType": "ExpressionStatement",
                  "src": "2450:36:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1019,
                        "name": "_identity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1003,
                        "src": "2517:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ClaimHolder_$301",
                          "typeString": "contract ClaimHolder"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1020,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3173,
                        "src": "2528:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ClaimHolder_$301",
                          "typeString": "contract ClaimHolder"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1018,
                      "name": "IdentityRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 911,
                      "src": "2501:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_ClaimHolder_$301_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ClaimHolder,uint256)"
                      }
                    },
                    "id": 1021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2501:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1022,
                  "nodeType": "EmitStatement",
                  "src": "2496:36:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2542:26:5",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1023,
                        "name": "identity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 894,
                        "src": "2549:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1025,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1024,
                        "name": "_identity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1003,
                        "src": "2558:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ClaimHolder_$301",
                          "typeString": "contract ClaimHolder"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2549:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1027,
                  "nodeType": "ExpressionStatement",
                  "src": "2542:26:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 1028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2585:4:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1009,
                  "id": 1029,
                  "nodeType": "Return",
                  "src": "2578:11:5"
                }
              ]
            },
            "documentation": "@notice Remove an identity contract\n@param _identity is an identity contract of user\n@return true or false",
            "id": 1031,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1006,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1005,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2549,
                  "src": "2408:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2408:9:5"
              }
            ],
            "name": "removeIdentity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1003,
                  "name": "_identity",
                  "nodeType": "VariableDeclaration",
                  "scope": 1031,
                  "src": "2385:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ClaimHolder_$301",
                    "typeString": "contract ClaimHolder"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1002,
                    "name": "ClaimHolder",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 301,
                    "src": "2385:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimHolder_$301",
                      "typeString": "contract ClaimHolder"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2384:23:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 1009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1008,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1031,
                  "src": "2434:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1007,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2434:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2433:6:5"
            },
            "scope": 1119,
            "src": "2361:235:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1048,
              "nodeType": "Block",
              "src": "2796:129:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1038,
                      "name": "typesRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 899,
                      "src": "2806:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ClaimTypesRegistry_$435",
                        "typeString": "contract ClaimTypesRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1040,
                          "name": "_claimTypesRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1033,
                          "src": "2841:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1039,
                        "name": "ClaimTypesRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "2822:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ClaimTypesRegistry_$435_$",
                          "typeString": "type(contract ClaimTypesRegistry)"
                        }
                      },
                      "id": 1041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2822:39:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ClaimTypesRegistry_$435",
                        "typeString": "contract ClaimTypesRegistry"
                      }
                    },
                    "src": "2806:55:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimTypesRegistry_$435",
                      "typeString": "contract ClaimTypesRegistry"
                    }
                  },
                  "id": 1043,
                  "nodeType": "ExpressionStatement",
                  "src": "2806:55:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1045,
                        "name": "_claimTypesRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1033,
                        "src": "2898:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1044,
                      "name": "ClaimTypesRegistrySet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 915,
                      "src": "2876:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2876:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1047,
                  "nodeType": "EmitStatement",
                  "src": "2871:47:5"
                }
              ]
            },
            "documentation": "@notice Set ClaimTypeRegistry\n@param _claimTypesRegistry an address of ClaimTypeRegistry",
            "id": 1049,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1036,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1035,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2549,
                  "src": "2786:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2786:9:5"
              }
            ],
            "name": "setClaimTypesRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1033,
                  "name": "_claimTypesRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 1049,
                  "src": "2750:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1032,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2750:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2749:29:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 1037,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2796:0:5"
            },
            "scope": 1119,
            "src": "2719:206:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1066,
              "nodeType": "Block",
              "src": "3144:147:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1056,
                      "name": "issuersRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 446,
                      "src": "3154:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TrustedIssuersRegistry_$2024",
                        "typeString": "contract TrustedIssuersRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1058,
                          "name": "_trustedIssuersRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1051,
                          "src": "3195:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1057,
                        "name": "TrustedIssuersRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2024,
                        "src": "3172:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TrustedIssuersRegistry_$2024_$",
                          "typeString": "type(contract TrustedIssuersRegistry)"
                        }
                      },
                      "id": 1059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3172:47:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TrustedIssuersRegistry_$2024",
                        "typeString": "contract TrustedIssuersRegistry"
                      }
                    },
                    "src": "3154:65:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TrustedIssuersRegistry_$2024",
                      "typeString": "contract TrustedIssuersRegistry"
                    }
                  },
                  "id": 1061,
                  "nodeType": "ExpressionStatement",
                  "src": "3154:65:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1063,
                        "name": "_trustedIssuersRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1051,
                        "src": "3260:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1062,
                      "name": "TrustedIssuersRegistrySet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 919,
                      "src": "3234:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3234:50:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1065,
                  "nodeType": "EmitStatement",
                  "src": "3229:55:5"
                }
              ]
            },
            "documentation": "@notice Set TrustedIssuerRegistry\n@param _trustedIssuersRegistry an address of TrustedIssuerRegistry",
            "id": 1067,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1054,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1053,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2549,
                  "src": "3134:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3134:9:5"
              }
            ],
            "name": "setTrustedIssuerRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1052,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1051,
                  "name": "_trustedIssuersRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 1067,
                  "src": "3094:31:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1050,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3094:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3093:33:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 1055,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3144:0:5"
            },
            "scope": 1119,
            "src": "3060:231:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1105,
              "nodeType": "Block",
              "src": "3500:245:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1074,
                      "name": "claimTypes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 897,
                      "src": "3510:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1075,
                          "name": "typesRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "3523:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ClaimTypesRegistry_$435",
                            "typeString": "contract ClaimTypesRegistry"
                          }
                        },
                        "id": 1076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getClaimTypes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 434,
                        "src": "3523:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function () view external returns (uint256[] memory)"
                        }
                      },
                      "id": 1077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3523:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "3510:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 1079,
                  "nodeType": "ExpressionStatement",
                  "src": "3510:42:5"
                },
                {
                  "body": {
                    "id": 1101,
                    "nodeType": "Block",
                    "src": "3606:111:5",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1092,
                              "name": "_identity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1069,
                              "src": "3636:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ClaimHolder_$301",
                                "typeString": "contract ClaimHolder"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1093,
                                "name": "claimTypes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 897,
                                "src": "3647:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 1095,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1094,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1081,
                                "src": "3658:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3647:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ClaimHolder_$301",
                                "typeString": "contract ClaimHolder"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1091,
                            "name": "claimIsValid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 579,
                            "src": "3623:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_contract$_ClaimHolder_$301_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (contract ClaimHolder,uint256) view returns (bool)"
                            }
                          },
                          "id": 1096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3623:38:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1100,
                        "nodeType": "IfStatement",
                        "src": "3620:87:5",
                        "trueBody": {
                          "id": 1099,
                          "nodeType": "Block",
                          "src": "3663:44:5",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "hexValue": "74727565",
                                "id": 1097,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3688:4:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 1073,
                              "id": 1098,
                              "nodeType": "Return",
                              "src": "3681:11:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1084,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1081,
                      "src": "3578:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1085,
                        "name": "claimTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 897,
                        "src": "3582:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 1086,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3582:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3578:21:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1102,
                  "initializationExpression": {
                    "assignments": [
                      1081
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1081,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 1106,
                        "src": "3566:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1080,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3566:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1083,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3575:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3566:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3601:3:5",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1088,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1081,
                        "src": "3601:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1090,
                    "nodeType": "ExpressionStatement",
                    "src": "3601:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "3562:155:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 1103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3733:5:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 1073,
                  "id": 1104,
                  "nodeType": "Return",
                  "src": "3726:12:5"
                }
              ]
            },
            "documentation": "@notice Check valid identity contract\n@param _identity an address of user\n@return true or false",
            "id": 1106,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "checkValidIdentity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1069,
                  "name": "_identity",
                  "nodeType": "VariableDeclaration",
                  "scope": 1106,
                  "src": "3455:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ClaimHolder_$301",
                    "typeString": "contract ClaimHolder"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1068,
                    "name": "ClaimHolder",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 301,
                    "src": "3455:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimHolder_$301",
                      "typeString": "contract ClaimHolder"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3454:23:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 1073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1072,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1106,
                  "src": "3494:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1071,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3494:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3493:6:5"
            },
            "scope": 1119,
            "src": "3427:318:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1117,
              "nodeType": "Block",
              "src": "3816:43:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1113,
                      "name": "identity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 894,
                      "src": "3833:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1115,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1114,
                      "name": "_identity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1108,
                      "src": "3842:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ClaimHolder_$301",
                        "typeString": "contract ClaimHolder"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3833:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1112,
                  "id": 1116,
                  "nodeType": "Return",
                  "src": "3826:26:5"
                }
              ]
            },
            "documentation": null,
            "id": 1118,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "isValidUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1108,
                  "name": "_identity",
                  "nodeType": "VariableDeclaration",
                  "scope": 1118,
                  "src": "3772:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ClaimHolder_$301",
                    "typeString": "contract ClaimHolder"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1107,
                    "name": "ClaimHolder",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 301,
                    "src": "3772:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimHolder_$301",
                      "typeString": "contract ClaimHolder"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3771:23:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 1112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1111,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1118,
                  "src": "3811:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1110,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3811:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3810:6:5"
            },
            "scope": 1119,
            "src": "3751:108:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1120,
        "src": "185:3676:5"
      }
    ],
    "src": "0:3862:5"
  },
  "legacyAST": {
    "absolutePath": "/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/IdentityRegistry.sol",
    "exportedSymbols": {
      "IdentityRegistry": [
        1119
      ]
    },
    "id": 1120,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 882,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "absolutePath": "/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/ClaimHolder.sol",
        "file": "./ClaimHolder.sol",
        "id": 883,
        "nodeType": "ImportDirective",
        "scope": 1120,
        "sourceUnit": 302,
        "src": "26:27:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/ClaimTypesRegistry.sol",
        "file": "./ClaimTypesRegistry.sol",
        "id": 884,
        "nodeType": "ImportDirective",
        "scope": 1120,
        "sourceUnit": 436,
        "src": "54:34:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/ClaimVerifier.sol",
        "file": "./ClaimVerifier.sol",
        "id": 885,
        "nodeType": "ImportDirective",
        "scope": 1120,
        "sourceUnit": 631,
        "src": "89:29:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 886,
        "nodeType": "ImportDirective",
        "scope": 1120,
        "sourceUnit": 2616,
        "src": "119:63:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 887,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2615,
              "src": "214:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2615",
                "typeString": "contract Ownable"
              }
            },
            "id": 888,
            "nodeType": "InheritanceSpecifier",
            "src": "214:7:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 889,
              "name": "ClaimVerifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 630,
              "src": "223:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ClaimVerifier_$630",
                "typeString": "contract ClaimVerifier"
              }
            },
            "id": 890,
            "nodeType": "InheritanceSpecifier",
            "src": "223:13:5"
          }
        ],
        "contractDependencies": [
          630,
          2615
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1119,
        "linearizedBaseContracts": [
          1119,
          630,
          2615
        ],
        "name": "IdentityRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 894,
            "name": "identity",
            "nodeType": "VariableDeclaration",
            "scope": 1119,
            "src": "316:40:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 893,
              "keyType": {
                "id": 891,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "324:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "316:24:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 892,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "335:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 897,
            "name": "claimTypes",
            "nodeType": "VariableDeclaration",
            "scope": 1119,
            "src": "423:27:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 895,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "423:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 896,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "423:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 899,
            "name": "typesRegistry",
            "nodeType": "VariableDeclaration",
            "scope": 1119,
            "src": "457:39:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ClaimTypesRegistry_$435",
              "typeString": "contract ClaimTypesRegistry"
            },
            "typeName": {
              "contractScope": null,
              "id": 898,
              "name": "ClaimTypesRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 435,
              "src": "457:18:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ClaimTypesRegistry_$435",
                "typeString": "contract ClaimTypesRegistry"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 905,
            "name": "IdentityRegistered",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 901,
                  "indexed": true,
                  "name": "identity",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "528:28:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ClaimHolder_$301",
                    "typeString": "contract ClaimHolder"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 900,
                    "name": "ClaimHolder",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 301,
                    "src": "528:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimHolder_$301",
                      "typeString": "contract ClaimHolder"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 903,
                  "indexed": true,
                  "name": "time",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "558:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 902,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "558:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "527:52:5"
            },
            "src": "503:77:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 911,
            "name": "IdentityRemoved",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 907,
                  "indexed": true,
                  "name": "identity",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "607:28:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ClaimHolder_$301",
                    "typeString": "contract ClaimHolder"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 906,
                    "name": "ClaimHolder",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 301,
                    "src": "607:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimHolder_$301",
                      "typeString": "contract ClaimHolder"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 909,
                  "indexed": true,
                  "name": "time",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "637:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 908,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "637:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "606:52:5"
            },
            "src": "585:74:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 915,
            "name": "ClaimTypesRegistrySet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 913,
                  "indexed": true,
                  "name": "_claimTypesRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 915,
                  "src": "692:35:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 912,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "692:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "691:37:5"
            },
            "src": "664:65:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 919,
            "name": "TrustedIssuersRegistrySet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 917,
                  "indexed": true,
                  "name": "_trustedIssuersRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 919,
                  "src": "766:39:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 916,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "766:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "765:41:5"
            },
            "src": "734:73:5"
          },
          {
            "body": {
              "id": 940,
              "nodeType": "Block",
              "src": "1007:204:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 924,
                          "name": "_identityContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 921,
                          "src": "1025:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ClaimHolder_$301",
                            "typeString": "contract ClaimHolder"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 926,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1054:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 925,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1046:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1046:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1025:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "636f6e747261637420616464726573732063616e27742062652061207a65726f2061646472657373",
                        "id": 929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1058:42:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_314ef5c8b61d6eefa1e6923e3945ebb4c3411155c8152476346dd6297d263859",
                          "typeString": "literal_string \"contract address can't be a zero address\""
                        },
                        "value": "contract address can't be a zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_314ef5c8b61d6eefa1e6923e3945ebb4c3411155c8152476346dd6297d263859",
                          "typeString": "literal_string \"contract address can't be a zero address\""
                        }
                      ],
                      "id": 923,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3174,
                        3175
                      ],
                      "referencedDeclaration": 3175,
                      "src": "1017:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1017:84:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 931,
                  "nodeType": "ExpressionStatement",
                  "src": "1017:84:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 934,
                            "name": "_identityContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 921,
                            "src": "1138:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ClaimHolder_$301",
                              "typeString": "contract ClaimHolder"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ClaimHolder_$301",
                              "typeString": "contract ClaimHolder"
                            }
                          ],
                          "id": 933,
                          "name": "checkValidIdentity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1106,
                          "src": "1119:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ClaimHolder_$301_$returns$_t_bool_$",
                            "typeString": "function (contract ClaimHolder) returns (bool)"
                          }
                        },
                        "id": 935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1119:37:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f757220436c61696d206973206e6f742076616c696420666f72204b5943",
                        "id": 936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1159:33:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31ee6fda9fba78f039a33b4c520a3e06c25cc9cd680fca3ff2d2c2136150bab5",
                          "typeString": "literal_string \"Your Claim is not valid for KYC\""
                        },
                        "value": "Your Claim is not valid for KYC"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31ee6fda9fba78f039a33b4c520a3e06c25cc9cd680fca3ff2d2c2136150bab5",
                          "typeString": "literal_string \"Your Claim is not valid for KYC\""
                        }
                      ],
                      "id": 932,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3174,
                        3175
                      ],
                      "referencedDeclaration": 3175,
                      "src": "1111:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1111:82:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 938,
                  "nodeType": "ExpressionStatement",
                  "src": "1111:82:5"
                },
                {
                  "id": 939,
                  "nodeType": "PlaceholderStatement",
                  "src": "1203:1:5"
                }
              ]
            },
            "documentation": "@notice check valid identity (KYC)\n@param _identityContract an address of user identity contract (ClaimHolder)",
            "id": 941,
            "name": "isValidIdentity",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 921,
                  "name": "_identityContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 941,
                  "src": "976:29:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ClaimHolder_$301",
                    "typeString": "contract ClaimHolder"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 920,
                    "name": "ClaimHolder",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 301,
                    "src": "976:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimHolder_$301",
                      "typeString": "contract ClaimHolder"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "975:31:5"
            },
            "src": "951:260:5",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 968,
              "nodeType": "Block",
              "src": "1496:269:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 948,
                      "name": "issuersRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 446,
                      "src": "1506:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TrustedIssuersRegistry_$2024",
                        "typeString": "contract TrustedIssuersRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 950,
                          "name": "_trustedIssuersRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 943,
                          "src": "1547:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 949,
                        "name": "TrustedIssuersRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2024,
                        "src": "1524:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TrustedIssuersRegistry_$2024_$",
                          "typeString": "type(contract TrustedIssuersRegistry)"
                        }
                      },
                      "id": 951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1524:47:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TrustedIssuersRegistry_$2024",
                        "typeString": "contract TrustedIssuersRegistry"
                      }
                    },
                    "src": "1506:65:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TrustedIssuersRegistry_$2024",
                      "typeString": "contract TrustedIssuersRegistry"
                    }
                  },
                  "id": 953,
                  "nodeType": "ExpressionStatement",
                  "src": "1506:65:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 955,
                        "name": "_trustedIssuersRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 943,
                        "src": "1612:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 954,
                      "name": "TrustedIssuersRegistrySet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 919,
                      "src": "1586:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1586:50:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 957,
                  "nodeType": "EmitStatement",
                  "src": "1581:55:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 958,
                      "name": "typesRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 899,
                      "src": "1646:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ClaimTypesRegistry_$435",
                        "typeString": "contract ClaimTypesRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 960,
                          "name": "_claimTypesRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 945,
                          "src": "1681:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 959,
                        "name": "ClaimTypesRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "1662:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ClaimTypesRegistry_$435_$",
                          "typeString": "type(contract ClaimTypesRegistry)"
                        }
                      },
                      "id": 961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1662:39:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ClaimTypesRegistry_$435",
                        "typeString": "contract ClaimTypesRegistry"
                      }
                    },
                    "src": "1646:55:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimTypesRegistry_$435",
                      "typeString": "contract ClaimTypesRegistry"
                    }
                  },
                  "id": 963,
                  "nodeType": "ExpressionStatement",
                  "src": "1646:55:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 965,
                        "name": "_claimTypesRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 945,
                        "src": "1738:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 964,
                      "name": "ClaimTypesRegistrySet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 915,
                      "src": "1716:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1716:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 967,
                  "nodeType": "EmitStatement",
                  "src": "1711:47:5"
                }
              ]
            },
            "documentation": "@notice constructor of the contract\n@param _trustedIssuersRegistry the address of TrustedIssuerRegistry\n@param _claimTypesRegistry the address of ClaimTypeRegistry",
            "id": 969,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 943,
                  "name": "_trustedIssuersRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "1427:31:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 942,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1427:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 945,
                  "name": "_claimTypesRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "1460:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 944,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1460:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1426:62:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 947,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1496:0:5"
            },
            "scope": 1119,
            "src": "1415:350:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1000,
              "nodeType": "Block",
              "src": "2054:160:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 980,
                            "name": "identity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 894,
                            "src": "2072:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 982,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 981,
                            "name": "_identity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 971,
                            "src": "2081:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ClaimHolder_$301",
                              "typeString": "contract ClaimHolder"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2072:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2095:5:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2072:28:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 979,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3174,
                        3175
                      ],
                      "referencedDeclaration": 3174,
                      "src": "2064:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2064:37:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 986,
                  "nodeType": "ExpressionStatement",
                  "src": "2064:37:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 987,
                        "name": "identity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 894,
                        "src": "2111:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 989,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 988,
                        "name": "_identity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 971,
                        "src": "2120:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ClaimHolder_$301",
                          "typeString": "contract ClaimHolder"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2111:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2133:4:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2111:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 992,
                  "nodeType": "ExpressionStatement",
                  "src": "2111:26:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 994,
                        "name": "_identity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 971,
                        "src": "2171:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ClaimHolder_$301",
                          "typeString": "contract ClaimHolder"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 995,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3173,
                        "src": "2182:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ClaimHolder_$301",
                          "typeString": "contract ClaimHolder"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 993,
                      "name": "IdentityRegistered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 905,
                      "src": "2152:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_ClaimHolder_$301_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ClaimHolder,uint256)"
                      }
                    },
                    "id": 996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2152:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 997,
                  "nodeType": "EmitStatement",
                  "src": "2147:39:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2203:4:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 978,
                  "id": 999,
                  "nodeType": "Return",
                  "src": "2196:11:5"
                }
              ]
            },
            "documentation": "@notice Register an identity contract for user account\n@param _identity The address of the user's identity contract (ClaimHolder)\n@return true or false",
            "id": 1001,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 974,
                    "name": "_identity",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 971,
                    "src": "2021:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimHolder_$301",
                      "typeString": "contract ClaimHolder"
                    }
                  }
                ],
                "id": 975,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 973,
                  "name": "isValidIdentity",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 941,
                  "src": "2005:15:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_contract$_ClaimHolder_$301_$",
                    "typeString": "modifier (contract ClaimHolder)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2005:26:5"
              }
            ],
            "name": "registerIdentity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 971,
                  "name": "_identity",
                  "nodeType": "VariableDeclaration",
                  "scope": 1001,
                  "src": "1982:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ClaimHolder_$301",
                    "typeString": "contract ClaimHolder"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 970,
                    "name": "ClaimHolder",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 301,
                    "src": "1982:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimHolder_$301",
                      "typeString": "contract ClaimHolder"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1981:23:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 977,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1001,
                  "src": "2048:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 976,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2048:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2047:6:5"
            },
            "scope": 1119,
            "src": "1956:258:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1030,
              "nodeType": "Block",
              "src": "2440:156:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1011,
                            "name": "identity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 894,
                            "src": "2458:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1013,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1012,
                            "name": "_identity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1003,
                            "src": "2467:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ClaimHolder_$301",
                              "typeString": "contract ClaimHolder"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2458:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2481:4:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2458:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1010,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3174,
                        3175
                      ],
                      "referencedDeclaration": 3174,
                      "src": "2450:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2450:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1017,
                  "nodeType": "ExpressionStatement",
                  "src": "2450:36:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1019,
                        "name": "_identity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1003,
                        "src": "2517:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ClaimHolder_$301",
                          "typeString": "contract ClaimHolder"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1020,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3173,
                        "src": "2528:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ClaimHolder_$301",
                          "typeString": "contract ClaimHolder"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1018,
                      "name": "IdentityRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 911,
                      "src": "2501:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_ClaimHolder_$301_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ClaimHolder,uint256)"
                      }
                    },
                    "id": 1021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2501:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1022,
                  "nodeType": "EmitStatement",
                  "src": "2496:36:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2542:26:5",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1023,
                        "name": "identity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 894,
                        "src": "2549:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1025,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1024,
                        "name": "_identity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1003,
                        "src": "2558:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ClaimHolder_$301",
                          "typeString": "contract ClaimHolder"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2549:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1027,
                  "nodeType": "ExpressionStatement",
                  "src": "2542:26:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 1028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2585:4:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1009,
                  "id": 1029,
                  "nodeType": "Return",
                  "src": "2578:11:5"
                }
              ]
            },
            "documentation": "@notice Remove an identity contract\n@param _identity is an identity contract of user\n@return true or false",
            "id": 1031,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1006,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1005,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2549,
                  "src": "2408:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2408:9:5"
              }
            ],
            "name": "removeIdentity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1003,
                  "name": "_identity",
                  "nodeType": "VariableDeclaration",
                  "scope": 1031,
                  "src": "2385:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ClaimHolder_$301",
                    "typeString": "contract ClaimHolder"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1002,
                    "name": "ClaimHolder",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 301,
                    "src": "2385:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimHolder_$301",
                      "typeString": "contract ClaimHolder"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2384:23:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 1009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1008,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1031,
                  "src": "2434:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1007,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2434:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2433:6:5"
            },
            "scope": 1119,
            "src": "2361:235:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1048,
              "nodeType": "Block",
              "src": "2796:129:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1038,
                      "name": "typesRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 899,
                      "src": "2806:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ClaimTypesRegistry_$435",
                        "typeString": "contract ClaimTypesRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1040,
                          "name": "_claimTypesRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1033,
                          "src": "2841:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1039,
                        "name": "ClaimTypesRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "2822:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ClaimTypesRegistry_$435_$",
                          "typeString": "type(contract ClaimTypesRegistry)"
                        }
                      },
                      "id": 1041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2822:39:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ClaimTypesRegistry_$435",
                        "typeString": "contract ClaimTypesRegistry"
                      }
                    },
                    "src": "2806:55:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimTypesRegistry_$435",
                      "typeString": "contract ClaimTypesRegistry"
                    }
                  },
                  "id": 1043,
                  "nodeType": "ExpressionStatement",
                  "src": "2806:55:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1045,
                        "name": "_claimTypesRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1033,
                        "src": "2898:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1044,
                      "name": "ClaimTypesRegistrySet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 915,
                      "src": "2876:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2876:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1047,
                  "nodeType": "EmitStatement",
                  "src": "2871:47:5"
                }
              ]
            },
            "documentation": "@notice Set ClaimTypeRegistry\n@param _claimTypesRegistry an address of ClaimTypeRegistry",
            "id": 1049,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1036,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1035,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2549,
                  "src": "2786:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2786:9:5"
              }
            ],
            "name": "setClaimTypesRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1033,
                  "name": "_claimTypesRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 1049,
                  "src": "2750:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1032,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2750:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2749:29:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 1037,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2796:0:5"
            },
            "scope": 1119,
            "src": "2719:206:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1066,
              "nodeType": "Block",
              "src": "3144:147:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1056,
                      "name": "issuersRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 446,
                      "src": "3154:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TrustedIssuersRegistry_$2024",
                        "typeString": "contract TrustedIssuersRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1058,
                          "name": "_trustedIssuersRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1051,
                          "src": "3195:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1057,
                        "name": "TrustedIssuersRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2024,
                        "src": "3172:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TrustedIssuersRegistry_$2024_$",
                          "typeString": "type(contract TrustedIssuersRegistry)"
                        }
                      },
                      "id": 1059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3172:47:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TrustedIssuersRegistry_$2024",
                        "typeString": "contract TrustedIssuersRegistry"
                      }
                    },
                    "src": "3154:65:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TrustedIssuersRegistry_$2024",
                      "typeString": "contract TrustedIssuersRegistry"
                    }
                  },
                  "id": 1061,
                  "nodeType": "ExpressionStatement",
                  "src": "3154:65:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1063,
                        "name": "_trustedIssuersRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1051,
                        "src": "3260:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1062,
                      "name": "TrustedIssuersRegistrySet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 919,
                      "src": "3234:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3234:50:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1065,
                  "nodeType": "EmitStatement",
                  "src": "3229:55:5"
                }
              ]
            },
            "documentation": "@notice Set TrustedIssuerRegistry\n@param _trustedIssuersRegistry an address of TrustedIssuerRegistry",
            "id": 1067,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1054,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1053,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2549,
                  "src": "3134:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3134:9:5"
              }
            ],
            "name": "setTrustedIssuerRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1052,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1051,
                  "name": "_trustedIssuersRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 1067,
                  "src": "3094:31:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1050,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3094:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3093:33:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 1055,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3144:0:5"
            },
            "scope": 1119,
            "src": "3060:231:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1105,
              "nodeType": "Block",
              "src": "3500:245:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1074,
                      "name": "claimTypes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 897,
                      "src": "3510:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1075,
                          "name": "typesRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "3523:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ClaimTypesRegistry_$435",
                            "typeString": "contract ClaimTypesRegistry"
                          }
                        },
                        "id": 1076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getClaimTypes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 434,
                        "src": "3523:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function () view external returns (uint256[] memory)"
                        }
                      },
                      "id": 1077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3523:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "3510:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 1079,
                  "nodeType": "ExpressionStatement",
                  "src": "3510:42:5"
                },
                {
                  "body": {
                    "id": 1101,
                    "nodeType": "Block",
                    "src": "3606:111:5",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1092,
                              "name": "_identity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1069,
                              "src": "3636:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ClaimHolder_$301",
                                "typeString": "contract ClaimHolder"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1093,
                                "name": "claimTypes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 897,
                                "src": "3647:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 1095,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1094,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1081,
                                "src": "3658:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3647:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ClaimHolder_$301",
                                "typeString": "contract ClaimHolder"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1091,
                            "name": "claimIsValid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 579,
                            "src": "3623:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_contract$_ClaimHolder_$301_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (contract ClaimHolder,uint256) view returns (bool)"
                            }
                          },
                          "id": 1096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3623:38:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1100,
                        "nodeType": "IfStatement",
                        "src": "3620:87:5",
                        "trueBody": {
                          "id": 1099,
                          "nodeType": "Block",
                          "src": "3663:44:5",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "hexValue": "74727565",
                                "id": 1097,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3688:4:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 1073,
                              "id": 1098,
                              "nodeType": "Return",
                              "src": "3681:11:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1084,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1081,
                      "src": "3578:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1085,
                        "name": "claimTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 897,
                        "src": "3582:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 1086,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3582:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3578:21:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1102,
                  "initializationExpression": {
                    "assignments": [
                      1081
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1081,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 1106,
                        "src": "3566:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1080,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3566:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1083,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3575:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3566:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3601:3:5",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1088,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1081,
                        "src": "3601:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1090,
                    "nodeType": "ExpressionStatement",
                    "src": "3601:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "3562:155:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 1103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3733:5:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 1073,
                  "id": 1104,
                  "nodeType": "Return",
                  "src": "3726:12:5"
                }
              ]
            },
            "documentation": "@notice Check valid identity contract\n@param _identity an address of user\n@return true or false",
            "id": 1106,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "checkValidIdentity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1069,
                  "name": "_identity",
                  "nodeType": "VariableDeclaration",
                  "scope": 1106,
                  "src": "3455:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ClaimHolder_$301",
                    "typeString": "contract ClaimHolder"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1068,
                    "name": "ClaimHolder",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 301,
                    "src": "3455:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimHolder_$301",
                      "typeString": "contract ClaimHolder"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3454:23:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 1073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1072,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1106,
                  "src": "3494:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1071,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3494:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3493:6:5"
            },
            "scope": 1119,
            "src": "3427:318:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1117,
              "nodeType": "Block",
              "src": "3816:43:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1113,
                      "name": "identity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 894,
                      "src": "3833:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1115,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1114,
                      "name": "_identity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1108,
                      "src": "3842:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ClaimHolder_$301",
                        "typeString": "contract ClaimHolder"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3833:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1112,
                  "id": 1116,
                  "nodeType": "Return",
                  "src": "3826:26:5"
                }
              ]
            },
            "documentation": null,
            "id": 1118,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "isValidUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1108,
                  "name": "_identity",
                  "nodeType": "VariableDeclaration",
                  "scope": 1118,
                  "src": "3772:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ClaimHolder_$301",
                    "typeString": "contract ClaimHolder"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1107,
                    "name": "ClaimHolder",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 301,
                    "src": "3772:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimHolder_$301",
                      "typeString": "contract ClaimHolder"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3771:23:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 1112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1111,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1118,
                  "src": "3811:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1110,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3811:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3810:6:5"
            },
            "scope": 1119,
            "src": "3751:108:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1120,
        "src": "185:3676:5"
      }
    ],
    "src": "0:3862:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-11-26T18:34:34.936Z",
  "devdoc": {
    "methods": {
      "checkValidIdentity(address)": {
        "params": {
          "_identity": "an address of user"
        },
        "return": "true or false"
      },
      "claimIsValid(address,uint256)": {
        "params": {
          "_identity": "ClaimHolder contract address",
          "claimType": "type of given claim by ClaimHolder"
        },
        "return": "true or false"
      },
      "getRecoveredAddress(bytes,bytes32)": {
        "params": {
          "dataHash": "hash of data in bytes32",
          "sig": "signed data in bytes32"
        },
        "return": "address of signed data"
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "registerIdentity(address)": {
        "params": {
          "_identity": "The address of the user's identity contract (ClaimHolder)"
        },
        "return": "true or false"
      },
      "removeIdentity(address)": {
        "params": {
          "_identity": "is an identity contract of user"
        },
        "return": "true or false"
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "setClaimTypesRegistry(address)": {
        "params": {
          "_claimTypesRegistry": "an address of ClaimTypeRegistry"
        }
      },
      "setTrustedIssuerRegistry(address)": {
        "params": {
          "_trustedIssuersRegistry": "an address of TrustedIssuerRegistry"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "checkValidIdentity(address)": {
        "notice": "Check valid identity contract"
      },
      "claimIsValid(address,uint256)": {
        "notice": "Check valid or invalid of given claim by ClaimHolder"
      },
      "getRecoveredAddress(bytes,bytes32)": {
        "notice": "Get address of signed data"
      },
      "registerIdentity(address)": {
        "notice": "Register an identity contract for user account"
      },
      "removeIdentity(address)": {
        "notice": "Remove an identity contract"
      },
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "setClaimTypesRegistry(address)": {
        "notice": "Set ClaimTypeRegistry"
      },
      "setTrustedIssuerRegistry(address)": {
        "notice": "Set TrustedIssuerRegistry"
      }
    }
  }
}