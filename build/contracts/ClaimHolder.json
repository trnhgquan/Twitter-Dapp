{
  "contractName": "ClaimHolder",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_key",
          "type": "bytes32"
        }
      ],
      "name": "getKeyPurpose",
      "outputs": [
        {
          "name": "purpose",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_key",
          "type": "bytes32"
        }
      ],
      "name": "getKey",
      "outputs": [
        {
          "name": "purpose",
          "type": "uint256"
        },
        {
          "name": "keyType",
          "type": "uint256"
        },
        {
          "name": "key",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_key",
          "type": "bytes32"
        },
        {
          "name": "_purpose",
          "type": "uint256"
        },
        {
          "name": "_type",
          "type": "uint256"
        }
      ],
      "name": "addKey",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        },
        {
          "name": "_approve",
          "type": "bool"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_key",
          "type": "bytes32"
        }
      ],
      "name": "removeKey",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_purpose",
          "type": "uint256"
        }
      ],
      "name": "getKeysByPurpose",
      "outputs": [
        {
          "name": "_keys",
          "type": "bytes32[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [
        {
          "name": "executionId",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_key",
          "type": "bytes32"
        },
        {
          "name": "_purpose",
          "type": "uint256"
        }
      ],
      "name": "keyHasPurpose",
      "outputs": [
        {
          "name": "result",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_backupKey",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "claimRequestId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "claimType",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "scheme",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "issuer",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "signature",
          "type": "bytes"
        },
        {
          "indexed": false,
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "name": "uri",
          "type": "string"
        }
      ],
      "name": "ClaimRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "claimId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "claimType",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "scheme",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "issuer",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "signature",
          "type": "bytes"
        },
        {
          "indexed": false,
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "name": "uri",
          "type": "string"
        }
      ],
      "name": "ClaimAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "claimId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "claimType",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "scheme",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "issuer",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "signature",
          "type": "bytes"
        },
        {
          "indexed": false,
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "name": "uri",
          "type": "string"
        }
      ],
      "name": "ClaimRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "claimId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "claimType",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "scheme",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "issuer",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "signature",
          "type": "bytes"
        },
        {
          "indexed": false,
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "name": "uri",
          "type": "string"
        }
      ],
      "name": "ClaimChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "executionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "ExecutionFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "key",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "purpose",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "keyType",
          "type": "uint256"
        }
      ],
      "name": "KeyAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "key",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "purpose",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "keyType",
          "type": "uint256"
        }
      ],
      "name": "KeyRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "executionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "ExecutionRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "executionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Executed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "executionId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "Approved",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_claimType",
          "type": "uint256"
        },
        {
          "name": "_scheme",
          "type": "uint256"
        },
        {
          "name": "_issuer",
          "type": "address"
        },
        {
          "name": "_signature",
          "type": "bytes"
        },
        {
          "name": "_data",
          "type": "bytes"
        },
        {
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "addClaim",
      "outputs": [
        {
          "name": "claimRequestId",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_claimId",
          "type": "bytes32"
        }
      ],
      "name": "removeClaim",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_claimId",
          "type": "bytes32"
        }
      ],
      "name": "getClaim",
      "outputs": [
        {
          "name": "claimType",
          "type": "uint256"
        },
        {
          "name": "scheme",
          "type": "uint256"
        },
        {
          "name": "issuer",
          "type": "address"
        },
        {
          "name": "signature",
          "type": "bytes"
        },
        {
          "name": "data",
          "type": "bytes"
        },
        {
          "name": "uri",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_claimType",
          "type": "uint256"
        }
      ],
      "name": "getClaimIdsByType",
      "outputs": [
        {
          "name": "claimIds",
          "type": "bytes32[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurpose\",\"outputs\":[{\"name\":\"purpose\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"name\":\"purpose\",\"type\":\"uint256\"},{\"name\":\"keyType\",\"type\":\"uint256\"},{\"name\":\"key\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"},{\"name\":\"_purpose\",\"type\":\"uint256\"},{\"name\":\"_type\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_claimType\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByType\",\"outputs\":[{\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"removeKey\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"name\":\"_keys\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_claimType\",\"type\":\"uint256\"},{\"name\":\"_scheme\",\"type\":\"uint256\"},{\"name\":\"_issuer\",\"type\":\"address\"},{\"name\":\"_signature\",\"type\":\"bytes\"},{\"name\":\"_data\",\"type\":\"bytes\"},{\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"name\":\"executionId\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"name\":\"claimType\",\"type\":\"uint256\"},{\"name\":\"scheme\",\"type\":\"uint256\"},{\"name\":\"issuer\",\"type\":\"address\"},{\"name\":\"signature\",\"type\":\"bytes\"},{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"uri\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"},{\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"name\":\"result\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_backupKey\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"claimRequestId\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"claimType\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"claimType\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"claimType\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"claimType\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"params\":{\"_claimType\":\"The type of claim\",\"_data\":\"The hash of the claim data, sitting in another location, a bit-mask, call data, or actual data based on the claim scheme.\",\"_issuer\":\"The issuers identity contract address, or the address used to sign the above signature.\",\"_scheme\":\"The scheme with which this claim SHOULD be verified or how it should be processed.\",\"_signature\":\"Signature which is the proof that the claim issuer issued a claim of claimType for this identity. it MUST be a signed message of the following structure: keccak256(address identityHolder_address, uint256 _ claimType, bytes data) or keccak256(abi.encode(identityHolder_address, claimType, data))\",\"_uri\":\"The location of the claim, this can be HTTP links, swarm hashes, IPFS hashes, and such.\"},\"return\":\"Returns claimRequestId: COULD be send to the approve function, to approve or reject this claim. triggers ClaimAdded event.\"},\"addKey(bytes32,uint256,uint256)\":{\"params\":{\"_key\":\"keccak256 representation of an ethereum address\",\"_purpose\":\"a uint256[] Array of the key types, like 1 = MANAGEMENT, 2 = ACTION, 3 = CLAIM, 4 = ENCRYPTION\",\"_type\":\"type of key used, which would be a uint256 for different key types. e.g. 1 = ECDSA, 2 = RSA, etc.\"},\"return\":\"Returns TRUE if the addition was successful and FALSE if not\"},\"getClaim(bytes32)\":{\"params\":{\"_claimId\":\"The identity of the claim i.e. keccak256(address issuer_address + uint256 claimType)\"},\"return\":\"Returns all the parameters of the claim for the specified _claimId (claimType, scheme, signature, issuer, data, uri) .\"},\"getClaimIdsByType(uint256)\":{\"params\":{\"_claimType\":\"The identity of the claim i.e. keccak256(address issuer_address + uint256 claimType)\"},\"return\":\"Returns an array of claim IDs by claimType.\"},\"getKey(bytes32)\":{\"params\":{\"_key\":\"The public key.  for non-hex and long keys, its the Keccak256 hash of the key\"},\"return\":\"Returns the full key data, if present in the identity.\"},\"getKeyPurpose(bytes32)\":{\"params\":{\"_key\":\"The public key.  for non-hex and long keys, its the Keccak256 hash of the key\"},\"return\":\"Returns the purpose of the specified key\"},\"getKeysByPurpose(uint256)\":{\"params\":{\"_purpose\":\"a uint256[] Array of the key types, like 1 = MANAGEMENT, 2 = ACTION, 3 = CLAIM, 4 = ENCRYPTION\"},\"return\":\"Returns an array of public key bytes32 hold by this identity and having the specified purpose\"},\"removeClaim(bytes32)\":{\"params\":{\"_claimId\":\"The identity of the claim i.e. keccak256(address issuer_address + uint256 claimType)\"},\"return\":\"Returns TRUE when the claim was removed. triggers ClaimRemoved event\"}}},\"userdoc\":{\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"notice\":\"Implementation of the addClaim function from the ERC-735 standard Require that the msg.sender has claim signer key.\"},\"addKey(bytes32,uint256,uint256)\":{\"notice\":\"implementation of the addKey function of the ERC-725 standard Adds a _key to the identity. The _purpose specifies the purpose of key. Initially we propose four purposes: 1: MANAGEMENT keys, which can manage the identity 2: ACTION keys, which perform actions in this identities name (signing, logins, transactions, etc.) 3: CLAIM signer keys, used to sign claims on other identities which need to be revokable. 4: ENCRYPTION keys, used to encrypt data e.g. hold in claims. MUST only be done by keys of purpose 1, or the identity itself. If its the identity itself, the approval process will determine its approval.\"},\"getClaim(bytes32)\":{\"notice\":\"Implementation of the getClaim function from the ERC-735 standard.\"},\"getClaimIdsByType(uint256)\":{\"notice\":\"Implementation of the getClaimIdsByTopic function from the ERC-735 standard. used to get all the claims from the specified claimType\"},\"getKey(bytes32)\":{\"notice\":\"Implementation of the getKey function from the ERC-725 standard\"},\"getKeyPurpose(bytes32)\":{\"notice\":\"gets the purpose of a key\"},\"getKeysByPurpose(uint256)\":{\"notice\":\"gets all the keys with a specific purpose from an identity\"},\"removeClaim(bytes32)\":{\"notice\":\"Implementation of the removeClaim function from the ERC-735 standard Require that the msg.sender has management key. Can only be removed by the claim issuer, or the claim holder itself.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/ClaimHolder.sol\":\"ClaimHolder\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/ClaimHolder.sol\":{\"keccak256\":\"0xfc1909f6575d964bef13e14325fa80251ea272b8de350df6547b88e1c9b0ee2f\",\"urls\":[\"bzzr://5e6d7677772c1f9d3cf2362746df7913e31315e2490075b4c01f88cc9e28ded8\"]},\"/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/ERC725.sol\":{\"keccak256\":\"0xc1b642d3ad9ee1dfa446571b488f005ade7559337cd3370a4cbb2a7e40ed0bbd\",\"urls\":[\"bzzr://d1744bb03cb0045f16ad8c7db6d5f65ff6df97723dabee66a8affddd84bf643c\"]},\"/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/ERC735.sol\":{\"keccak256\":\"0xa50a048d08fd6f71d897d8b7ea241d079fd2154116c322997fad34bb839531fa\",\"urls\":[\"bzzr://8b01deef907aaebbbe0b12f26d575527427c9abf5fe255f2aba02c0ea503ee14\"]},\"/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/KeyHolder.sol\":{\"keccak256\":\"0x431e88aab02868484f41f7fd64738f3e169f1e670884221a0741585eb387f939\",\"urls\":[\"bzzr://783bc44e88c666379d49c4888f8d787e033013391648067c484f41926ab99e6f\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516020806129f08339810180604052810190808051906020019092919050505080600033604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140191505060405180910390209050806001600083600019166000191681526020019081526020016000206002018160001916905550600180600083600019166000191681526020019081526020016000206000018190555060018060008360001916600019168152602001908152602001600020600101819055506002600060018152602001908152602001600020819080600181540180825580915050906001820390600052602060002001600090919290919091509060001916905550600180600083600019166000191681526020019081526020016000206000015482600019167f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e960405160405180910390a4816001600084600019166000191681526020019081526020016000206002018160001916905550600180600084600019166000191681526020019081526020016000206000018190555060018060008460001916600019168152602001908152602001600020600101819055506002600060018152602001908152602001600020829080600181540180825580915050906001820390600052602060002001600090919290919091509060001916905550600180600084600019166000191681526020019081526020016000206000015483600019167f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e960405160405180910390a45050506127518061029f6000396000f3006080604052600436106100ba576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063032c1a8a146100bf57806312aaac70146101045780631d3812401461015f578063262b54f5146101bc5780634eee424a1461023e578063747442d314610287578063862642f5146102d85780639010f72614610321578063b1a34e0d146103a3578063b61d27f6146104e8578063c9100bcb14610582578063d202158d14610745575b600080fd5b3480156100cb57600080fd5b506100ee6004803603810190808035600019169060200190929190505050610798565b6040518082815260200191505060405180910390f35b34801561011057600080fd5b5061013360048036038101908080356000191690602001909291905050506107c0565b604051808481526020018381526020018260001916600019168152602001935050505060405180910390f35b34801561016b57600080fd5b506101a26004803603810190808035600019169060200190929190803590602001909291908035906020019092919050505061082f565b604051808215151515815260200191505060405180910390f35b3480156101c857600080fd5b506101e760048036038101908080359060200190929190505050610ae8565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561022a57808201518184015260208101905061020f565b505050509050019250505060405180910390f35b34801561024a57600080fd5b5061026d6004803603810190808035600019169060200190929190505050610b57565b604051808215151515815260200191505060405180910390f35b34801561029357600080fd5b506102be600480360381019080803590602001909291908035151590602001909291905050506110c5565b604051808215151515815260200191505060405180910390f35b3480156102e457600080fd5b5061030760048036038101908080356000191690602001909291905050506115f0565b604051808215151515815260200191505060405180910390f35b34801561032d57600080fd5b5061034c60048036038101908080359060200190929190505050611976565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561038f578082015181840152602081019050610374565b505050509050019250505060405180910390f35b3480156103af57600080fd5b506104ca6004803603810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506119e5565b60405180826000191660001916815260200191505060405180910390f35b61056c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611f0a565b6040518082815260200191505060405180910390f35b34801561058e57600080fd5b506105b160048036038101908080356000191690602001909291905050506121ec565b604051808781526020018681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018060200180602001848103845287818151815260200191508051906020019080838360005b8381101561063757808201518184015260208101905061061c565b50505050905090810190601f1680156106645780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019080838360005b8381101561069d578082015181840152602081019050610682565b50505050905090810190601f1680156106ca5780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b838110156107035780820151818401526020810190506106e8565b50505050905090810190601f1680156107305780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390f35b34801561075157600080fd5b5061077e6004803603810190808035600019169060200190929190803590602001909291905050506124b6565b604051808215151515815260200191505060405180910390f35b6000600160008360001916600019168152602001908152602001600020600001549050919050565b60008060006001600085600019166000191681526020019081526020016000206000015460016000866000191660001916815260200190815260200160002060010154600160008760001916600019168152602001908152602001600020600201549250925092509193909250565b600083600019166001600086600019166000191681526020019081526020016000206002015460001916141515156108cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4b657920616c726561647920657864697374730000000000000000000000000081525060200191505060405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156109fa5761095f33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401915050604051809103902060016124b6565b15156109f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f53656e64657220646f6573206e6f742068617665206d616e6167656d656e742081526020017f6b6579000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b5b8360016000866000191660001916815260200190815260200160002060020181600019169055508260016000866000191660001916815260200190815260200160002060000181905550816001600086600019166000191681526020019081526020016000206001018190555060026000848152602001908152602001600020849080600181540180825580915050906001820390600052602060002001600090919290919091509060001916905550818385600019167f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e960405160405180910390a4600190509392505050565b606060056000838152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610b4b57602002820191906000526020600020905b81546000191681526020019060010190808311610b33575b50505050509050919050565b60008060003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610c8757610bec33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401915050604051809103902060016124b6565b1515610c86576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f53656e64657220646f6573206e6f742068617665206d616e6167656d656e742081526020017f6b6579000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b5b60046000856000191660001916815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166004600086600019166000191681526020019081526020016000206000015485600019167f3cf57863a89432c61c4a27073c6ee39e8a764bff5a05aebfbcdcdc80b2e6130a60046000896000191660001916815260200190815260200160002060010154600460008a60001916600019168152602001908152602001600020600301600460008b60001916600019168152602001908152602001600020600401600460008c6000191660001916815260200190815260200160002060050160405180858152602001806020018060200180602001848103845287818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015610e315780601f10610e0657610100808354040283529160200191610e31565b820191906000526020600020905b815481529060010190602001808311610e1457829003601f168201915b5050848103835286818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015610eb45780601f10610e8957610100808354040283529160200191610eb4565b820191906000526020600020905b815481529060010190602001808311610e9757829003601f168201915b5050848103825285818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015610f375780601f10610f0c57610100808354040283529160200191610f37565b820191906000526020600020905b815481529060010190602001808311610f1a57829003601f168201915b505097505050505050505060405180910390a4600560006004600087600019166000191681526020019081526020016000206000015481526020019081526020016000209150600090505b81805490508110156110355783600019168282815481101515610fa157fe5b9060005260206000200154600019161415611028578181815481101515610fc457fe5b9060005260206000200160009055816001838054905003815481101515610fe757fe5b9060005260206000200154828281548110151561100057fe5b90600052602060002001816000191690555081805480919060019003611026919061251f565b505b8080600101915050610f82565b60046000856000191660001916815260200190815260200160002060008082016000905560018201600090556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600382016000611098919061254b565b6004820160006110a8919061254b565b6005820160006110b89190612593565b5050600192505050919050565b600061112233604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401915050604051809103902060026124b6565b1515611196576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f53656e64657220646f6573206e6f74206861766520616374696f6e206b65790081525060200191505060405180910390fd5b827fb3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d883604051808215151515815260200191505060405180910390a26001151582151514156115b65760016003600085815260200190815260200160002060030160006101000a81548160ff0219169083151502179055506003600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600360008581526020019081526020016000206001015460036000868152602001908152602001600020600201600060405180838054600181600116156101000203166002900480156112ef5780601f106112c4576101008083540402835291602001916112ef565b820191906000526020600020905b8154815290600101906020018083116112d257829003601f168201915b50508260ff1681526020019250505060006040518083038185875af1925050509050801561147e5760016003600085815260200190815260200160002060030160016101000a81548160ff02191690831515021790555060036000848152602001908152602001600020600101546003600085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16847f1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b860036000888152602001908152602001600020600201604051808060200182810382528381815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561146b5780601f106114405761010080835404028352916020019161146b565b820191906000526020600020905b81548152906001019060200180831161144e57829003601f168201915b50509250505060405180910390a46115ea565b60036000848152602001908152602001600020600101546003600085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16847fe10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a686003600088815260200190815260200160002060020160405180806020018281038252838181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156115a35780601f10611578576101008083540402835291602001916115a3565b820191906000526020600020905b81548152906001019060200180831161158657829003601f168201915b50509250505060405180910390a46115ea565b60006003600085815260200190815260200160002060030160006101000a81548160ff021916908315150217905550600190505b92915050565b600080600083600019166001600086600019166000191681526020019081526020016000206002015460001916141515611692576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f4e6f2073756368206b657900000000000000000000000000000000000000000081525060200191505060405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156117bd5761172233604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401915050604051809103902060016124b6565b15156117bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f53656e64657220646f6573206e6f742068617665206d616e6167656d656e742081526020017f6b6579000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b5b600160008560001916600019168152602001908152602001600020600101546001600086600019166000191681526020019081526020016000206000015460016000876000191660001916815260200190815260200160002060020154600019167f585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d339760405160405180910390a4600260006001600087600019166000191681526020019081526020016000206000015481526020019081526020016000209150600090505b818054905081101561193557836000191682828154811015156118a157fe5b90600052602060002001546000191614156119285781818154811015156118c457fe5b90600052602060002001600090558160018380549050038154811015156118e757fe5b9060005260206000200154828281548110151561190057fe5b90600052602060002001816000191690555081805480919060019003611926919061251f565b505b8080600101915050611882565b600160008560001916600019168152602001908152602001600020600080820160009055600182016000905560028201600090555050600192505050919050565b6060600260008381526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156119d957602002820191906000526020600020905b815460001916815260200190600101908083116119c1575b50505050509050919050565b6000808588604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140182815260200192505050604051809103902090503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611b6e57611ad333604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401915050604051809103902060036124b6565b1515611b6d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001807f53656e64657220646f6573206e6f74206861766520636c61696d207369676e6581526020017f72206b657900000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b5b8573ffffffffffffffffffffffffffffffffffffffff1660046000836000191660001916815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611c2557600560008981526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915090600019169055505b876004600083600019166000191681526020019081526020016000206000018190555086600460008360001916600019168152602001908152602001600020600101819055508560046000836000191660001916815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550846004600083600019166000191681526020019081526020016000206003019080519060200190611cfa9291906125db565b50836004600083600019166000191681526020019081526020016000206004019080519060200190611d2d9291906125db565b50826004600083600019166000191681526020019081526020016000206005019080519060200190611d6092919061265b565b508573ffffffffffffffffffffffffffffffffffffffff168882600019167f46149b18aa084502c3f12bc75e19eda8bda8d102b82cce8474677a6d0d5f43c58a89898960405180858152602001806020018060200180602001848103845287818151815260200191508051906020019080838360005b83811015611df1578082015181840152602081019050611dd6565b50505050905090810190601f168015611e1e5780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019080838360005b83811015611e57578082015181840152602081019050611e3c565b50505050905090810190601f168015611e845780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b83811015611ebd578082015181840152602081019050611ea2565b50505050905090810190601f168015611eea5780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390a4809150509695505050505050565b6000600360008054815260200190815260200160002060030160019054906101000a900460ff16151515611fa6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f416c72656164792065786563757465640000000000000000000000000000000081525060200191505060405180910390fd5b83600360008054815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260036000805481526020019081526020016000206001018190555081600360008054815260200190815260200160002060020190805190602001906120439291906125db565b50828473ffffffffffffffffffffffffffffffffffffffff166000547f8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee8856040518080602001828103825283818151815260200191508051906020019080838360005b838110156120c15780820151818401526020810190506120a6565b50505050905090810190601f1680156120ee5780820380516001836020036101000a031916815260200191505b509250505060405180910390a461215633604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401915050604051809103902060016124b6565b806121b857506121b733604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401915050604051809103902060026124b6565b5b156121cc576121ca60005460016110c5565b505b600080815480929190600101919050555060016000540390509392505050565b600080600060608060606004600088600019166000191681526020019081526020016000206000015460046000896000191660001916815260200190815260200160002060010154600460008a6000191660001916815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600460008b60001916600019168152602001908152602001600020600301600460008c60001916600019168152602001908152602001600020600401600460008d60001916600019168152602001908152602001600020600501828054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123625780601f1061233757610100808354040283529160200191612362565b820191906000526020600020905b81548152906001019060200180831161234557829003601f168201915b50505050509250818054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123fe5780601f106123d3576101008083540402835291602001916123fe565b820191906000526020600020905b8154815290600101906020018083116123e157829003601f168201915b50505050509150808054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561249a5780601f1061246f5761010080835404028352916020019161249a565b820191906000526020600020905b81548152906001019060200180831161247d57829003601f168201915b5050505050905095509550955095509550955091939550919395565b6000806000600102600160008660001916600019168152602001908152602001600020600201546000191614156124f05760009150612518565b8260016000866000191660001916815260200190815260200160002060000154111590508091505b5092915050565b8154818355818111156125465781836000526020600020918201910161254591906126db565b5b505050565b50805460018160011615610100020316600290046000825580601f106125715750612590565b601f01602090049060005260206000209081019061258f9190612700565b5b50565b50805460018160011615610100020316600290046000825580601f106125b957506125d8565b601f0160209004906000526020600020908101906125d79190612700565b5b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061261c57805160ff191683800117855561264a565b8280016001018555821561264a579182015b8281111561264957825182559160200191906001019061262e565b5b5090506126579190612700565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061269c57805160ff19168380011785556126ca565b828001600101855582156126ca579182015b828111156126c95782518255916020019190600101906126ae565b5b5090506126d79190612700565b5090565b6126fd91905b808211156126f95760008160009055506001016126e1565b5090565b90565b61272291905b8082111561271e576000816000905550600101612706565b5090565b905600a165627a7a723058207eb1d726f26bc24d22da67c993ec141d0fde49ec4bec362b966c8beb299a62f00029",
  "deployedBytecode": "0x6080604052600436106100ba576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063032c1a8a146100bf57806312aaac70146101045780631d3812401461015f578063262b54f5146101bc5780634eee424a1461023e578063747442d314610287578063862642f5146102d85780639010f72614610321578063b1a34e0d146103a3578063b61d27f6146104e8578063c9100bcb14610582578063d202158d14610745575b600080fd5b3480156100cb57600080fd5b506100ee6004803603810190808035600019169060200190929190505050610798565b6040518082815260200191505060405180910390f35b34801561011057600080fd5b5061013360048036038101908080356000191690602001909291905050506107c0565b604051808481526020018381526020018260001916600019168152602001935050505060405180910390f35b34801561016b57600080fd5b506101a26004803603810190808035600019169060200190929190803590602001909291908035906020019092919050505061082f565b604051808215151515815260200191505060405180910390f35b3480156101c857600080fd5b506101e760048036038101908080359060200190929190505050610ae8565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561022a57808201518184015260208101905061020f565b505050509050019250505060405180910390f35b34801561024a57600080fd5b5061026d6004803603810190808035600019169060200190929190505050610b57565b604051808215151515815260200191505060405180910390f35b34801561029357600080fd5b506102be600480360381019080803590602001909291908035151590602001909291905050506110c5565b604051808215151515815260200191505060405180910390f35b3480156102e457600080fd5b5061030760048036038101908080356000191690602001909291905050506115f0565b604051808215151515815260200191505060405180910390f35b34801561032d57600080fd5b5061034c60048036038101908080359060200190929190505050611976565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561038f578082015181840152602081019050610374565b505050509050019250505060405180910390f35b3480156103af57600080fd5b506104ca6004803603810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506119e5565b60405180826000191660001916815260200191505060405180910390f35b61056c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611f0a565b6040518082815260200191505060405180910390f35b34801561058e57600080fd5b506105b160048036038101908080356000191690602001909291905050506121ec565b604051808781526020018681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018060200180602001848103845287818151815260200191508051906020019080838360005b8381101561063757808201518184015260208101905061061c565b50505050905090810190601f1680156106645780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019080838360005b8381101561069d578082015181840152602081019050610682565b50505050905090810190601f1680156106ca5780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b838110156107035780820151818401526020810190506106e8565b50505050905090810190601f1680156107305780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390f35b34801561075157600080fd5b5061077e6004803603810190808035600019169060200190929190803590602001909291905050506124b6565b604051808215151515815260200191505060405180910390f35b6000600160008360001916600019168152602001908152602001600020600001549050919050565b60008060006001600085600019166000191681526020019081526020016000206000015460016000866000191660001916815260200190815260200160002060010154600160008760001916600019168152602001908152602001600020600201549250925092509193909250565b600083600019166001600086600019166000191681526020019081526020016000206002015460001916141515156108cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4b657920616c726561647920657864697374730000000000000000000000000081525060200191505060405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156109fa5761095f33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401915050604051809103902060016124b6565b15156109f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f53656e64657220646f6573206e6f742068617665206d616e6167656d656e742081526020017f6b6579000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b5b8360016000866000191660001916815260200190815260200160002060020181600019169055508260016000866000191660001916815260200190815260200160002060000181905550816001600086600019166000191681526020019081526020016000206001018190555060026000848152602001908152602001600020849080600181540180825580915050906001820390600052602060002001600090919290919091509060001916905550818385600019167f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e960405160405180910390a4600190509392505050565b606060056000838152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610b4b57602002820191906000526020600020905b81546000191681526020019060010190808311610b33575b50505050509050919050565b60008060003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610c8757610bec33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401915050604051809103902060016124b6565b1515610c86576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f53656e64657220646f6573206e6f742068617665206d616e6167656d656e742081526020017f6b6579000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b5b60046000856000191660001916815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166004600086600019166000191681526020019081526020016000206000015485600019167f3cf57863a89432c61c4a27073c6ee39e8a764bff5a05aebfbcdcdc80b2e6130a60046000896000191660001916815260200190815260200160002060010154600460008a60001916600019168152602001908152602001600020600301600460008b60001916600019168152602001908152602001600020600401600460008c6000191660001916815260200190815260200160002060050160405180858152602001806020018060200180602001848103845287818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015610e315780601f10610e0657610100808354040283529160200191610e31565b820191906000526020600020905b815481529060010190602001808311610e1457829003601f168201915b5050848103835286818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015610eb45780601f10610e8957610100808354040283529160200191610eb4565b820191906000526020600020905b815481529060010190602001808311610e9757829003601f168201915b5050848103825285818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015610f375780601f10610f0c57610100808354040283529160200191610f37565b820191906000526020600020905b815481529060010190602001808311610f1a57829003601f168201915b505097505050505050505060405180910390a4600560006004600087600019166000191681526020019081526020016000206000015481526020019081526020016000209150600090505b81805490508110156110355783600019168282815481101515610fa157fe5b9060005260206000200154600019161415611028578181815481101515610fc457fe5b9060005260206000200160009055816001838054905003815481101515610fe757fe5b9060005260206000200154828281548110151561100057fe5b90600052602060002001816000191690555081805480919060019003611026919061251f565b505b8080600101915050610f82565b60046000856000191660001916815260200190815260200160002060008082016000905560018201600090556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600382016000611098919061254b565b6004820160006110a8919061254b565b6005820160006110b89190612593565b5050600192505050919050565b600061112233604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401915050604051809103902060026124b6565b1515611196576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f53656e64657220646f6573206e6f74206861766520616374696f6e206b65790081525060200191505060405180910390fd5b827fb3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d883604051808215151515815260200191505060405180910390a26001151582151514156115b65760016003600085815260200190815260200160002060030160006101000a81548160ff0219169083151502179055506003600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600360008581526020019081526020016000206001015460036000868152602001908152602001600020600201600060405180838054600181600116156101000203166002900480156112ef5780601f106112c4576101008083540402835291602001916112ef565b820191906000526020600020905b8154815290600101906020018083116112d257829003601f168201915b50508260ff1681526020019250505060006040518083038185875af1925050509050801561147e5760016003600085815260200190815260200160002060030160016101000a81548160ff02191690831515021790555060036000848152602001908152602001600020600101546003600085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16847f1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b860036000888152602001908152602001600020600201604051808060200182810382528381815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561146b5780601f106114405761010080835404028352916020019161146b565b820191906000526020600020905b81548152906001019060200180831161144e57829003601f168201915b50509250505060405180910390a46115ea565b60036000848152602001908152602001600020600101546003600085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16847fe10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a686003600088815260200190815260200160002060020160405180806020018281038252838181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156115a35780601f10611578576101008083540402835291602001916115a3565b820191906000526020600020905b81548152906001019060200180831161158657829003601f168201915b50509250505060405180910390a46115ea565b60006003600085815260200190815260200160002060030160006101000a81548160ff021916908315150217905550600190505b92915050565b600080600083600019166001600086600019166000191681526020019081526020016000206002015460001916141515611692576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f4e6f2073756368206b657900000000000000000000000000000000000000000081525060200191505060405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156117bd5761172233604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401915050604051809103902060016124b6565b15156117bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f53656e64657220646f6573206e6f742068617665206d616e6167656d656e742081526020017f6b6579000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b5b600160008560001916600019168152602001908152602001600020600101546001600086600019166000191681526020019081526020016000206000015460016000876000191660001916815260200190815260200160002060020154600019167f585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d339760405160405180910390a4600260006001600087600019166000191681526020019081526020016000206000015481526020019081526020016000209150600090505b818054905081101561193557836000191682828154811015156118a157fe5b90600052602060002001546000191614156119285781818154811015156118c457fe5b90600052602060002001600090558160018380549050038154811015156118e757fe5b9060005260206000200154828281548110151561190057fe5b90600052602060002001816000191690555081805480919060019003611926919061251f565b505b8080600101915050611882565b600160008560001916600019168152602001908152602001600020600080820160009055600182016000905560028201600090555050600192505050919050565b6060600260008381526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156119d957602002820191906000526020600020905b815460001916815260200190600101908083116119c1575b50505050509050919050565b6000808588604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140182815260200192505050604051809103902090503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611b6e57611ad333604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401915050604051809103902060036124b6565b1515611b6d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001807f53656e64657220646f6573206e6f74206861766520636c61696d207369676e6581526020017f72206b657900000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b5b8573ffffffffffffffffffffffffffffffffffffffff1660046000836000191660001916815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611c2557600560008981526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915090600019169055505b876004600083600019166000191681526020019081526020016000206000018190555086600460008360001916600019168152602001908152602001600020600101819055508560046000836000191660001916815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550846004600083600019166000191681526020019081526020016000206003019080519060200190611cfa9291906125db565b50836004600083600019166000191681526020019081526020016000206004019080519060200190611d2d9291906125db565b50826004600083600019166000191681526020019081526020016000206005019080519060200190611d6092919061265b565b508573ffffffffffffffffffffffffffffffffffffffff168882600019167f46149b18aa084502c3f12bc75e19eda8bda8d102b82cce8474677a6d0d5f43c58a89898960405180858152602001806020018060200180602001848103845287818151815260200191508051906020019080838360005b83811015611df1578082015181840152602081019050611dd6565b50505050905090810190601f168015611e1e5780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019080838360005b83811015611e57578082015181840152602081019050611e3c565b50505050905090810190601f168015611e845780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b83811015611ebd578082015181840152602081019050611ea2565b50505050905090810190601f168015611eea5780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390a4809150509695505050505050565b6000600360008054815260200190815260200160002060030160019054906101000a900460ff16151515611fa6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f416c72656164792065786563757465640000000000000000000000000000000081525060200191505060405180910390fd5b83600360008054815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260036000805481526020019081526020016000206001018190555081600360008054815260200190815260200160002060020190805190602001906120439291906125db565b50828473ffffffffffffffffffffffffffffffffffffffff166000547f8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee8856040518080602001828103825283818151815260200191508051906020019080838360005b838110156120c15780820151818401526020810190506120a6565b50505050905090810190601f1680156120ee5780820380516001836020036101000a031916815260200191505b509250505060405180910390a461215633604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401915050604051809103902060016124b6565b806121b857506121b733604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401915050604051809103902060026124b6565b5b156121cc576121ca60005460016110c5565b505b600080815480929190600101919050555060016000540390509392505050565b600080600060608060606004600088600019166000191681526020019081526020016000206000015460046000896000191660001916815260200190815260200160002060010154600460008a6000191660001916815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600460008b60001916600019168152602001908152602001600020600301600460008c60001916600019168152602001908152602001600020600401600460008d60001916600019168152602001908152602001600020600501828054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123625780601f1061233757610100808354040283529160200191612362565b820191906000526020600020905b81548152906001019060200180831161234557829003601f168201915b50505050509250818054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123fe5780601f106123d3576101008083540402835291602001916123fe565b820191906000526020600020905b8154815290600101906020018083116123e157829003601f168201915b50505050509150808054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561249a5780601f1061246f5761010080835404028352916020019161249a565b820191906000526020600020905b81548152906001019060200180831161247d57829003601f168201915b5050505050905095509550955095509550955091939550919395565b6000806000600102600160008660001916600019168152602001908152602001600020600201546000191614156124f05760009150612518565b8260016000866000191660001916815260200190815260200160002060000154111590508091505b5092915050565b8154818355818111156125465781836000526020600020918201910161254591906126db565b5b505050565b50805460018160011615610100020316600290046000825580601f106125715750612590565b601f01602090049060005260206000209081019061258f9190612700565b5b50565b50805460018160011615610100020316600290046000825580601f106125b957506125d8565b601f0160209004906000526020600020908101906125d79190612700565b5b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061261c57805160ff191683800117855561264a565b8280016001018555821561264a579182015b8281111561264957825182559160200191906001019061262e565b5b5090506126579190612700565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061269c57805160ff19168380011785556126ca565b828001600101855582156126ca579182015b828111156126c95782518255916020019190600101906126ae565b5b5090506126d79190612700565b5090565b6126fd91905b808211156126f95760008160009055506001016126e1565b5090565b90565b61272291905b8082111561271e576000816000905550600101612706565b5090565b905600a165627a7a723058207eb1d726f26bc24d22da67c993ec141d0fde49ec4bec362b966c8beb299a62f00029",
  "sourceMap": "76:5091:0:-;;;214:57;8:9:-1;5:2;;;30:1;27;20:12;5:2;214:57:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;256:10;544:12:6;569:10;559:21;;;;;;;;;;;;;;;;;;;;;;;;544:36;;607:4;590;:10;595:4;590:10;;;;;;;;;;;;;;;;;:14;;:21;;;;;;;642:1;621:4;:10;626:4;621:10;;;;;;;;;;;;;;;;;:18;;:22;;;;674:1;653:4;:10;658:4;653:10;;;;;;;;;;;;;;;;;:18;;:22;;;;685:13;:16;699:1;685:16;;;;;;;;;;;707:4;685:27;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;685:27:6;;;;;;;;;;;;;;;;;;;;;;;;;;;762:1;742:4;:10;747:4;742:10;;;;;;;;;;;;;;;;;:18;;;736:4;727:37;;;;;;;;;;;;;798:10;775:4;:16;780:10;775:16;;;;;;;;;;;;;;;;;:20;;:33;;;;;;;845:1;818:4;:16;823:10;818:16;;;;;;;;;;;;;;;;;:24;;:28;;;;883:1;856:4;:16;861:10;856:16;;;;;;;;;;;;;;;;;:24;;:28;;;;894:13;:16;908:1;894:16;;;;;;;;;;;916:10;894:33;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;894:33:6;;;;;;;;;;;;;;;;;;;;;;;;;;;989:1;963:4;:16;968:10;963:16;;;;;;;;;;;;;;;;;:24;;;951:10;942:49;;;;;;;;;;;;;495:503;;214:57:0;76:5091;;;;;;",
  "deployedSourceMap": "76:5091:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1678:119:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1678:119:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1275:178;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1275:178:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3344:600;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3344:600:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4998:167:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4998:167:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4998:167:0;;;;;;;;;;;;;;;;;2882:896;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2882:896:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3950:855:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3950:855:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5439:903;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5439:903:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2129:136;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2129:136:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2129:136:6;;;;;;;;;;;;;;;;;1415:1028:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1415:1028:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4811:622:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4129:519:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4129:519:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4129:519:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4129:519:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4129:519:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6348:239:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6348:239:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1678:119;1736:15;1771:4;:10;1776:4;1771:10;;;;;;;;;;;;;;;;;:18;;;1763:27;;1678:119;;;:::o;1275:178::-;1326:15;1343;1360:11;1391:4;:10;1396:4;1391:10;;;;;;;;;;;;;;;;;:18;;;1411:4;:10;1416:4;1411:10;;;;;;;;;;;;;;;;;:18;;;1431:4;:10;1436:4;1431:10;;;;;;;;;;;;;;;;;:14;;;1383:63;;;;;;1275:178;;;;;:::o;3344:600::-;3423:12;3473:4;3455:22;;;:4;:10;3460:4;3455:10;;;;;;;;;;;;;;;;;:14;;;:22;;;;;3447:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3569:4;3547:27;;:10;:27;;;;3543:174;;;3598:39;3622:10;3612:21;;;;;;;;;;;;;;;;;;;;;;;;3635:1;3598:13;:39::i;:::-;3590:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3543:174;3744:4;3727;:10;3732:4;3727:10;;;;;;;;;;;;;;;;;:14;;:21;;;;;;;3779:8;3758:4;:10;3763:4;3758:10;;;;;;;;;;;;;;;;;:18;;:29;;;;3818:5;3797:4;:10;3802:4;3797:10;;;;;;;;;;;;;;;;;:18;;:26;;;;3834:13;:23;3848:8;3834:23;;;;;;;;;;;3863:4;3834:34;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3834:34:6;;;;;;;;;;;;;;;;;;;;;;;;;;;3909:5;3899:8;3893:4;3884:31;;;;;;;;;;;;;3933:4;3926:11;;3344:600;;;;;:::o;4998:167:0:-;5093:18;5134:12;:24;5147:10;5134:24;;;;;;;;;;;5127:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4998:167;;;:::o;2882:896::-;2937:12;3399:19;3476:6;2987:4;2965:27;;:10;:27;;;;2961:145;;;3016:39;3040:10;3030:21;;;;;;;;;;;;;;;;;;;;;;;;3053:1;3016:13;:39::i;:::-;3008:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2961:145;3246:6;:16;3253:8;3246:16;;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;3121:267;;3169:6;:16;3176:8;3169:16;;;;;;;;;;;;;;;;;:26;;;3147:8;3121:267;;;;3209:6;:16;3216:8;3209:16;;;;;;;;;;;;;;;;;:23;;;3283:6;:16;3290:8;3283:16;;;;;;;;;;;;;;;;;:26;;3323:6;:16;3330:8;3323:16;;;;;;;;;;;;;;;;;:21;;3358:6;:16;3365:8;3358:16;;;;;;;;;;;;;;;;;:20;;3121:267;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3421:12;:40;3434:6;:16;3441:8;3434:16;;;;;;;;;;;;;;;;;:26;;;3421:40;;;;;;;;;;;3399:62;;3485:1;3476:10;;3472:244;3490:9;:16;;;;3488:1;:18;3472:244;;;3546:8;3530:24;;;:9;3540:1;3530:12;;;;;;;;;;;;;;;;;;:24;;;;3527:179;;;3581:9;3591:1;3581:12;;;;;;;;;;;;;;;;;3574:19;;;3626:9;3653:1;3636:9;:16;;;;:18;3626:29;;;;;;;;;;;;;;;;;;3611:9;3621:1;3611:12;;;;;;;;;;;;;;;;;:44;;;;;;;3673:9;:18;;;;;;;;;;;;:::i;:::-;;3527:179;3508:3;;;;;;;3472:244;;;3733:6;:16;3740:8;3733:16;;;;;;;;;;;;;;;;;;3726:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;3767:4;3760:11;;2882:896;;;;;:::o;3950:855:6:-;4011:12;4043:39;4067:10;4057:21;;;;;;;;;;;;;;;;;;;;;;;;4080:1;4043:13;:39::i;:::-;4035:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4143:3;4134:23;4148:8;4134:23;;;;;;;;;;;;;;;;;;;;;;4184:4;4172:16;;:8;:16;;;4168:610;;;4231:4;4204:10;:15;4215:3;4204:15;;;;;;;;;;;:24;;;:31;;;;;;;;;;;;;;;;;;4259:10;:15;4270:3;4259:15;;;;;;;;;;;:18;;;;;;;;;;;;:23;;4289:10;:15;4300:3;4289:15;;;;;;;;;;;:21;;;4312:10;:15;4323:3;4312:15;;;;;;;;;;;:20;;4334:1;4259:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4249:87;;4354:7;4350:355;;;4408:4;4381:10;:15;4392:3;4381:15;;;;;;;;;;;:24;;;:31;;;;;;;;;;;;;;;;;;4469:10;:15;4480:3;4469:15;;;;;;;;;;;:21;;;4449:10;:15;4460:3;4449:15;;;;;;;;;;;:18;;;;;;;;;;;;4435:78;;4444:3;4435:78;4492:10;:15;4503:3;4492:15;;;;;;;;;;;:20;;4435:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4531:7;;4350:355;4622:10;:15;4633:3;4622:15;;;;;;;;;;;:21;;;4602:10;:15;4613:3;4602:15;;;;;;;;;;;:18;;;;;;;;;;;;4581:85;;4597:3;4581:85;4645:10;:15;4656:3;4645:15;;;;;;;;;;;:20;;4581:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4684:7;;4168:610;4762:5;4735:10;:15;4746:3;4735:15;;;;;;;;;;;:24;;;:32;;;;;;;;;;;;;;;;;;4794:4;4787:11;;3950:855;;;;;:::o;5439:903::-;5488:12;5990:17;6059:6;5538:4;5520:22;;;:4;:10;5525:4;5520:10;;;;;;;;;;;;;;;;;:14;;;:22;;;;5512:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5594:4;5572:27;;:10;:27;;;;5568:174;;;5623:39;5647:10;5637:21;;;;;;;;;;;;;;;;;;;;;;;;5660:1;5623:13;:39::i;:::-;5615:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5568:174;5803:4;:10;5808:4;5803:10;;;;;;;;;;;;;;;;;:18;;;5783:4;:10;5788:4;5783:10;;;;;;;;;;;;;;;;;:18;;;5767:4;:10;5772:4;5767:10;;;;;;;;;;;;;;;;;:14;;;5756:66;;;;;;;;;;;;;6010:13;:33;6024:4;:10;6029:4;6024:10;;;;;;;;;;;;;;;;;:18;;;6010:33;;;;;;;;;;;5990:53;;6068:1;6059:10;;6054:232;6075:7;:14;;;;6071:1;:18;6054:232;;;6128:4;6114:18;;;:7;6122:1;6114:10;;;;;;;;;;;;;;;;;;:18;;;;6110:166;;;6159:7;6167:1;6159:10;;;;;;;;;;;;;;;;;6152:17;;;6200:7;6225:1;6208:7;:14;;;;:18;6200:27;;;;;;;;;;;;;;;;;;6187:7;6195:1;6187:10;;;;;;;;;;;;;;;;;:40;;;;;;;6245:7;:16;;;;;;;;;;;;:::i;:::-;;6110:166;6091:3;;;;;;;6054:232;;;6303:4;:10;6308:4;6303:10;;;;;;;;;;;;;;;;;;6296:17;;;;;;;;;;;;;;;;;;;;6331:4;6324:11;;5439:903;;;;;:::o;2129:136::-;2194:22;2235:13;:23;2249:8;2235:23;;;;;;;;;;;2228:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2129:136;;;:::o;1415:1028:0:-;1617:22;1655:15;1683:7;1692:10;1673:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1655:48;;1740:4;1718:27;;:10;:27;;;;1714:147;;;1769:39;1793:10;1783:21;;;;;;;;;;;;;;;;;;;;;;;;1806:1;1769:13;:39::i;:::-;1761:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1714:147;1901:7;1875:33;;:6;:15;1882:7;1875:15;;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;:33;;;;1871:102;;;1924:12;:24;1937:10;1924:24;;;;;;;;;;;1954:7;1924:38;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1924:38:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1871:102;2011:10;1983:6;:15;1990:7;1983:15;;;;;;;;;;;;;;;;;:25;;:38;;;;2056:7;2031:6;:15;2038:7;2031:15;;;;;;;;;;;;;;;;;:22;;:32;;;;2098:7;2073:6;:15;2080:7;2073:15;;;;;;;;;;;;;;;;;:22;;;:32;;;;;;;;;;;;;;;;;;2143:10;2115:6;:15;2122:7;2115:15;;;;;;;;;;;;;;;;;:25;;:38;;;;;;;;;;;;:::i;:::-;;2186:5;2163:6;:15;2170:7;2163:15;;;;;;;;;;;;;;;;;:20;;:28;;;;;;;;;;;;:::i;:::-;;2223:4;2201:6;:15;2208:7;2201:15;;;;;;;;;;;;;;;;;:19;;:26;;;;;;;;;;;;:::i;:::-;;2333:7;2243:168;;2288:10;2267:7;2243:168;;;;2312:7;2354:10;2378:5;2397:4;2243:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2243:168:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2243:168:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2243:168:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2429:7;2422:14;;1415:1028;;;;;;;;;:::o;4811:622:6:-;4901:19;4941:10;:26;4952:14;;4941:26;;;;;;;;;;;:35;;;;;;;;;;;;4940:36;4932:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5039:3;5007:10;:26;5018:14;;5007:26;;;;;;;;;;;:29;;;:35;;;;;;;;;;;;;;;;;;5087:6;5052:10;:26;5063:14;;5052:26;;;;;;;;;;;:32;;:41;;;;5137:5;5103:10;:26;5114:14;;5103:26;;;;;;;;;;;:31;;:39;;;;;;;;;;;;:::i;:::-;;5198:6;5193:3;5158:54;;5177:14;;5158:54;5206:5;5158:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5158:54:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5227:39;5251:10;5241:21;;;;;;;;;;;;;;;;;;;;;;;;5264:1;5227:13;:39::i;:::-;:82;;;;5270:39;5294:10;5284:21;;;;;;;;;;;;;;;;;;;;;;;;5307:1;5270:13;:39::i;:::-;5227:82;5223:142;;;5325:29;5333:14;;5349:4;5325:7;:29::i;:::-;;5223:142;5375:14;;:16;;;;;;;;;;;;;5425:1;5408:14;;:18;5401:25;;4811:622;;;;;:::o;4129:519:0:-;4226:17;4257:14;4285;4313:15;4342:10;4366;4422:6;:16;4429:8;4422:16;;;;;;;;;;;;;;;;;:26;;;4462:6;:16;4469:8;4462:16;;;;;;;;;;;;;;;;;:23;;;4499:6;:16;4506:8;4499:16;;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;4536:6;:16;4543:8;4536:16;;;;;;;;;;;;;;;;;:26;;4576:6;:16;4583:8;4576:16;;;;;;;;;;;;;;;;;:21;;4611:6;:16;4618:8;4611:16;;;;;;;;;;;;;;;;;:20;;4401:240;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4129:519;;;;;;;:::o;6348:239:6:-;6424:11;6447:12;6491:1;6473:19;;:4;:10;6478:4;6473:10;;;;;;;;;;;;;;;;;:14;;;:19;;;;6469:37;;;6501:5;6494:12;;;;6469:37;6548:8;6526:4;:10;6531:4;6526:10;;;;;;;;;;;;;;;;;:18;;;:30;;6516:40;;6573:7;6566:14;;6348:239;;;;;;:::o;76:5091:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"./ERC735.sol\";\nimport \"./KeyHolder.sol\";\n\ncontract ClaimHolder is KeyHolder, ERC735 {\n\n    mapping (bytes32 => Claim) claims;\n    mapping (uint256 => bytes32[]) claimsByType;\n\n    constructor(bytes32 _backupKey) KeyHolder(_backupKey) { }\n\n /**\n    * @notice Implementation of the addClaim function from the ERC-735 standard\n    *  Require that the msg.sender has claim signer key.\n    *\n    * @param _claimType The type of claim\n    * @param _scheme The scheme with which this claim SHOULD be verified or how it should be processed.\n    * @param _issuer The issuers identity contract address, or the address used to sign the above signature.\n    * @param _signature Signature which is the proof that the claim issuer issued a claim of claimType for this identity.\n    * it MUST be a signed message of the following structure: keccak256(address identityHolder_address, uint256 _ claimType, bytes data)\n    * or keccak256(abi.encode(identityHolder_address, claimType, data))\n    * @param _data The hash of the claim data, sitting in another location, a bit-mask, call data, or actual data based on the claim scheme.\n    * @param _uri The location of the claim, this can be HTTP links, swarm hashes, IPFS hashes, and such.\n    *\n    * @return Returns claimRequestId: COULD be send to the approve function, to approve or reject this claim.\n    * triggers ClaimAdded event.\n    */\n\n    function addClaim(\n        uint256 _claimType,\n        uint256 _scheme,\n        address _issuer,\n        bytes _signature,\n        bytes _data,\n        string _uri\n    )\n        public\n        returns (bytes32 claimRequestId)\n    {\n        bytes32 claimId = keccak256(_issuer, _claimType);\n\n        if (msg.sender != address(this)) {\n            require(keyHasPurpose(keccak256(msg.sender), 3), \"Sender does not have claim signer key\");\n        }\n\n        if (claims[claimId].issuer != _issuer) {\n            claimsByType[_claimType].push(claimId);\n        }\n\n        claims[claimId].claimType = _claimType;\n        claims[claimId].scheme = _scheme;\n        claims[claimId].issuer = _issuer;\n        claims[claimId].signature = _signature;\n        claims[claimId].data = _data;\n        claims[claimId].uri = _uri;\n\n        emit ClaimAdded(\n            claimId,\n            _claimType,\n            _scheme,\n            _issuer,\n            _signature,\n            _data,\n            _uri\n        );\n\n        return claimId;\n    }\n\n /**\n    * @notice Implementation of the removeClaim function from the ERC-735 standard\n    * Require that the msg.sender has management key.\n    * Can only be removed by the claim issuer, or the claim holder itself.\n    *\n    * @param _claimId The identity of the claim i.e. keccak256(address issuer_address + uint256 claimType)\n    *\n    * @return Returns TRUE when the claim was removed.\n    * triggers ClaimRemoved event\n    */\n\n    function removeClaim(bytes32 _claimId) public returns (bool success) {\n        if (msg.sender != address(this)) {\n            require(keyHasPurpose(keccak256(msg.sender), 1), \"Sender does not have management key\");\n        }\n\n        emit ClaimRemoved(\n            _claimId,\n            claims[_claimId].claimType,\n            claims[_claimId].scheme,\n            claims[_claimId].issuer,\n            claims[_claimId].signature,\n            claims[_claimId].data,\n            claims[_claimId].uri\n        );\n\n        bytes32[] claimList = claimsByType[claims[_claimId].claimType];\n\n        for(uint i = 0; i<claimList.length; i++) {\n            if(claimList[i] == _claimId) {\n                delete claimList[i];\n                claimList[i] = claimList[claimList.length-1];\n                claimList.length--;\n            }\n        }\n\n        delete claims[_claimId];\n\n        return true;\n    }\n\n/**\n    * @notice Implementation of the getClaim function from the ERC-735 standard.\n    *\n    * @param _claimId The identity of the claim i.e. keccak256(address issuer_address + uint256 claimType)\n    *\n    * @return Returns all the parameters of the claim for the specified _claimId (claimType, scheme, signature, issuer, data, uri) .\n    */\n\n    function getClaim(bytes32 _claimId)\n        public\n        constant\n        returns(\n            uint256 claimType,\n            uint256 scheme,\n            address issuer,\n            bytes signature,\n            bytes data,\n            string uri\n        )\n    {\n        return (\n            claims[_claimId].claimType,\n            claims[_claimId].scheme,\n            claims[_claimId].issuer,\n            claims[_claimId].signature,\n            claims[_claimId].data,\n            claims[_claimId].uri\n        );\n    }\n\n/**\n    * @notice Implementation of the getClaimIdsByTopic function from the ERC-735 standard.\n    * used to get all the claims from the specified claimType\n    *\n    * @param _claimType The identity of the claim i.e. keccak256(address issuer_address + uint256 claimType)\n    *\n    * @return Returns an array of claim IDs by claimType.\n    */\n\n    function getClaimIdsByType(uint256 _claimType)\n        public\n        constant\n        returns(bytes32[] claimIds)\n    {\n        return claimsByType[_claimType];\n    }\n}",
  "sourcePath": "/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/ClaimHolder.sol",
  "ast": {
    "absolutePath": "/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/ClaimHolder.sol",
    "exportedSymbols": {
      "ClaimHolder": [
        310
      ]
    },
    "id": 311,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/ERC735.sol",
        "file": "./ERC735.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 311,
        "sourceUnit": 890,
        "src": "26:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/KeyHolder.sol",
        "file": "./KeyHolder.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 311,
        "sourceUnit": 1721,
        "src": "49:25:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "KeyHolder",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1720,
              "src": "100:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KeyHolder_$1720",
                "typeString": "contract KeyHolder"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "100:9:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "ERC735",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 889,
              "src": "111:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC735_$889",
                "typeString": "contract ERC735"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "111:6:0"
          }
        ],
        "contractDependencies": [
          760,
          889,
          1720
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 310,
        "linearizedBaseContracts": [
          310,
          889,
          1720,
          760
        ],
        "name": "ClaimHolder",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 11,
            "name": "claims",
            "nodeType": "VariableDeclaration",
            "scope": 310,
            "src": "125:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
              "typeString": "mapping(bytes32 => struct ERC735.Claim)"
            },
            "typeName": {
              "id": 10,
              "keyType": {
                "id": 8,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "134:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "125:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                "typeString": "mapping(bytes32 => struct ERC735.Claim)"
              },
              "valueType": {
                "contractScope": null,
                "id": 9,
                "name": "Claim",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 839,
                "src": "145:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Claim_$839_storage_ptr",
                  "typeString": "struct ERC735.Claim"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 16,
            "name": "claimsByType",
            "nodeType": "VariableDeclaration",
            "scope": 310,
            "src": "164:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$",
              "typeString": "mapping(uint256 => bytes32[])"
            },
            "typeName": {
              "id": 15,
              "keyType": {
                "id": 12,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "173:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "164:30:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$",
                "typeString": "mapping(uint256 => bytes32[])"
              },
              "valueType": {
                "baseType": {
                  "id": 13,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "184:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "id": 14,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "184:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                  "typeString": "bytes32[]"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 24,
              "nodeType": "Block",
              "src": "268:3:0",
              "statements": []
            },
            "documentation": null,
            "id": 25,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 21,
                    "name": "_backupKey",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 18,
                    "src": "256:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 22,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 20,
                  "name": "KeyHolder",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1720,
                  "src": "246:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_KeyHolder_$1720_$",
                    "typeString": "type(contract KeyHolder)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "246:21:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18,
                  "name": "_backupKey",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "226:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "226:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "225:20:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "268:0:0"
            },
            "scope": 310,
            "src": "214:57:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 137,
              "nodeType": "Block",
              "src": "1645:798:0",
              "statements": [
                {
                  "assignments": [
                    43
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43,
                      "name": "claimId",
                      "nodeType": "VariableDeclaration",
                      "scope": 138,
                      "src": "1655:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 42,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1655:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 48,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 45,
                        "name": "_issuer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "1683:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 46,
                        "name": "_claimType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "1692:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 44,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2235,
                      "src": "1673:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                        "typeString": "function () pure returns (bytes32)"
                      }
                    },
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1673:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1655:48:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 49,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2241,
                        "src": "1718:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 50,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1718:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 52,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2260,
                          "src": "1740:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ClaimHolder_$310",
                            "typeString": "contract ClaimHolder"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ClaimHolder_$310",
                            "typeString": "contract ClaimHolder"
                          }
                        ],
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1732:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 53,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1732:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1718:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 67,
                  "nodeType": "IfStatement",
                  "src": "1714:147:0",
                  "trueBody": {
                    "id": 66,
                    "nodeType": "Block",
                    "src": "1747:114:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 58,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2241,
                                        "src": "1793:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 59,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "1793:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 57,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2235,
                                    "src": "1783:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                                      "typeString": "function () pure returns (bytes32)"
                                    }
                                  },
                                  "id": 60,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1783:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "hexValue": "33",
                                  "id": 61,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1806:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3_by_1",
                                    "typeString": "int_const 3"
                                  },
                                  "value": "3"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_3_by_1",
                                    "typeString": "int_const 3"
                                  }
                                ],
                                "id": 56,
                                "name": "keyHasPurpose",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1719,
                                "src": "1769:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,uint256) view returns (bool)"
                                }
                              },
                              "id": 62,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1769:39:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "53656e64657220646f6573206e6f74206861766520636c61696d207369676e6572206b6579",
                              "id": 63,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1810:39:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_43a05665781b32cc8024b11b99adbd97618bb3fd5a923c29ee6dfc9548ed823a",
                                "typeString": "literal_string \"Sender does not have claim signer key\""
                              },
                              "value": "Sender does not have claim signer key"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_43a05665781b32cc8024b11b99adbd97618bb3fd5a923c29ee6dfc9548ed823a",
                                "typeString": "literal_string \"Sender does not have claim signer key\""
                              }
                            ],
                            "id": 55,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2244,
                              2245
                            ],
                            "referencedDeclaration": 2245,
                            "src": "1761:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 64,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1761:89:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 65,
                        "nodeType": "ExpressionStatement",
                        "src": "1761:89:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 68,
                          "name": "claims",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "1875:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                            "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                          }
                        },
                        "id": 70,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 69,
                          "name": "claimId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "1882:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1875:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$839_storage",
                          "typeString": "struct ERC735.Claim storage ref"
                        }
                      },
                      "id": 71,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "issuer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 832,
                      "src": "1875:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 72,
                      "name": "_issuer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "1901:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1875:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 82,
                  "nodeType": "IfStatement",
                  "src": "1871:102:0",
                  "trueBody": {
                    "id": 81,
                    "nodeType": "Block",
                    "src": "1910:63:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 78,
                              "name": "claimId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43,
                              "src": "1954:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 74,
                                "name": "claimsByType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16,
                                "src": "1924:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$",
                                  "typeString": "mapping(uint256 => bytes32[] storage ref)"
                                }
                              },
                              "id": 76,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 75,
                                "name": "_claimType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27,
                                "src": "1937:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1924:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                "typeString": "bytes32[] storage ref"
                              }
                            },
                            "id": 77,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1924:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$_t_uint256_$",
                              "typeString": "function (bytes32) returns (uint256)"
                            }
                          },
                          "id": 79,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1924:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 80,
                        "nodeType": "ExpressionStatement",
                        "src": "1924:38:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 83,
                          "name": "claims",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "1983:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                            "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                          }
                        },
                        "id": 85,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 84,
                          "name": "claimId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "1990:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1983:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$839_storage",
                          "typeString": "struct ERC735.Claim storage ref"
                        }
                      },
                      "id": 86,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "claimType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 828,
                      "src": "1983:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 87,
                      "name": "_claimType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "2011:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1983:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "1983:38:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 90,
                          "name": "claims",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "2031:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                            "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                          }
                        },
                        "id": 92,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 91,
                          "name": "claimId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "2038:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2031:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$839_storage",
                          "typeString": "struct ERC735.Claim storage ref"
                        }
                      },
                      "id": 93,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "scheme",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 830,
                      "src": "2031:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 94,
                      "name": "_scheme",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "2056:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2031:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 96,
                  "nodeType": "ExpressionStatement",
                  "src": "2031:32:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 97,
                          "name": "claims",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "2073:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                            "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                          }
                        },
                        "id": 99,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 98,
                          "name": "claimId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "2080:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2073:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$839_storage",
                          "typeString": "struct ERC735.Claim storage ref"
                        }
                      },
                      "id": 100,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "issuer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 832,
                      "src": "2073:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 101,
                      "name": "_issuer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "2098:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2073:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "2073:32:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 104,
                          "name": "claims",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "2115:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                            "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                          }
                        },
                        "id": 106,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 105,
                          "name": "claimId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "2122:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2115:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$839_storage",
                          "typeString": "struct ERC735.Claim storage ref"
                        }
                      },
                      "id": 107,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "signature",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 834,
                      "src": "2115:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 108,
                      "name": "_signature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "2143:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "2115:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "2115:38:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 111,
                          "name": "claims",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "2163:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                            "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                          }
                        },
                        "id": 113,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 112,
                          "name": "claimId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "2170:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2163:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$839_storage",
                          "typeString": "struct ERC735.Claim storage ref"
                        }
                      },
                      "id": 114,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "data",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 836,
                      "src": "2163:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 115,
                      "name": "_data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "2186:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "2163:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "2163:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 118,
                          "name": "claims",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "2201:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                            "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                          }
                        },
                        "id": 120,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 119,
                          "name": "claimId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "2208:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2201:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$839_storage",
                          "typeString": "struct ERC735.Claim storage ref"
                        }
                      },
                      "id": 121,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "uri",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 838,
                      "src": "2201:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 122,
                      "name": "_uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "2223:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2201:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "2201:26:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 126,
                        "name": "claimId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "2267:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 127,
                        "name": "_claimType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "2288:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 128,
                        "name": "_scheme",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "2312:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 129,
                        "name": "_issuer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "2333:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 130,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "2354:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 131,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "2378:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 132,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "2397:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 125,
                      "name": "ClaimAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 794,
                      "src": "2243:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,uint256,uint256,address,bytes memory,bytes memory,string memory)"
                      }
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2243:168:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 134,
                  "nodeType": "EmitStatement",
                  "src": "2238:173:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 135,
                    "name": "claimId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 43,
                    "src": "2429:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 41,
                  "id": 136,
                  "nodeType": "Return",
                  "src": "2422:14:0"
                }
              ]
            },
            "documentation": "@notice Implementation of the addClaim function from the ERC-735 standard\n Require that the msg.sender has claim signer key.\n    * @param _claimType The type of claim\n@param _scheme The scheme with which this claim SHOULD be verified or how it should be processed.\n@param _issuer The issuers identity contract address, or the address used to sign the above signature.\n@param _signature Signature which is the proof that the claim issuer issued a claim of claimType for this identity.\nit MUST be a signed message of the following structure: keccak256(address identityHolder_address, uint256 _ claimType, bytes data)\nor keccak256(abi.encode(identityHolder_address, claimType, data))\n@param _data The hash of the claim data, sitting in another location, a bit-mask, call data, or actual data based on the claim scheme.\n@param _uri The location of the claim, this can be HTTP links, swarm hashes, IPFS hashes, and such.\n    * @return Returns claimRequestId: COULD be send to the approve function, to approve or reject this claim.\ntriggers ClaimAdded event.",
            "id": 138,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "addClaim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "name": "_claimType",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "1442:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1442:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29,
                  "name": "_scheme",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "1470:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1470:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "name": "_issuer",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "1495:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1495:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "name": "_signature",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "1520:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1520:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "1546:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1546:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "1567:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1567:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1432:152:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "name": "claimRequestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "1617:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1617:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1616:24:0"
            },
            "scope": 310,
            "src": "1415:1028:0",
            "stateMutability": "nonpayable",
            "superFunction": 881,
            "visibility": "public"
          },
          {
            "body": {
              "id": 251,
              "nodeType": "Block",
              "src": "2951:827:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 145,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2241,
                        "src": "2965:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2965:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 148,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2260,
                          "src": "2987:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ClaimHolder_$310",
                            "typeString": "contract ClaimHolder"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ClaimHolder_$310",
                            "typeString": "contract ClaimHolder"
                          }
                        ],
                        "id": 147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2979:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2979:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2965:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 163,
                  "nodeType": "IfStatement",
                  "src": "2961:145:0",
                  "trueBody": {
                    "id": 162,
                    "nodeType": "Block",
                    "src": "2994:112:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 154,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2241,
                                        "src": "3040:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 155,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "3040:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 153,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2235,
                                    "src": "3030:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                                      "typeString": "function () pure returns (bytes32)"
                                    }
                                  },
                                  "id": 156,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3030:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 157,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3053:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  }
                                ],
                                "id": 152,
                                "name": "keyHasPurpose",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1719,
                                "src": "3016:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,uint256) view returns (bool)"
                                }
                              },
                              "id": 158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3016:39:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "53656e64657220646f6573206e6f742068617665206d616e6167656d656e74206b6579",
                              "id": 159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3057:37:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ac6b3bc9d0622dda8fc2f421b9f671767c5b983d0415995ab909c75c3ef27f29",
                                "typeString": "literal_string \"Sender does not have management key\""
                              },
                              "value": "Sender does not have management key"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ac6b3bc9d0622dda8fc2f421b9f671767c5b983d0415995ab909c75c3ef27f29",
                                "typeString": "literal_string \"Sender does not have management key\""
                              }
                            ],
                            "id": 151,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2244,
                              2245
                            ],
                            "referencedDeclaration": 2245,
                            "src": "3008:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3008:87:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 161,
                        "nodeType": "ExpressionStatement",
                        "src": "3008:87:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 165,
                        "name": "_claimId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "3147:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 166,
                            "name": "claims",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "3169:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                            }
                          },
                          "id": 168,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 167,
                            "name": "_claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "3176:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3169:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$839_storage",
                            "typeString": "struct ERC735.Claim storage ref"
                          }
                        },
                        "id": 169,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "claimType",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 828,
                        "src": "3169:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 170,
                            "name": "claims",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "3209:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                            }
                          },
                          "id": 172,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 171,
                            "name": "_claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "3216:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3209:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$839_storage",
                            "typeString": "struct ERC735.Claim storage ref"
                          }
                        },
                        "id": 173,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "scheme",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 830,
                        "src": "3209:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 174,
                            "name": "claims",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "3246:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                            }
                          },
                          "id": 176,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 175,
                            "name": "_claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "3253:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3246:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$839_storage",
                            "typeString": "struct ERC735.Claim storage ref"
                          }
                        },
                        "id": 177,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "issuer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 832,
                        "src": "3246:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 178,
                            "name": "claims",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "3283:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                            }
                          },
                          "id": 180,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 179,
                            "name": "_claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "3290:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3283:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$839_storage",
                            "typeString": "struct ERC735.Claim storage ref"
                          }
                        },
                        "id": 181,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "signature",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 834,
                        "src": "3283:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 182,
                            "name": "claims",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "3323:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                            }
                          },
                          "id": 184,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 183,
                            "name": "_claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "3330:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3323:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$839_storage",
                            "typeString": "struct ERC735.Claim storage ref"
                          }
                        },
                        "id": 185,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 836,
                        "src": "3323:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 186,
                            "name": "claims",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "3358:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                            }
                          },
                          "id": 188,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 187,
                            "name": "_claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "3365:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3358:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$839_storage",
                            "typeString": "struct ERC735.Claim storage ref"
                          }
                        },
                        "id": 189,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "uri",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 838,
                        "src": "3358:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 164,
                      "name": "ClaimRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 810,
                      "src": "3121:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,uint256,uint256,address,bytes memory,bytes memory,string memory)"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3121:267:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "EmitStatement",
                  "src": "3116:272:0"
                },
                {
                  "assignments": [
                    195
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 195,
                      "name": "claimList",
                      "nodeType": "VariableDeclaration",
                      "scope": 252,
                      "src": "3399:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 193,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3399:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 194,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3399:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 202,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 196,
                      "name": "claimsByType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "3421:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$",
                        "typeString": "mapping(uint256 => bytes32[] storage ref)"
                      }
                    },
                    "id": 201,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 197,
                          "name": "claims",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "3434:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                            "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                          }
                        },
                        "id": 199,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 198,
                          "name": "_claimId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 140,
                          "src": "3441:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3434:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$839_storage",
                          "typeString": "struct ERC735.Claim storage ref"
                        }
                      },
                      "id": 200,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claimType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 828,
                      "src": "3434:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3421:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3399:62:0"
                },
                {
                  "body": {
                    "id": 242,
                    "nodeType": "Block",
                    "src": "3513:203:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 214,
                              "name": "claimList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 195,
                              "src": "3530:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                "typeString": "bytes32[] storage pointer"
                              }
                            },
                            "id": 216,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 215,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 204,
                              "src": "3540:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3530:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 217,
                            "name": "_claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "3546:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "3530:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 241,
                        "nodeType": "IfStatement",
                        "src": "3527:179:0",
                        "trueBody": {
                          "id": 240,
                          "nodeType": "Block",
                          "src": "3556:150:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 222,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "3574:19:0",
                                "subExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 219,
                                    "name": "claimList",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 195,
                                    "src": "3581:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                      "typeString": "bytes32[] storage pointer"
                                    }
                                  },
                                  "id": 221,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 220,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 204,
                                    "src": "3591:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3581:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 223,
                              "nodeType": "ExpressionStatement",
                              "src": "3574:19:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 233,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 224,
                                    "name": "claimList",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 195,
                                    "src": "3611:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                      "typeString": "bytes32[] storage pointer"
                                    }
                                  },
                                  "id": 226,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 225,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 204,
                                    "src": "3621:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3611:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 227,
                                    "name": "claimList",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 195,
                                    "src": "3626:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                      "typeString": "bytes32[] storage pointer"
                                    }
                                  },
                                  "id": 232,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 231,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 228,
                                        "name": "claimList",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 195,
                                        "src": "3636:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                          "typeString": "bytes32[] storage pointer"
                                        }
                                      },
                                      "id": 229,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "3636:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "31",
                                      "id": 230,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3653:1:0",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "3636:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3626:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "3611:44:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 234,
                              "nodeType": "ExpressionStatement",
                              "src": "3611:44:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 238,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "--",
                                "prefix": false,
                                "src": "3673:18:0",
                                "subExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 235,
                                    "name": "claimList",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 195,
                                    "src": "3673:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                      "typeString": "bytes32[] storage pointer"
                                    }
                                  },
                                  "id": 237,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "3673:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 239,
                              "nodeType": "ExpressionStatement",
                              "src": "3673:18:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 207,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 204,
                      "src": "3488:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 208,
                        "name": "claimList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "3490:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[] storage pointer"
                        }
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3490:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3488:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 243,
                  "initializationExpression": {
                    "assignments": [
                      204
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 204,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 252,
                        "src": "3476:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 203,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3476:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 206,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3485:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3476:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3508:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 211,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 204,
                        "src": "3508:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 213,
                    "nodeType": "ExpressionStatement",
                    "src": "3508:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "3472:244:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3726:23:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 244,
                        "name": "claims",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "3733:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                          "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                        }
                      },
                      "id": 246,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 245,
                        "name": "_claimId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "3740:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3733:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$839_storage",
                        "typeString": "struct ERC735.Claim storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 248,
                  "nodeType": "ExpressionStatement",
                  "src": "3726:23:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3767:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 144,
                  "id": 250,
                  "nodeType": "Return",
                  "src": "3760:11:0"
                }
              ]
            },
            "documentation": "@notice Implementation of the removeClaim function from the ERC-735 standard\nRequire that the msg.sender has management key.\nCan only be removed by the claim issuer, or the claim holder itself.\n    * @param _claimId The identity of the claim i.e. keccak256(address issuer_address + uint256 claimType)\n    * @return Returns TRUE when the claim was removed.\ntriggers ClaimRemoved event",
            "id": 252,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "removeClaim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 140,
                  "name": "_claimId",
                  "nodeType": "VariableDeclaration",
                  "scope": 252,
                  "src": "2903:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 139,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2903:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2902:18:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 143,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 252,
                  "src": "2937:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2937:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2936:14:0"
            },
            "scope": 310,
            "src": "2882:896:0",
            "stateMutability": "nonpayable",
            "superFunction": 888,
            "visibility": "public"
          },
          {
            "body": {
              "id": 295,
              "nodeType": "Block",
              "src": "4391:257:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 269,
                            "name": "claims",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "4422:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                            }
                          },
                          "id": 271,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 270,
                            "name": "_claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 254,
                            "src": "4429:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4422:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$839_storage",
                            "typeString": "struct ERC735.Claim storage ref"
                          }
                        },
                        "id": 272,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "claimType",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 828,
                        "src": "4422:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 273,
                            "name": "claims",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "4462:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                            }
                          },
                          "id": 275,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 274,
                            "name": "_claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 254,
                            "src": "4469:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4462:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$839_storage",
                            "typeString": "struct ERC735.Claim storage ref"
                          }
                        },
                        "id": 276,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "scheme",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 830,
                        "src": "4462:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 277,
                            "name": "claims",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "4499:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                            }
                          },
                          "id": 279,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 278,
                            "name": "_claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 254,
                            "src": "4506:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4499:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$839_storage",
                            "typeString": "struct ERC735.Claim storage ref"
                          }
                        },
                        "id": 280,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "issuer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 832,
                        "src": "4499:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 281,
                            "name": "claims",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "4536:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                            }
                          },
                          "id": 283,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 282,
                            "name": "_claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 254,
                            "src": "4543:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4536:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$839_storage",
                            "typeString": "struct ERC735.Claim storage ref"
                          }
                        },
                        "id": 284,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "signature",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 834,
                        "src": "4536:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 285,
                            "name": "claims",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "4576:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                            }
                          },
                          "id": 287,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 286,
                            "name": "_claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 254,
                            "src": "4583:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4576:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$839_storage",
                            "typeString": "struct ERC735.Claim storage ref"
                          }
                        },
                        "id": 288,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 836,
                        "src": "4576:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 289,
                            "name": "claims",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "4611:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                            }
                          },
                          "id": 291,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 290,
                            "name": "_claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 254,
                            "src": "4618:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4611:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$839_storage",
                            "typeString": "struct ERC735.Claim storage ref"
                          }
                        },
                        "id": 292,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "uri",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 838,
                        "src": "4611:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "id": 293,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4408:233:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_storage_$_t_bytes_storage_$_t_string_storage_$",
                      "typeString": "tuple(uint256,uint256,address,bytes storage ref,bytes storage ref,string storage ref)"
                    }
                  },
                  "functionReturnParameters": 268,
                  "id": 294,
                  "nodeType": "Return",
                  "src": "4401:240:0"
                }
              ]
            },
            "documentation": "@notice Implementation of the getClaim function from the ERC-735 standard.\n    * @param _claimId The identity of the claim i.e. keccak256(address issuer_address + uint256 claimType)\n    * @return Returns all the parameters of the claim for the specified _claimId (claimType, scheme, signature, issuer, data, uri) .",
            "id": 296,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getClaim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 254,
                  "name": "_claimId",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "4147:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 253,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4147:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4146:18:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 257,
                  "name": "claimType",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "4226:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4226:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 259,
                  "name": "scheme",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "4257:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 258,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4257:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 261,
                  "name": "issuer",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "4285:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 260,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4285:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 263,
                  "name": "signature",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "4313:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 262,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4313:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 265,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "4342:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4342:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 267,
                  "name": "uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "4366:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 266,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4366:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4212:174:0"
            },
            "scope": 310,
            "src": "4129:519:0",
            "stateMutability": "view",
            "superFunction": 856,
            "visibility": "public"
          },
          {
            "body": {
              "id": 308,
              "nodeType": "Block",
              "src": "5117:48:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 304,
                      "name": "claimsByType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "5134:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$",
                        "typeString": "mapping(uint256 => bytes32[] storage ref)"
                      }
                    },
                    "id": 306,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 305,
                      "name": "_claimType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 298,
                      "src": "5147:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5134:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "functionReturnParameters": 303,
                  "id": 307,
                  "nodeType": "Return",
                  "src": "5127:31:0"
                }
              ]
            },
            "documentation": "@notice Implementation of the getClaimIdsByTopic function from the ERC-735 standard.\nused to get all the claims from the specified claimType\n    * @param _claimType The identity of the claim i.e. keccak256(address issuer_address + uint256 claimType)\n    * @return Returns an array of claim IDs by claimType.",
            "id": 309,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getClaimIdsByType",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 298,
                  "name": "_claimType",
                  "nodeType": "VariableDeclaration",
                  "scope": 309,
                  "src": "5025:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 297,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5025:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5024:20:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 302,
                  "name": "claimIds",
                  "nodeType": "VariableDeclaration",
                  "scope": 309,
                  "src": "5093:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 300,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "5093:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 301,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5093:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5092:20:0"
            },
            "scope": 310,
            "src": "4998:167:0",
            "stateMutability": "view",
            "superFunction": 864,
            "visibility": "public"
          }
        ],
        "scope": 311,
        "src": "76:5091:0"
      }
    ],
    "src": "0:5167:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/ClaimHolder.sol",
    "exportedSymbols": {
      "ClaimHolder": [
        310
      ]
    },
    "id": 311,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/ERC735.sol",
        "file": "./ERC735.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 311,
        "sourceUnit": 890,
        "src": "26:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/quanth/Documents/DecentralizedTwitter/contracts/Identity/KeyHolder.sol",
        "file": "./KeyHolder.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 311,
        "sourceUnit": 1721,
        "src": "49:25:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "KeyHolder",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1720,
              "src": "100:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KeyHolder_$1720",
                "typeString": "contract KeyHolder"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "100:9:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "ERC735",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 889,
              "src": "111:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC735_$889",
                "typeString": "contract ERC735"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "111:6:0"
          }
        ],
        "contractDependencies": [
          760,
          889,
          1720
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 310,
        "linearizedBaseContracts": [
          310,
          889,
          1720,
          760
        ],
        "name": "ClaimHolder",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 11,
            "name": "claims",
            "nodeType": "VariableDeclaration",
            "scope": 310,
            "src": "125:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
              "typeString": "mapping(bytes32 => struct ERC735.Claim)"
            },
            "typeName": {
              "id": 10,
              "keyType": {
                "id": 8,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "134:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "125:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                "typeString": "mapping(bytes32 => struct ERC735.Claim)"
              },
              "valueType": {
                "contractScope": null,
                "id": 9,
                "name": "Claim",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 839,
                "src": "145:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Claim_$839_storage_ptr",
                  "typeString": "struct ERC735.Claim"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 16,
            "name": "claimsByType",
            "nodeType": "VariableDeclaration",
            "scope": 310,
            "src": "164:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$",
              "typeString": "mapping(uint256 => bytes32[])"
            },
            "typeName": {
              "id": 15,
              "keyType": {
                "id": 12,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "173:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "164:30:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$",
                "typeString": "mapping(uint256 => bytes32[])"
              },
              "valueType": {
                "baseType": {
                  "id": 13,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "184:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "id": 14,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "184:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                  "typeString": "bytes32[]"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 24,
              "nodeType": "Block",
              "src": "268:3:0",
              "statements": []
            },
            "documentation": null,
            "id": 25,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 21,
                    "name": "_backupKey",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 18,
                    "src": "256:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 22,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 20,
                  "name": "KeyHolder",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1720,
                  "src": "246:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_KeyHolder_$1720_$",
                    "typeString": "type(contract KeyHolder)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "246:21:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18,
                  "name": "_backupKey",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "226:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "226:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "225:20:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "268:0:0"
            },
            "scope": 310,
            "src": "214:57:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 137,
              "nodeType": "Block",
              "src": "1645:798:0",
              "statements": [
                {
                  "assignments": [
                    43
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43,
                      "name": "claimId",
                      "nodeType": "VariableDeclaration",
                      "scope": 138,
                      "src": "1655:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 42,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1655:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 48,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 45,
                        "name": "_issuer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "1683:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 46,
                        "name": "_claimType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "1692:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 44,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2235,
                      "src": "1673:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                        "typeString": "function () pure returns (bytes32)"
                      }
                    },
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1673:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1655:48:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 49,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2241,
                        "src": "1718:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 50,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1718:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 52,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2260,
                          "src": "1740:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ClaimHolder_$310",
                            "typeString": "contract ClaimHolder"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ClaimHolder_$310",
                            "typeString": "contract ClaimHolder"
                          }
                        ],
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1732:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 53,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1732:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1718:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 67,
                  "nodeType": "IfStatement",
                  "src": "1714:147:0",
                  "trueBody": {
                    "id": 66,
                    "nodeType": "Block",
                    "src": "1747:114:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 58,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2241,
                                        "src": "1793:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 59,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "1793:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 57,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2235,
                                    "src": "1783:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                                      "typeString": "function () pure returns (bytes32)"
                                    }
                                  },
                                  "id": 60,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1783:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "hexValue": "33",
                                  "id": 61,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1806:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3_by_1",
                                    "typeString": "int_const 3"
                                  },
                                  "value": "3"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_3_by_1",
                                    "typeString": "int_const 3"
                                  }
                                ],
                                "id": 56,
                                "name": "keyHasPurpose",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1719,
                                "src": "1769:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,uint256) view returns (bool)"
                                }
                              },
                              "id": 62,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1769:39:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "53656e64657220646f6573206e6f74206861766520636c61696d207369676e6572206b6579",
                              "id": 63,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1810:39:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_43a05665781b32cc8024b11b99adbd97618bb3fd5a923c29ee6dfc9548ed823a",
                                "typeString": "literal_string \"Sender does not have claim signer key\""
                              },
                              "value": "Sender does not have claim signer key"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_43a05665781b32cc8024b11b99adbd97618bb3fd5a923c29ee6dfc9548ed823a",
                                "typeString": "literal_string \"Sender does not have claim signer key\""
                              }
                            ],
                            "id": 55,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2244,
                              2245
                            ],
                            "referencedDeclaration": 2245,
                            "src": "1761:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 64,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1761:89:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 65,
                        "nodeType": "ExpressionStatement",
                        "src": "1761:89:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 68,
                          "name": "claims",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "1875:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                            "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                          }
                        },
                        "id": 70,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 69,
                          "name": "claimId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "1882:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1875:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$839_storage",
                          "typeString": "struct ERC735.Claim storage ref"
                        }
                      },
                      "id": 71,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "issuer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 832,
                      "src": "1875:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 72,
                      "name": "_issuer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "1901:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1875:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 82,
                  "nodeType": "IfStatement",
                  "src": "1871:102:0",
                  "trueBody": {
                    "id": 81,
                    "nodeType": "Block",
                    "src": "1910:63:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 78,
                              "name": "claimId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43,
                              "src": "1954:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 74,
                                "name": "claimsByType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16,
                                "src": "1924:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$",
                                  "typeString": "mapping(uint256 => bytes32[] storage ref)"
                                }
                              },
                              "id": 76,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 75,
                                "name": "_claimType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27,
                                "src": "1937:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1924:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                "typeString": "bytes32[] storage ref"
                              }
                            },
                            "id": 77,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1924:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$_t_uint256_$",
                              "typeString": "function (bytes32) returns (uint256)"
                            }
                          },
                          "id": 79,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1924:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 80,
                        "nodeType": "ExpressionStatement",
                        "src": "1924:38:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 83,
                          "name": "claims",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "1983:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                            "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                          }
                        },
                        "id": 85,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 84,
                          "name": "claimId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "1990:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1983:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$839_storage",
                          "typeString": "struct ERC735.Claim storage ref"
                        }
                      },
                      "id": 86,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "claimType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 828,
                      "src": "1983:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 87,
                      "name": "_claimType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "2011:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1983:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "1983:38:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 90,
                          "name": "claims",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "2031:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                            "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                          }
                        },
                        "id": 92,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 91,
                          "name": "claimId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "2038:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2031:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$839_storage",
                          "typeString": "struct ERC735.Claim storage ref"
                        }
                      },
                      "id": 93,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "scheme",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 830,
                      "src": "2031:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 94,
                      "name": "_scheme",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "2056:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2031:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 96,
                  "nodeType": "ExpressionStatement",
                  "src": "2031:32:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 97,
                          "name": "claims",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "2073:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                            "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                          }
                        },
                        "id": 99,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 98,
                          "name": "claimId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "2080:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2073:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$839_storage",
                          "typeString": "struct ERC735.Claim storage ref"
                        }
                      },
                      "id": 100,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "issuer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 832,
                      "src": "2073:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 101,
                      "name": "_issuer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "2098:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2073:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "2073:32:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 104,
                          "name": "claims",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "2115:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                            "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                          }
                        },
                        "id": 106,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 105,
                          "name": "claimId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "2122:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2115:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$839_storage",
                          "typeString": "struct ERC735.Claim storage ref"
                        }
                      },
                      "id": 107,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "signature",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 834,
                      "src": "2115:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 108,
                      "name": "_signature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "2143:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "2115:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "2115:38:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 111,
                          "name": "claims",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "2163:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                            "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                          }
                        },
                        "id": 113,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 112,
                          "name": "claimId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "2170:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2163:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$839_storage",
                          "typeString": "struct ERC735.Claim storage ref"
                        }
                      },
                      "id": 114,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "data",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 836,
                      "src": "2163:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 115,
                      "name": "_data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "2186:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "2163:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "2163:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 118,
                          "name": "claims",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "2201:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                            "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                          }
                        },
                        "id": 120,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 119,
                          "name": "claimId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "2208:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2201:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$839_storage",
                          "typeString": "struct ERC735.Claim storage ref"
                        }
                      },
                      "id": 121,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "uri",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 838,
                      "src": "2201:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 122,
                      "name": "_uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "2223:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2201:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "2201:26:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 126,
                        "name": "claimId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "2267:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 127,
                        "name": "_claimType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "2288:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 128,
                        "name": "_scheme",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "2312:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 129,
                        "name": "_issuer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "2333:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 130,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "2354:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 131,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "2378:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 132,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "2397:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 125,
                      "name": "ClaimAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 794,
                      "src": "2243:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,uint256,uint256,address,bytes memory,bytes memory,string memory)"
                      }
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2243:168:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 134,
                  "nodeType": "EmitStatement",
                  "src": "2238:173:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 135,
                    "name": "claimId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 43,
                    "src": "2429:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 41,
                  "id": 136,
                  "nodeType": "Return",
                  "src": "2422:14:0"
                }
              ]
            },
            "documentation": "@notice Implementation of the addClaim function from the ERC-735 standard\n Require that the msg.sender has claim signer key.\n    * @param _claimType The type of claim\n@param _scheme The scheme with which this claim SHOULD be verified or how it should be processed.\n@param _issuer The issuers identity contract address, or the address used to sign the above signature.\n@param _signature Signature which is the proof that the claim issuer issued a claim of claimType for this identity.\nit MUST be a signed message of the following structure: keccak256(address identityHolder_address, uint256 _ claimType, bytes data)\nor keccak256(abi.encode(identityHolder_address, claimType, data))\n@param _data The hash of the claim data, sitting in another location, a bit-mask, call data, or actual data based on the claim scheme.\n@param _uri The location of the claim, this can be HTTP links, swarm hashes, IPFS hashes, and such.\n    * @return Returns claimRequestId: COULD be send to the approve function, to approve or reject this claim.\ntriggers ClaimAdded event.",
            "id": 138,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "addClaim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "name": "_claimType",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "1442:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1442:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29,
                  "name": "_scheme",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "1470:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1470:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "name": "_issuer",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "1495:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1495:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "name": "_signature",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "1520:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1520:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "1546:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1546:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "1567:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1567:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1432:152:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "name": "claimRequestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "1617:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1617:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1616:24:0"
            },
            "scope": 310,
            "src": "1415:1028:0",
            "stateMutability": "nonpayable",
            "superFunction": 881,
            "visibility": "public"
          },
          {
            "body": {
              "id": 251,
              "nodeType": "Block",
              "src": "2951:827:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 145,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2241,
                        "src": "2965:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2965:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 148,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2260,
                          "src": "2987:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ClaimHolder_$310",
                            "typeString": "contract ClaimHolder"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ClaimHolder_$310",
                            "typeString": "contract ClaimHolder"
                          }
                        ],
                        "id": 147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2979:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2979:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2965:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 163,
                  "nodeType": "IfStatement",
                  "src": "2961:145:0",
                  "trueBody": {
                    "id": 162,
                    "nodeType": "Block",
                    "src": "2994:112:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 154,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2241,
                                        "src": "3040:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 155,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "3040:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 153,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2235,
                                    "src": "3030:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                                      "typeString": "function () pure returns (bytes32)"
                                    }
                                  },
                                  "id": 156,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3030:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 157,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3053:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  }
                                ],
                                "id": 152,
                                "name": "keyHasPurpose",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1719,
                                "src": "3016:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,uint256) view returns (bool)"
                                }
                              },
                              "id": 158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3016:39:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "53656e64657220646f6573206e6f742068617665206d616e6167656d656e74206b6579",
                              "id": 159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3057:37:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ac6b3bc9d0622dda8fc2f421b9f671767c5b983d0415995ab909c75c3ef27f29",
                                "typeString": "literal_string \"Sender does not have management key\""
                              },
                              "value": "Sender does not have management key"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ac6b3bc9d0622dda8fc2f421b9f671767c5b983d0415995ab909c75c3ef27f29",
                                "typeString": "literal_string \"Sender does not have management key\""
                              }
                            ],
                            "id": 151,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2244,
                              2245
                            ],
                            "referencedDeclaration": 2245,
                            "src": "3008:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3008:87:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 161,
                        "nodeType": "ExpressionStatement",
                        "src": "3008:87:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 165,
                        "name": "_claimId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "3147:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 166,
                            "name": "claims",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "3169:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                            }
                          },
                          "id": 168,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 167,
                            "name": "_claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "3176:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3169:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$839_storage",
                            "typeString": "struct ERC735.Claim storage ref"
                          }
                        },
                        "id": 169,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "claimType",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 828,
                        "src": "3169:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 170,
                            "name": "claims",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "3209:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                            }
                          },
                          "id": 172,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 171,
                            "name": "_claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "3216:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3209:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$839_storage",
                            "typeString": "struct ERC735.Claim storage ref"
                          }
                        },
                        "id": 173,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "scheme",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 830,
                        "src": "3209:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 174,
                            "name": "claims",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "3246:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                            }
                          },
                          "id": 176,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 175,
                            "name": "_claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "3253:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3246:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$839_storage",
                            "typeString": "struct ERC735.Claim storage ref"
                          }
                        },
                        "id": 177,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "issuer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 832,
                        "src": "3246:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 178,
                            "name": "claims",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "3283:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                            }
                          },
                          "id": 180,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 179,
                            "name": "_claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "3290:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3283:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$839_storage",
                            "typeString": "struct ERC735.Claim storage ref"
                          }
                        },
                        "id": 181,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "signature",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 834,
                        "src": "3283:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 182,
                            "name": "claims",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "3323:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                            }
                          },
                          "id": 184,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 183,
                            "name": "_claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "3330:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3323:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$839_storage",
                            "typeString": "struct ERC735.Claim storage ref"
                          }
                        },
                        "id": 185,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 836,
                        "src": "3323:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 186,
                            "name": "claims",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "3358:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                            }
                          },
                          "id": 188,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 187,
                            "name": "_claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "3365:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3358:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$839_storage",
                            "typeString": "struct ERC735.Claim storage ref"
                          }
                        },
                        "id": 189,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "uri",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 838,
                        "src": "3358:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 164,
                      "name": "ClaimRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 810,
                      "src": "3121:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,uint256,uint256,address,bytes memory,bytes memory,string memory)"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3121:267:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "EmitStatement",
                  "src": "3116:272:0"
                },
                {
                  "assignments": [
                    195
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 195,
                      "name": "claimList",
                      "nodeType": "VariableDeclaration",
                      "scope": 252,
                      "src": "3399:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 193,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3399:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 194,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3399:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 202,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 196,
                      "name": "claimsByType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "3421:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$",
                        "typeString": "mapping(uint256 => bytes32[] storage ref)"
                      }
                    },
                    "id": 201,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 197,
                          "name": "claims",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "3434:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                            "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                          }
                        },
                        "id": 199,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 198,
                          "name": "_claimId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 140,
                          "src": "3441:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3434:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$839_storage",
                          "typeString": "struct ERC735.Claim storage ref"
                        }
                      },
                      "id": 200,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claimType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 828,
                      "src": "3434:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3421:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3399:62:0"
                },
                {
                  "body": {
                    "id": 242,
                    "nodeType": "Block",
                    "src": "3513:203:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 214,
                              "name": "claimList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 195,
                              "src": "3530:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                "typeString": "bytes32[] storage pointer"
                              }
                            },
                            "id": 216,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 215,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 204,
                              "src": "3540:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3530:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 217,
                            "name": "_claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "3546:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "3530:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 241,
                        "nodeType": "IfStatement",
                        "src": "3527:179:0",
                        "trueBody": {
                          "id": 240,
                          "nodeType": "Block",
                          "src": "3556:150:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 222,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "3574:19:0",
                                "subExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 219,
                                    "name": "claimList",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 195,
                                    "src": "3581:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                      "typeString": "bytes32[] storage pointer"
                                    }
                                  },
                                  "id": 221,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 220,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 204,
                                    "src": "3591:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3581:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 223,
                              "nodeType": "ExpressionStatement",
                              "src": "3574:19:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 233,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 224,
                                    "name": "claimList",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 195,
                                    "src": "3611:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                      "typeString": "bytes32[] storage pointer"
                                    }
                                  },
                                  "id": 226,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 225,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 204,
                                    "src": "3621:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3611:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 227,
                                    "name": "claimList",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 195,
                                    "src": "3626:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                      "typeString": "bytes32[] storage pointer"
                                    }
                                  },
                                  "id": 232,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 231,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 228,
                                        "name": "claimList",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 195,
                                        "src": "3636:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                          "typeString": "bytes32[] storage pointer"
                                        }
                                      },
                                      "id": 229,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "3636:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "31",
                                      "id": 230,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3653:1:0",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "3636:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3626:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "3611:44:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 234,
                              "nodeType": "ExpressionStatement",
                              "src": "3611:44:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 238,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "--",
                                "prefix": false,
                                "src": "3673:18:0",
                                "subExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 235,
                                    "name": "claimList",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 195,
                                    "src": "3673:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                      "typeString": "bytes32[] storage pointer"
                                    }
                                  },
                                  "id": 237,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "3673:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 239,
                              "nodeType": "ExpressionStatement",
                              "src": "3673:18:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 207,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 204,
                      "src": "3488:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 208,
                        "name": "claimList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "3490:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[] storage pointer"
                        }
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3490:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3488:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 243,
                  "initializationExpression": {
                    "assignments": [
                      204
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 204,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 252,
                        "src": "3476:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 203,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3476:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 206,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3485:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3476:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3508:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 211,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 204,
                        "src": "3508:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 213,
                    "nodeType": "ExpressionStatement",
                    "src": "3508:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "3472:244:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3726:23:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 244,
                        "name": "claims",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "3733:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                          "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                        }
                      },
                      "id": 246,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 245,
                        "name": "_claimId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "3740:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3733:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$839_storage",
                        "typeString": "struct ERC735.Claim storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 248,
                  "nodeType": "ExpressionStatement",
                  "src": "3726:23:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3767:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 144,
                  "id": 250,
                  "nodeType": "Return",
                  "src": "3760:11:0"
                }
              ]
            },
            "documentation": "@notice Implementation of the removeClaim function from the ERC-735 standard\nRequire that the msg.sender has management key.\nCan only be removed by the claim issuer, or the claim holder itself.\n    * @param _claimId The identity of the claim i.e. keccak256(address issuer_address + uint256 claimType)\n    * @return Returns TRUE when the claim was removed.\ntriggers ClaimRemoved event",
            "id": 252,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "removeClaim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 140,
                  "name": "_claimId",
                  "nodeType": "VariableDeclaration",
                  "scope": 252,
                  "src": "2903:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 139,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2903:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2902:18:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 143,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 252,
                  "src": "2937:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2937:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2936:14:0"
            },
            "scope": 310,
            "src": "2882:896:0",
            "stateMutability": "nonpayable",
            "superFunction": 888,
            "visibility": "public"
          },
          {
            "body": {
              "id": 295,
              "nodeType": "Block",
              "src": "4391:257:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 269,
                            "name": "claims",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "4422:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                            }
                          },
                          "id": 271,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 270,
                            "name": "_claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 254,
                            "src": "4429:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4422:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$839_storage",
                            "typeString": "struct ERC735.Claim storage ref"
                          }
                        },
                        "id": 272,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "claimType",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 828,
                        "src": "4422:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 273,
                            "name": "claims",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "4462:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                            }
                          },
                          "id": 275,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 274,
                            "name": "_claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 254,
                            "src": "4469:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4462:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$839_storage",
                            "typeString": "struct ERC735.Claim storage ref"
                          }
                        },
                        "id": 276,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "scheme",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 830,
                        "src": "4462:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 277,
                            "name": "claims",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "4499:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                            }
                          },
                          "id": 279,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 278,
                            "name": "_claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 254,
                            "src": "4506:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4499:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$839_storage",
                            "typeString": "struct ERC735.Claim storage ref"
                          }
                        },
                        "id": 280,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "issuer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 832,
                        "src": "4499:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 281,
                            "name": "claims",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "4536:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                            }
                          },
                          "id": 283,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 282,
                            "name": "_claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 254,
                            "src": "4543:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4536:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$839_storage",
                            "typeString": "struct ERC735.Claim storage ref"
                          }
                        },
                        "id": 284,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "signature",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 834,
                        "src": "4536:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 285,
                            "name": "claims",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "4576:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                            }
                          },
                          "id": 287,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 286,
                            "name": "_claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 254,
                            "src": "4583:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4576:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$839_storage",
                            "typeString": "struct ERC735.Claim storage ref"
                          }
                        },
                        "id": 288,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 836,
                        "src": "4576:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 289,
                            "name": "claims",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "4611:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$839_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC735.Claim storage ref)"
                            }
                          },
                          "id": 291,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 290,
                            "name": "_claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 254,
                            "src": "4618:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4611:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$839_storage",
                            "typeString": "struct ERC735.Claim storage ref"
                          }
                        },
                        "id": 292,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "uri",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 838,
                        "src": "4611:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "id": 293,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4408:233:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_storage_$_t_bytes_storage_$_t_string_storage_$",
                      "typeString": "tuple(uint256,uint256,address,bytes storage ref,bytes storage ref,string storage ref)"
                    }
                  },
                  "functionReturnParameters": 268,
                  "id": 294,
                  "nodeType": "Return",
                  "src": "4401:240:0"
                }
              ]
            },
            "documentation": "@notice Implementation of the getClaim function from the ERC-735 standard.\n    * @param _claimId The identity of the claim i.e. keccak256(address issuer_address + uint256 claimType)\n    * @return Returns all the parameters of the claim for the specified _claimId (claimType, scheme, signature, issuer, data, uri) .",
            "id": 296,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getClaim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 254,
                  "name": "_claimId",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "4147:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 253,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4147:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4146:18:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 257,
                  "name": "claimType",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "4226:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4226:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 259,
                  "name": "scheme",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "4257:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 258,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4257:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 261,
                  "name": "issuer",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "4285:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 260,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4285:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 263,
                  "name": "signature",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "4313:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 262,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4313:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 265,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "4342:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4342:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 267,
                  "name": "uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "4366:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 266,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4366:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4212:174:0"
            },
            "scope": 310,
            "src": "4129:519:0",
            "stateMutability": "view",
            "superFunction": 856,
            "visibility": "public"
          },
          {
            "body": {
              "id": 308,
              "nodeType": "Block",
              "src": "5117:48:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 304,
                      "name": "claimsByType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "5134:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$",
                        "typeString": "mapping(uint256 => bytes32[] storage ref)"
                      }
                    },
                    "id": 306,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 305,
                      "name": "_claimType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 298,
                      "src": "5147:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5134:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "functionReturnParameters": 303,
                  "id": 307,
                  "nodeType": "Return",
                  "src": "5127:31:0"
                }
              ]
            },
            "documentation": "@notice Implementation of the getClaimIdsByTopic function from the ERC-735 standard.\nused to get all the claims from the specified claimType\n    * @param _claimType The identity of the claim i.e. keccak256(address issuer_address + uint256 claimType)\n    * @return Returns an array of claim IDs by claimType.",
            "id": 309,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getClaimIdsByType",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 298,
                  "name": "_claimType",
                  "nodeType": "VariableDeclaration",
                  "scope": 309,
                  "src": "5025:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 297,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5025:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5024:20:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 302,
                  "name": "claimIds",
                  "nodeType": "VariableDeclaration",
                  "scope": 309,
                  "src": "5093:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 300,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "5093:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 301,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5093:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5092:20:0"
            },
            "scope": 310,
            "src": "4998:167:0",
            "stateMutability": "view",
            "superFunction": 864,
            "visibility": "public"
          }
        ],
        "scope": 311,
        "src": "76:5091:0"
      }
    ],
    "src": "0:5167:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-11-25T09:05:39.749Z",
  "devdoc": {
    "methods": {
      "addClaim(uint256,uint256,address,bytes,bytes,string)": {
        "params": {
          "_claimType": "The type of claim",
          "_data": "The hash of the claim data, sitting in another location, a bit-mask, call data, or actual data based on the claim scheme.",
          "_issuer": "The issuers identity contract address, or the address used to sign the above signature.",
          "_scheme": "The scheme with which this claim SHOULD be verified or how it should be processed.",
          "_signature": "Signature which is the proof that the claim issuer issued a claim of claimType for this identity. it MUST be a signed message of the following structure: keccak256(address identityHolder_address, uint256 _ claimType, bytes data) or keccak256(abi.encode(identityHolder_address, claimType, data))",
          "_uri": "The location of the claim, this can be HTTP links, swarm hashes, IPFS hashes, and such."
        },
        "return": "Returns claimRequestId: COULD be send to the approve function, to approve or reject this claim. triggers ClaimAdded event."
      },
      "addKey(bytes32,uint256,uint256)": {
        "params": {
          "_key": "keccak256 representation of an ethereum address",
          "_purpose": "a uint256[] Array of the key types, like 1 = MANAGEMENT, 2 = ACTION, 3 = CLAIM, 4 = ENCRYPTION",
          "_type": "type of key used, which would be a uint256 for different key types. e.g. 1 = ECDSA, 2 = RSA, etc."
        },
        "return": "Returns TRUE if the addition was successful and FALSE if not"
      },
      "getClaim(bytes32)": {
        "params": {
          "_claimId": "The identity of the claim i.e. keccak256(address issuer_address + uint256 claimType)"
        },
        "return": "Returns all the parameters of the claim for the specified _claimId (claimType, scheme, signature, issuer, data, uri) ."
      },
      "getClaimIdsByType(uint256)": {
        "params": {
          "_claimType": "The identity of the claim i.e. keccak256(address issuer_address + uint256 claimType)"
        },
        "return": "Returns an array of claim IDs by claimType."
      },
      "getKey(bytes32)": {
        "params": {
          "_key": "The public key.  for non-hex and long keys, its the Keccak256 hash of the key"
        },
        "return": "Returns the full key data, if present in the identity."
      },
      "getKeyPurpose(bytes32)": {
        "params": {
          "_key": "The public key.  for non-hex and long keys, its the Keccak256 hash of the key"
        },
        "return": "Returns the purpose of the specified key"
      },
      "getKeysByPurpose(uint256)": {
        "params": {
          "_purpose": "a uint256[] Array of the key types, like 1 = MANAGEMENT, 2 = ACTION, 3 = CLAIM, 4 = ENCRYPTION"
        },
        "return": "Returns an array of public key bytes32 hold by this identity and having the specified purpose"
      },
      "removeClaim(bytes32)": {
        "params": {
          "_claimId": "The identity of the claim i.e. keccak256(address issuer_address + uint256 claimType)"
        },
        "return": "Returns TRUE when the claim was removed. triggers ClaimRemoved event"
      }
    }
  },
  "userdoc": {
    "methods": {
      "addClaim(uint256,uint256,address,bytes,bytes,string)": {
        "notice": "Implementation of the addClaim function from the ERC-735 standard Require that the msg.sender has claim signer key."
      },
      "addKey(bytes32,uint256,uint256)": {
        "notice": "implementation of the addKey function of the ERC-725 standard Adds a _key to the identity. The _purpose specifies the purpose of key. Initially we propose four purposes: 1: MANAGEMENT keys, which can manage the identity 2: ACTION keys, which perform actions in this identities name (signing, logins, transactions, etc.) 3: CLAIM signer keys, used to sign claims on other identities which need to be revokable. 4: ENCRYPTION keys, used to encrypt data e.g. hold in claims. MUST only be done by keys of purpose 1, or the identity itself. If its the identity itself, the approval process will determine its approval."
      },
      "getClaim(bytes32)": {
        "notice": "Implementation of the getClaim function from the ERC-735 standard."
      },
      "getClaimIdsByType(uint256)": {
        "notice": "Implementation of the getClaimIdsByTopic function from the ERC-735 standard. used to get all the claims from the specified claimType"
      },
      "getKey(bytes32)": {
        "notice": "Implementation of the getKey function from the ERC-725 standard"
      },
      "getKeyPurpose(bytes32)": {
        "notice": "gets the purpose of a key"
      },
      "getKeysByPurpose(uint256)": {
        "notice": "gets all the keys with a specific purpose from an identity"
      },
      "removeClaim(bytes32)": {
        "notice": "Implementation of the removeClaim function from the ERC-735 standard Require that the msg.sender has management key. Can only be removed by the claim issuer, or the claim holder itself."
      }
    }
  }
}